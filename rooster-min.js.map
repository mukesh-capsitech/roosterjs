{"version":3,"file":"rooster-min.js","mappings":"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","sources":["webpack://roosterjs/./node_modules/color-convert/conversions.js","webpack://roosterjs/./node_modules/color-convert/index.js","webpack://roosterjs/./node_modules/color-convert/route.js","webpack://roosterjs/./node_modules/color-name/index.js","webpack://roosterjs/./node_modules/color-string/index.js","webpack://roosterjs/./node_modules/color/index.js","webpack://roosterjs/./node_modules/is-arrayish/index.js","webpack://roosterjs/./node_modules/simple-swizzle/index.js","webpack://roosterjs/./packages/roosterjs-color-utils/lib/index.ts","webpack://roosterjs/./packages/roosterjs-color-utils/lib/utils/getDarkColor.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/changeCapitalization.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/changeFontSize.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/clearBlockFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/clearFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/createLink.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/getFormatState.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/insertEntity.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/insertImage.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/removeLink.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/replaceWithNode.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/rotateElement.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setAlignment.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setBackgroundColor.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setDirection.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setFontName.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setFontSize.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setHeadingLevel.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setImageAltText.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setIndentation.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setOrderedListNumbering.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setTextColor.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleBlockQuote.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleBold.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleBullet.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleCodeBlock.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleItalic.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleNumbering.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleStrikethrough.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleSubscript.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleSuperscript.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleUnderline.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/table/applyCellShading.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/table/editTable.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/table/formatTable.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/table/insertTable.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/applyInlineStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/applyListItemWrap.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/blockFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/blockWrap.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/collapseSelectedBlocks.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/commitListChains.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/execCommand.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/formatUndoSnapshot.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/normalizeBlockquote.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/toggleListType.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/addUndoSnapshot.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/attachDomEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/coreApiMap.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/createPasteFragment.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/ensureTypeInContainer.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/focus.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/getContent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/getPendableFormatState.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/getSelectionRange.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/getSelectionRangeEx.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/getStyleBasedFormatState.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/hasFocus.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/insertNode.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/restoreUndoSnapshot.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/select.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/selectImage.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/selectRange.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/selectTable.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/setContent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/switchShadowEdit.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/transformColor.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/triggerEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreApi/utils/addUniqueId.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/CopyPastePlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/DOMEventPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/EditPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/EntityPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/ImageSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/LifecyclePlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/MouseUpPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/NormalizeTablePlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/PendingFormatStatePlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/TypeInContainerPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/UndoPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/createCorePlugins.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/utils/forEachSelectedCell.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/utils/inlineEntityOnPluginEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/utils/removeCellsOutsideSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/DarkColorHandlerImpl.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/Editor.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/EditorBase.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/createEditorCore.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/isFeatureEnabled.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/NodeBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/StartEndBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/getBlockElementAtNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/getFirstLastBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/extractClipboardEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/extractClipboardItems.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/extractClipboardItemsForIE.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/getPasteType.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/handleImagePaste.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/handleTextPaste.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/retrieveMetadataFromClipboard.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/clipboard/sanitizePasteContent.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/BodyScoper.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/ContentTraverser.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/PositionContentSearcher.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/SelectionBlockScoper.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/SelectionScoper.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/delimiter/addDelimiters.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/delimiter/getDelimiterFromElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/edit/adjustInsertPosition.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/edit/deleteSelectedContent.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/edit/getTextContent.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/entity/commitEntity.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/entity/entityPlaceholderUtils.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/entity/getEntityFromElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/entity/getEntitySelector.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/event/cacheGetEventData.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/event/clearEventDataCache.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/event/isCharacterValue.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/event/isCtrlOrMetaPressed.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/event/isModifierKey.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/HtmlSanitizer.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/chainSanitizerCallback.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/cloneObject.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/createDefaultHtmlSanitizerOptions.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/getAllowedValues.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/getInheritableStyles.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/getPredefinedCssForElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/htmlSanitizer/processCssVariable.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/EmptyInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/ImageInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/LinkInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/NodeInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/PartialInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/applyTextStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/getFirstLastInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/getInlineElementAtNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/getInlineElementBeforeAfter.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/jsUtils/arrayPush.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/jsUtils/getObjectKeys.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/jsUtils/toArray.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/VList.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/VListChain.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/VListItem.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/convertDecimalsToAlpha.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/convertDecimalsToRomans.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/createVListFromRegion.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/getListTypeFromNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/getRootListNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/setBulletListMarkers.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/setListItemStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/list/setNumberingListMarkers.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/metadata/definitionCreators.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/metadata/metadata.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/metadata/validate.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/constants.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/documentContainWacElements.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/getPasteSource.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/isExcelDesktopDocument.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/isExcelOnlineDocument.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/isGoogleSheetDocument.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/isPowerPointDesktopDocument.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/isWordDesktopDocument.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/pasteSourceValidations/shouldConvertToSingleImage.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/region/collapseNodesInRegion.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/region/getRegionsFromRange.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/region/getSelectedBlockElementsInRegion.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/region/getSelectionRangeInRegion.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/region/isNodeInRegion.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/region/mergeBlocksInRegion.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/Position.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/addRangeToSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/createRange.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/getHtmlWithSelectionPath.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/getPositionRect.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/getSelectionPath.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/isPositionAtBeginningOf.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/setHtmlWithSelectionPath.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/snapshots/addSnapshot.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/snapshots/canMoveCurrentSnapshot.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/snapshots/canUndoAutoComplete.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/snapshots/clearProceedingSnapshots.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/snapshots/createSnapshots.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/snapshots/moveCurrentSnapshot.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/style/getStyles.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/style/removeGlobalCssStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/style/removeImportantStyleRule.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/style/setGlobalCssStyles.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/style/setStyles.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/VTable.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/applyTableFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/cloneCellStyles.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/isWholeTableSelected.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/pasteTable.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/tableCellInfo.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/tableFormatInfo.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/Browser.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/applyFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/changeElementTag.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/collapseNodes.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/contains.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/createElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/findClosestElementAncestor.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/fromHtml.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getComputedStyles.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getInnerHTML.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getIntersectedRect.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getLeafNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getLeafSibling.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getPendableFormatState.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getTagOfNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isNodeAfter.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isNodeEmpty.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isVoidHtmlElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/matchLink.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/matchesSelector.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/moveChildNodes.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/normalizeRect.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/parseColor.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/queryElements.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/readFile.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/safeInstanceOf.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/setColor.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/shouldSkipNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/splitParentNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/splitTextNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/unwrap.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/wrap.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Announce.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/AutoFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContextMenu.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/CustomReplace.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/CutPasteListChain.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/HyperLink.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ImageEdit.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ImageResize.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Picker.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/TableCellSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/TableResize.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Watermark.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/pluginUtils/DragAndDropHelper.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Announce/AnnouncePlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Announce/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/AutoFormat/AutoFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/AutoFormat/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/ContentEdit.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/autoLinkFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/codeFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/cursorFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/entityFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/listFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/markdownFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/quoteFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/shortcutFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/structuredNodeFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/tableFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/features/textFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/getAllFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/utils/convertAlphaToDecimals.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/utils/getAutoBulletListStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContentEdit/utils/getAutoNumberingListStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContextMenu/ContextMenu.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ContextMenu/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/CustomReplace/CustomReplace.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/CustomReplace/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/CutPasteListChain/CutPasteListChain.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/CutPasteListChain/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/HyperLink/HyperLink.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/HyperLink/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/ImageEdit.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/api/canRegenerateImage.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/api/isResizedTo.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/api/resetImage.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/api/resizeByPercentage.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/constants/constants.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/applyChange.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/checkEditInfoState.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/editInfo.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/generateDataURL.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/getGeneratedImageSize.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/getTargetSizeByPercentage.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/editInfoUtils/tryToConvertGifToPng.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/imageEditors/Cropper.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/imageEditors/Resizer.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/imageEditors/Rotator.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageEdit/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageResize/ImageResize.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/ImageResize/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/Paste.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/commonConverter/convertPastedContentForLI.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/excelConverter/convertPastedContentFromExcel.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/imageConverter/convertPasteContentForSingleImage.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/lineMerge/handleLineMerge.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/officeOnlineConverter/ListItemBlock.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/officeOnlineConverter/convertPastedContentFromOfficeOnline.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/officeOnlineConverter/convertPastedContentFromWordOnline.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/pptConverter/convertPastedContentFromPowerPoint.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/sanitizeHtmlColorsFromPastedContent/deprecatedColorList.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/sanitizeHtmlColorsFromPastedContent/sanitizeHtmlColorsFromPastedContent.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/sanitizeLinks/sanitizeLinks.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/LevelLists.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/WordConverterArguments.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/WordCustomData.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/commentsRemoval.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/convertPastedContentFromWord.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/converterUtils.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Paste/wordConverter/wordConverter.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Picker/PickerPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Picker/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/TableCellSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/constants.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/features/DeleteTableContents.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/keyUtils/handleKeyDownEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/keyUtils/handleKeyUpEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/mouseUtils/handleMouseDownEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/mouseUtils/handleScrollEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/clearState.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/getCellAtCursor.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/getCellCoordinates.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/getTableAtCursor.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/isAfter.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/normalizeTableSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/prepareSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/restoreSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/selectTable.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/setData.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableCellSelection/utils/updateSelection.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/TableResize.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/CellResizer.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/TableEditor.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/TableEditorFeature.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/TableInserter.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/TableResizer.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/editors/TableSelector.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/TableResize/index.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Watermark/Watermark.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/plugins/Watermark/index.ts","webpack://roosterjs/./packages/roosterjs-editor-types-compatible/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/Alignment.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/BulletListType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/Capitalization.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ChangeSource.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ClearFormatMode.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ColorTransformDirection.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ContentPosition.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ContentType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/DarkModeDatasetNames.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/DefinitionType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/DelimiterClasses.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/Direction.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/DocumentCommand.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/DocumentPosition.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/EntityClasses.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/EntityOperation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ExperimentalFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/FontSizeChange.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/GetContentMode.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ImageEditOperation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/Indentation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/Keys.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/KnownAnnounceStrings.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/KnownCreateElementDataIndex.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/KnownPasteSourceType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/ListType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/NodeType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/NumberingListType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/PasteType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/PluginEventType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/PositionType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/QueryScope.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/RegionType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/SelectionRangeTypes.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/TableBorderFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/TableOperation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleEnum/index.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/compatibleTypes.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/Alignment.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/BulletListType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/Capitalization.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ChangeSource.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ClearFormatMode.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ColorTransformDirection.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ContentPosition.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ContentType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/DarkModeDatasetNames.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/DefinitionType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/DelimiterClasses.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/Direction.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/DocumentCommand.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/DocumentPosition.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/EntityClasses.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/EntityOperation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ExperimentalFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/FontSizeChange.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/GetContentMode.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ImageEditOperation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/Indentation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/Keys.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/KnownAnnounceStrings.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/KnownCreateElementDataIndex.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/KnownPasteSourceType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/ListType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/NodeType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/NumberingListType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/PasteType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/PluginEventType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/PositionType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/QueryScope.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/RegionType.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/SelectionRangeTypes.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/TableBorderFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/TableOperation.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/enum/index.ts","webpack://roosterjs/./packages/roosterjs-editor-types/lib/index.ts","webpack://roosterjs/./packages/roosterjs/lib/createEditor.ts","webpack://roosterjs/./packages/roosterjs/lib/index.ts","webpack://roosterjs/./node_modules/tslib/tslib.es6.mjs","webpack://roosterjs/webpack/bootstrap","webpack://roosterjs/webpack/runtime/define property getters","webpack://roosterjs/webpack/runtime/hasOwnProperty shorthand","webpack://roosterjs/webpack/runtime/make namespace object","webpack://roosterjs/webpack/startup"],"sourcesContent":["/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","export { default as getDarkColor } from './utils/getDarkColor';\n","import * as Color from 'color';\n\nconst DefaultBaseLValue = 21.247; // L-value of #333333\n\n/**\n * Get dark mode color for a given color\n * @param color The color to calculate from\n * @param baseLValue The Light value for base dark color in LAB format. @default the Light value for #333333\n */\nexport default function getDarkColor(\n    color: string,\n    baseLValue: number = DefaultBaseLValue\n): string {\n    try {\n        const computedColor = Color(color || undefined);\n        const colorLab = computedColor.lab().array();\n        const newLValue = (100 - colorLab[0]) * ((100 - baseLValue) / 100) + baseLValue;\n        color = Color.lab(newLValue, colorLab[1], colorLab[2])\n            .rgb()\n            .alpha(computedColor.alpha())\n            .toString();\n    } catch {}\n\n    return color;\n}\n","import applyInlineStyle from '../utils/applyInlineStyle';\nimport { Capitalization, NodeType } from 'roosterjs-editor-types';\nimport { getFirstLeafNode, getNextLeafSibling } from 'roosterjs-editor-dom';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { CompatibleCapitalization } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * Change the capitalization of text in the selection\n * @param editor The editor instance\n * @param capitalization The case option\n * @param language Optional parameter for language string that should comply to \"IETF BCP 47 Tags for\n * Identifying Languages\". For example: 'en' or 'en-US' for English, 'tr' for Turkish.\n * Default is the host environment’s current locale.\n */\nexport default function changeCapitalization(\n    editor: IEditor,\n    capitalization: Capitalization | CompatibleCapitalization,\n    language?: string\n) {\n    applyInlineStyle(\n        editor,\n        element => {\n            for (\n                let node = getFirstLeafNode(element);\n                node;\n                node = getNextLeafSibling(element, node)\n            ) {\n                if (node.nodeType == NodeType.Text) {\n                    try {\n                        node.textContent = getCapitalizedText(node.textContent, language);\n                    } catch {\n                        node.textContent = getCapitalizedText(node.textContent, undefined);\n                    }\n                }\n            }\n        },\n        'changeCapitalization'\n    );\n\n    function getCapitalizedText(\n        originalText: string | null,\n        language: string | undefined\n    ): string | null {\n        if (originalText === null) {\n            return originalText;\n        }\n        switch (capitalization) {\n            case Capitalization.Lowercase:\n                return originalText.toLocaleLowerCase(language);\n            case Capitalization.Uppercase:\n                return originalText.toLocaleUpperCase(language);\n            case Capitalization.CapitalizeEachWord:\n                const wordArray = originalText.toLocaleLowerCase(language).split(' ');\n                for (let i = 0; i < wordArray.length; i++) {\n                    wordArray[i] =\n                        wordArray[i].charAt(0).toLocaleUpperCase(language) + wordArray[i].slice(1);\n                }\n                return wordArray.join(' ');\n            case Capitalization.Sentence:\n                // TODO: Add rules on punctuation for internationalization - TASK 104769\n                const punctuationMarks = '[\\\\.\\\\!\\\\?]';\n                // Find a match of a word character either:\n                // - At the beginning of a string with or without preceding whitespace, for\n                // example: '  hello world' and 'hello world' strings would both match 'h'.\n                // - Or preceded by a punctuation mark and at least one whitespace, for\n                // example 'yes. hello world' would match 'y' and 'h'.\n                const regex = new RegExp('^\\\\s*\\\\w|' + punctuationMarks + '\\\\s+\\\\w', 'g');\n                return originalText.toLocaleLowerCase(language).replace(regex, match => {\n                    return match.toLocaleUpperCase(language);\n                });\n            default:\n                return originalText;\n        }\n    }\n}\n","import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { FontSizeChange } from 'roosterjs-editor-types';\r\nimport { getComputedStyle } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\nimport type { CompatibleFontSizeChange } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Default font size sequence, in pt. Suggest editor UI use this sequence as your font size list,\r\n * So that when increase/decrease font size, the font size can match the sequence of your font size picker\r\n */\r\nexport const FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72];\r\nconst MIN_FONT_SIZE = 1;\r\nconst MAX_FONT_SIZE = 1000;\r\n\r\n/**\r\n * Increase or decrease font size in selection\r\n * @param editor The editor instance\r\n * @param change Whether increase or decrease font size\r\n * @param fontSizes A sorted font size array, in pt. Default value is FONT_SIZES\r\n */\r\nexport default function changeFontSize(\r\n    editor: IEditor,\r\n    change: FontSizeChange | CompatibleFontSizeChange,\r\n    fontSizes: number[] = FONT_SIZES\r\n) {\r\n    let changeBase: 1 | -1 = change == FontSizeChange.Increase ? 1 : -1;\r\n    applyInlineStyle(\r\n        editor,\r\n        element => {\r\n            let pt = parseFloat(getComputedStyle(element, 'font-size') || element.style.fontSize);\r\n            element.style.fontSize = getNewFontSize(pt, changeBase, fontSizes) + 'pt';\r\n            let lineHeight = getComputedStyle(element, 'line-height');\r\n            if (lineHeight && lineHeight != 'normal') {\r\n                element.style.lineHeight = 'normal';\r\n            }\r\n        },\r\n        'changeFontSize'\r\n    );\r\n}\r\n\r\n/**\r\n * @internal\r\n * Get new font size after increase/decrease. This is exported for test only\r\n * @param pt Original font size, in Point\r\n * @param changeBase Changed value, 1 means increase, -1 means decrease\r\n * @param fontSizes Known font size array\r\n */\r\nexport function getNewFontSize(pt: number, changeBase: 1 | -1, fontSizes: number[]): number {\r\n    pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n    let last = fontSizes[fontSizes.length - 1];\r\n    if (pt <= fontSizes[0]) {\r\n        pt = Math.max(pt + changeBase, MIN_FONT_SIZE);\r\n    } else if (pt > last || (pt == last && changeBase == 1)) {\r\n        pt = pt / 10;\r\n        pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n        pt = Math.min(Math.max((pt + changeBase) * 10, last), MAX_FONT_SIZE);\r\n    } else if (changeBase == 1) {\r\n        for (let i = 0; i < fontSizes.length; i++) {\r\n            if (pt < fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = fontSizes.length - 1; i >= 0; i--) {\r\n            if (pt > fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return pt;\r\n}\r\n","import clearFormat from './clearFormat';\r\nimport { ClearFormatMode } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @deprecated Use clearFormat instead and pass the ClearFormatMode.Block as parameter\r\n * @param editor The editor instance\r\n */\r\nexport default function clearBlockFormat(editor: IEditor) {\r\n    clearFormat(editor, ClearFormatMode.Block);\r\n}\r\n","import applyListItemStyleWrap from '../utils/applyListItemWrap';\r\nimport blockFormat from '../utils/blockFormat';\r\nimport execCommand from '../utils/execCommand';\r\nimport formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport setBackgroundColor from './setBackgroundColor';\r\nimport setFontName from './setFontName';\r\nimport setFontSize from './setFontSize';\r\nimport setTextColor from './setTextColor';\r\nimport toggleBold from './toggleBold';\r\nimport toggleItalic from './toggleItalic';\r\nimport toggleUnderline from './toggleUnderline';\r\nimport { ChangeSource, ClearFormatMode, DocumentCommand, QueryScope } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\nimport {\r\n    collapseNodesInRegion,\r\n    getObjectKeys,\r\n    getSelectedBlockElementsInRegion,\r\n    getStyles,\r\n    getTagOfNode,\r\n    isBlockElement,\r\n    isNodeInRegion,\r\n    isVoidHtmlElement,\r\n    PartialInlineElement,\r\n    NodeInlineElement,\r\n    safeInstanceOf,\r\n    setStyles,\r\n    splitBalancedNodeRange,\r\n    toArray,\r\n    unwrap,\r\n    wrap,\r\n} from 'roosterjs-editor-dom';\r\nimport type { CompatibleClearFormatMode } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\nconst STYLES_TO_REMOVE = ['font', 'text-decoration', 'color', 'background'];\r\nconst TAGS_TO_UNWRAP = 'B,I,U,STRONG,EM,SUB,SUP,STRIKE,FONT,CENTER,H1,H2,H3,H4,H5,H6,UL,OL,LI,SPAN,P,BLOCKQUOTE,CODE,S,PRE'.split(\r\n    ','\r\n);\r\nconst ATTRIBUTES_TO_PRESERVE = ['href', 'src', 'cellpadding', 'cellspacing'];\r\nconst TAGS_TO_STOP_UNWRAP = ['TD', 'TH', 'TR', 'TABLE', 'TBODY', 'THEAD'];\r\n\r\n/**\r\n * @param editor The editor instance\r\n * @returns if the current selection is composed of two or more block elements\r\n */\r\nfunction isMultiBlockSelection(editor: IEditor): boolean {\r\n    let transverser = editor.getSelectionTraverser();\r\n    let blockElement = transverser?.currentBlockElement;\r\n    if (!blockElement) {\r\n        return false;\r\n    }\r\n\r\n    let nextBlockElement = transverser?.getNextBlockElement();\r\n\r\n    //At least two blocks are selected\r\n    return !!nextBlockElement;\r\n}\r\n\r\nfunction clearNodeFormat(node: Node): boolean {\r\n    // 1. Recursively clear format of all its child nodes\r\n    const areBlockElements = toArray(node.childNodes).map(clearNodeFormat);\r\n    let areAllChildrenBlock = areBlockElements.every(b => b);\r\n    let returnBlockElement = isBlockElement(node);\r\n\r\n    // 2. Unwrap the tag if necessary\r\n    const tag = getTagOfNode(node);\r\n    if (tag) {\r\n        if (\r\n            TAGS_TO_UNWRAP.indexOf(tag) >= 0 ||\r\n            (areAllChildrenBlock &&\r\n                !isVoidHtmlElement(node) &&\r\n                TAGS_TO_STOP_UNWRAP.indexOf(tag) < 0)\r\n        ) {\r\n            if (returnBlockElement && !areAllChildrenBlock) {\r\n                wrap(node);\r\n            }\r\n            unwrap(node);\r\n        } else {\r\n            // 3. Otherwise, remove all attributes\r\n            clearAttribute(node as HTMLElement);\r\n        }\r\n    }\r\n\r\n    return returnBlockElement;\r\n}\r\n\r\nfunction clearAttribute(element: HTMLElement) {\r\n    const isTableCell = safeInstanceOf(element, 'HTMLTableCellElement');\r\n    const isTable = safeInstanceOf(element, 'HTMLTableElement');\r\n\r\n    for (let attr of toArray(element.attributes)) {\r\n        if (isTableCell && attr.name == 'style') {\r\n            removeNonBorderStyles(element);\r\n        } else if (isTable && attr.name == 'style') {\r\n            removeNotTableDefaultStyles(element);\r\n        } else if (\r\n            ATTRIBUTES_TO_PRESERVE.indexOf(attr.name.toLowerCase()) < 0 &&\r\n            attr.name.indexOf('data-') != 0\r\n        ) {\r\n            element.removeAttribute(attr.name);\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateStyles(\r\n    element: HTMLElement,\r\n    callbackfn: (\r\n        value: string,\r\n        styles: Record<string, string>,\r\n        result: Record<string, string>\r\n    ) => void\r\n) {\r\n    const styles = getStyles(element);\r\n    const result: Record<string, string> = {};\r\n\r\n    getObjectKeys(styles).forEach(style => callbackfn(style, styles, result));\r\n\r\n    setStyles(element, styles);\r\n\r\n    return result;\r\n}\r\n\r\nfunction removeNonBorderStyles(element: HTMLElement): Record<string, string> {\r\n    return updateStyles(element, (name, styles, result) => {\r\n        if (name.indexOf('border') < 0) {\r\n            result[name] = styles[name];\r\n            delete styles[name];\r\n        }\r\n    });\r\n}\r\n\r\nfunction removeNotTableDefaultStyles(element: HTMLTableElement) {\r\n    return updateStyles(element, (name, styles, result) => {\r\n        if (name != 'border-collapse') {\r\n            result[name] = styles[name];\r\n            delete styles[name];\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies recursively if a node and its parents have any siblings with text content\r\n * Ignoring the children of contentDiv and returning true if any node is LI\r\n * @returns `true` if this node, and its parents (minus the children of the contentDiv) have no siblings with text content\r\n */\r\nfunction isNodeWholeBlock(node: Node, editor: IEditor) {\r\n    let currentNode: ParentNode | Node | null = node;\r\n    while (currentNode && editor.contains(currentNode.parentNode)) {\r\n        if (currentNode.nextSibling || currentNode.previousSibling) {\r\n            if (safeInstanceOf(currentNode, 'HTMLLIElement')) {\r\n                return true;\r\n            }\r\n            let isOnlySiblingWithContent = true;\r\n            currentNode.parentNode?.childNodes.forEach(node => {\r\n                if (node != currentNode && node.textContent?.length) {\r\n                    isOnlySiblingWithContent = false;\r\n                }\r\n            });\r\n            return isOnlySiblingWithContent;\r\n        }\r\n        currentNode = currentNode.parentNode;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Clear the format of the selected text or list of blocks\r\n * If the current selection is compose of multiple block elements then remove the text and struture format for all the selected blocks\r\n * If the current selection is compose of a partial inline element then only the text format is removed from the current selection\r\n * @param editor The editor instance\r\n */\r\nfunction clearAutoDetectFormat(editor: IEditor) {\r\n    const isMultiBlock = isMultiBlockSelection(editor);\r\n    if (!isMultiBlock) {\r\n        const transverser = editor.getSelectionTraverser();\r\n        const inlineElement = transverser?.currentInlineElement;\r\n        const isPartial =\r\n            inlineElement instanceof PartialInlineElement ||\r\n            (inlineElement instanceof NodeInlineElement &&\r\n                !isNodeWholeBlock(inlineElement.getContainerNode(), editor));\r\n        if (isPartial) {\r\n            clearFormat(editor);\r\n            return;\r\n        }\r\n    }\r\n    clearBlockFormat(editor);\r\n}\r\n\r\n/**\r\n * Clear all formats of selected blocks.\r\n * When selection is collapsed, only clear format of current block.\r\n * @param editor The editor instance\r\n */\r\nfunction clearBlockFormat(editor: IEditor) {\r\n    formatUndoSnapshot(\r\n        editor,\r\n        () => {\r\n            blockFormat(editor, region => {\r\n                const blocks = getSelectedBlockElementsInRegion(region);\r\n                let nodes = collapseNodesInRegion(region, blocks);\r\n\r\n                if (editor.contains(region.rootNode)) {\r\n                    // If there are styles on table cell, wrap all its children and move down all non-border styles.\r\n                    // So that we can preserve styles for unselected blocks as well as border styles for table\r\n                    const nonborderStyles = removeNonBorderStyles(region.rootNode);\r\n                    if (getObjectKeys(nonborderStyles).length > 0) {\r\n                        const wrapper = wrap(toArray(region.rootNode.childNodes));\r\n                        setStyles(wrapper, nonborderStyles);\r\n                    }\r\n                }\r\n\r\n                while (\r\n                    nodes.length > 0 &&\r\n                    nodes[0].parentNode &&\r\n                    isNodeInRegion(region, nodes[0].parentNode)\r\n                ) {\r\n                    const balancedNodes = splitBalancedNodeRange(nodes);\r\n                    nodes = balancedNodes ? [balancedNodes] : [];\r\n                }\r\n\r\n                nodes.forEach(clearNodeFormat);\r\n            });\r\n            setDefaultFormat(editor);\r\n        },\r\n        'clearBlockFormat'\r\n    );\r\n}\r\n\r\nfunction clearInlineFormat(editor: IEditor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(() => {\r\n        execCommand(editor, DocumentCommand.RemoveFormat);\r\n        editor.queryElements('[class]', QueryScope.OnSelection, node =>\r\n            node.removeAttribute('class')\r\n        );\r\n\r\n        setDefaultFormat(editor);\r\n\r\n        return 'clearInlineFormat';\r\n    }, ChangeSource.Format);\r\n}\r\n\r\nfunction setDefaultFontWeight(editor: IEditor, fontWeight: string = '400') {\r\n    applyListItemStyleWrap(\r\n        editor,\r\n        'font-weight',\r\n        element => (element.style.fontWeight = fontWeight),\r\n        'setDefaultFontWeight'\r\n    );\r\n}\r\n\r\nfunction setDefaultFormat(editor: IEditor) {\r\n    const defaultFormat = editor.getDefaultFormat();\r\n    const isDefaultFormatEmpty = getObjectKeys(defaultFormat).length === 0;\r\n    editor.queryElements('[style]', QueryScope.InSelection, node => {\r\n        const tag = getTagOfNode(node);\r\n        if (TAGS_TO_STOP_UNWRAP.indexOf(tag) == -1) {\r\n            removeStyles(tag, node, isDefaultFormatEmpty);\r\n        } else {\r\n            node.childNodes.forEach(node => {\r\n                node.childNodes.forEach(cNode => {\r\n                    const tag = getTagOfNode(cNode);\r\n                    if (safeInstanceOf(cNode, 'HTMLElement')) {\r\n                        removeStyles(tag, cNode, isDefaultFormatEmpty);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    if (!isDefaultFormatEmpty) {\r\n        if (defaultFormat.fontFamily) {\r\n            setFontName(editor, defaultFormat.fontFamily);\r\n        }\r\n        if (defaultFormat.fontSize) {\r\n            setFontSize(editor, defaultFormat.fontSize);\r\n        }\r\n        if (defaultFormat.textColor) {\r\n            const setColorIgnoredElements = editor.queryElements<HTMLElement>(\r\n                'a *, a',\r\n                QueryScope.OnSelection\r\n            );\r\n\r\n            let shouldApplyInlineStyle =\r\n                setColorIgnoredElements.length > 0\r\n                    ? (element: HTMLElement) => setColorIgnoredElements.indexOf(element) == -1\r\n                    : undefined;\r\n\r\n            if (defaultFormat.textColors) {\r\n                setTextColor(editor, defaultFormat.textColors, shouldApplyInlineStyle);\r\n            } else {\r\n                setTextColor(editor, defaultFormat.textColor, shouldApplyInlineStyle);\r\n            }\r\n        }\r\n        if (defaultFormat.backgroundColor) {\r\n            if (defaultFormat.backgroundColors) {\r\n                setBackgroundColor(editor, defaultFormat.backgroundColors);\r\n            } else {\r\n                setBackgroundColor(editor, defaultFormat.backgroundColor);\r\n            }\r\n        }\r\n        if (defaultFormat.bold) {\r\n            toggleBold(editor);\r\n        } else {\r\n            setDefaultFontWeight(editor);\r\n        }\r\n        if (defaultFormat.italic) {\r\n            toggleItalic(editor);\r\n        }\r\n        if (defaultFormat.underline) {\r\n            toggleUnderline(editor);\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeStyles(tag: string, node: HTMLElement, isDefaultFormatEmpty: boolean) {\r\n    if (TAGS_TO_STOP_UNWRAP.indexOf(tag) == -1) {\r\n        STYLES_TO_REMOVE.forEach(style => node.style.removeProperty(style));\r\n\r\n        // when default format is empty, keep the HTML minimum by removing style attribute if there's no style\r\n        // (note: because default format is empty, we're not adding style back in)\r\n        if (isDefaultFormatEmpty && node.getAttribute('style') === '') {\r\n            node.removeAttribute('style');\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Clear the format in current selection, after cleaning, the format will be\r\n * changed to default format. The format that get cleaned include B/I/U/font name/\r\n * font size/text color/background color/align left/align right/align center/superscript/subscript\r\n * @param editor The editor instance\r\n * @param formatType type of format to apply\r\n */\r\nexport default function clearFormat(\r\n    editor: IEditor,\r\n    formatType: ClearFormatMode | CompatibleClearFormatMode = ClearFormatMode.Inline\r\n) {\r\n    switch (formatType) {\r\n        case ClearFormatMode.Inline:\r\n            clearInlineFormat(editor);\r\n            break;\r\n        case ClearFormatMode.Block:\r\n            clearBlockFormat(editor);\r\n            break;\r\n        default:\r\n            clearAutoDetectFormat(editor);\r\n    }\r\n}\r\n","import { HtmlSanitizer, matchLink, wrap } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\nimport {\r\n    ChangeSource,\r\n    DocumentCommand,\r\n    QueryScope,\r\n    SelectionRangeTypes,\r\n} from 'roosterjs-editor-types';\r\n\r\n// Regex matching Uri scheme\r\nconst URI_REGEX = /^[a-zA-Z]+:/i;\r\n// Regex matching begin of email address\r\nconst MAILTO_REGEX = /^[\\w.%+-]+@/i;\r\n// Regex matching begin of ftp, i.e. ftp.microsoft.com\r\nconst FTP_REGEX = /^ftp\\./i;\r\n\r\nfunction applyLinkPrefix(url: string): string {\r\n    if (!url) {\r\n        return url;\r\n    }\r\n\r\n    // Add link prefix per rule:\r\n    // (a) if the url always starts with a URI scheme, leave it as it is\r\n    // (b) if the url is an email address, xxx@... add mailto: prefix\r\n    // (c) if the url starts with ftp., add ftp:// prefix\r\n    // (d) rest, add http:// prefix\r\n    let prefix = '';\r\n    if (url.search(URI_REGEX) < 0) {\r\n        if (url.search(MAILTO_REGEX) == 0) {\r\n            prefix = 'mailto:';\r\n        } else if (url.search(FTP_REGEX) == 0) {\r\n            prefix = 'ftp://';\r\n        } else {\r\n            // fallback to http://\r\n            prefix = 'http://';\r\n        }\r\n    }\r\n\r\n    return prefix + url;\r\n}\r\n\r\n/**\r\n * Insert a hyperlink at cursor.\r\n * When there is a selection, hyperlink will be applied to the selection,\r\n * otherwise a hyperlink will be inserted to the cursor position.\r\n * @param editor Editor object\r\n * @param link Link address, can be http(s), mailto, notes, file, unc, ftp, news, telnet, gopher, wais.\r\n * When protocol is not specified, a best matched protocol will be predicted.\r\n * @param altText Optional alt text of the link, will be shown when hover on the link\r\n * @param displayText Optional display text for the link.\r\n * @param target Optional display target for the link (\"_blank\"|\"_self\"|\"_parent\"|\"_top\"|\"{framename}\")\r\n * If specified, the display text of link will be replaced with this text.\r\n * If not specified and there wasn't a link, the link url will be used as display text.\r\n */\r\nexport default function createLink(\r\n    editor: IEditor,\r\n    link: string,\r\n    altText?: string,\r\n    displayText?: string,\r\n    target?: string\r\n) {\r\n    editor.focus();\r\n    let url = (checkXss(link) || '').trim();\r\n    if (url) {\r\n        let linkData = matchLink(url);\r\n        // matchLink can match most links, but not all, i.e. if you pass link a link as \"abc\", it won't match\r\n        // we know in that case, users will want to insert a link like http://abc\r\n        // so we have separate logic in applyLinkPrefix to add link prefix depending on the format of the link\r\n        // i.e. if the link starts with something like abc@xxx, we will add mailto: prefix\r\n        // if the link starts with ftp.xxx, we will add ftp:// link. For more, see applyLinkPrefix\r\n        let normalizedUrl = linkData ? linkData.normalizedUrl : applyLinkPrefix(url);\r\n        let originalUrl = linkData ? linkData.originalUrl : url;\r\n\r\n        editor.addUndoSnapshot(() => {\r\n            const selection = editor.getSelectionRangeEx();\r\n            let anchor: HTMLAnchorElement | null = null;\r\n            if (selection.type === SelectionRangeTypes.Normal) {\r\n                const range = selection.ranges[0];\r\n                if (range && range.collapsed) {\r\n                    anchor = getAnchorNodeAtCursor(editor);\r\n\r\n                    // If there is already a link, just change its href\r\n                    if (anchor) {\r\n                        anchor.href = normalizedUrl;\r\n                        // Change text content if it is specified\r\n                        updateAnchorDisplayText(anchor, displayText);\r\n                    } else {\r\n                        anchor = editor.getDocument().createElement('A') as HTMLAnchorElement;\r\n                        anchor.textContent = displayText || originalUrl;\r\n                        anchor.href = normalizedUrl;\r\n                        editor.insertNode(anchor);\r\n                    }\r\n                } else {\r\n                    // the selection is not collapsed, use browser execCommand\r\n                    editor\r\n                        .getDocument()\r\n                        .execCommand(DocumentCommand.CreateLink, false, normalizedUrl);\r\n                    const traverser = editor.getSelectionTraverser();\r\n\r\n                    let currentInline = traverser?.getNextInlineElement();\r\n\r\n                    // list for removing unwanted lines\r\n                    let deletionInlineList: Node[] = [];\r\n\r\n                    while (currentInline) {\r\n                        deletionInlineList.push(currentInline.getContainerNode());\r\n                        currentInline = traverser?.getNextInlineElement();\r\n                    }\r\n\r\n                    deletionInlineList.forEach(node => editor.deleteNode(node));\r\n\r\n                    anchor = getAnchorNodeAtCursor(editor);\r\n                    updateAnchorDisplayText(anchor, displayText);\r\n                }\r\n            } else if (selection.type === SelectionRangeTypes.ImageSelection) {\r\n                anchor = wrap(selection.image, 'A') as HTMLAnchorElement;\r\n                anchor.href = normalizedUrl;\r\n            }\r\n\r\n            if (altText && anchor) {\r\n                anchor.title = altText;\r\n            }\r\n            if (anchor) {\r\n                updateAnchorTarget(anchor, target);\r\n            }\r\n            return anchor;\r\n        }, ChangeSource.CreateLink);\r\n    }\r\n}\r\n\r\nfunction getAnchorNodeAtCursor(editor: IEditor): HTMLAnchorElement {\r\n    return editor.queryElements('a[href]', QueryScope.OnSelection)[0] as HTMLAnchorElement;\r\n}\r\n\r\nfunction updateAnchorDisplayText(anchor: HTMLAnchorElement, displayText?: string) {\r\n    if (displayText && anchor.textContent != displayText) {\r\n        anchor.textContent = displayText;\r\n    }\r\n}\r\n\r\nfunction updateAnchorTarget(anchor: HTMLAnchorElement, target?: string) {\r\n    if (target) {\r\n        anchor.target = target;\r\n    } else if (!target && anchor.getAttribute('target')) {\r\n        anchor.removeAttribute('target');\r\n    }\r\n}\r\n\r\nfunction checkXss(link: string): string | null {\r\n    const sanitizer = new HtmlSanitizer();\r\n    const a = document.createElement('a');\r\n\r\n    a.href = link || '';\r\n    sanitizer.sanitize(a);\r\n    // We use getAttribute because some browsers will try to make the href property a valid link.\r\n    // This has unintended side effects when the link lacks a protocol.\r\n    return a.getAttribute('href');\r\n}\r\n","import { getTableFormatInfo, getTagOfNode, toArray } from 'roosterjs-editor-dom';\r\nimport type {\r\n    ElementBasedFormatState,\r\n    FormatState,\r\n    IEditor,\r\n    PluginEvent,\r\n} from 'roosterjs-editor-types';\r\nimport { QueryScope, SelectionRangeTypes } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get element based Format State at cursor\r\n * @param editor The editor instance\r\n * @param event (Optional) The plugin event, it stores the event cached data for looking up.\r\n * In this function the event cache is used to get list state and heading level. If not passed,\r\n * it will query the node within selection to get the info\r\n * @returns An ElementBasedFormatState object\r\n */\r\nexport function getElementBasedFormatState(\r\n    editor: IEditor,\r\n    event?: PluginEvent\r\n): ElementBasedFormatState {\r\n    const listTag = getTagOfNode(\r\n        editor.getElementAtCursor('OL,UL', undefined /*startFrom*/, event)\r\n    );\r\n\r\n    // Check if selection is multiline, spans more than one block\r\n    const range = editor.getSelectionRange();\r\n    let multiline = false;\r\n\r\n    if (range && !range.collapsed) {\r\n        let startingBlock = editor.getBlockElementAtNode(range.startContainer);\r\n        let endingBlock = editor.getBlockElementAtNode(range.endContainer);\r\n        multiline = endingBlock && startingBlock ? !endingBlock.equals(startingBlock) : false;\r\n    }\r\n\r\n    const headingTag = getTagOfNode(\r\n        editor.getElementAtCursor('H1,H2,H3,H4,H5,H6', undefined /*startFrom*/, event)\r\n    );\r\n\r\n    const table = editor.queryElements('table', QueryScope.OnSelection)[0];\r\n    const tableFormat = table ? getTableFormatInfo(table) : undefined;\r\n    const hasTableHeader = table?.rows[0]\r\n        ? toArray(table.rows[0].cells).every(cell => getTagOfNode(cell) == 'TH')\r\n        : undefined;\r\n    const headingLevel = (headingTag && parseInt(headingTag[1])) || 0;\r\n\r\n    return {\r\n        isBullet: listTag == 'UL',\r\n        isNumbering: listTag == 'OL',\r\n        isMultilineSelection: multiline,\r\n        headingLevel: headingLevel,\r\n        headerLevel: headingLevel,\r\n        canUnlink: !!editor.queryElements('a[href]', QueryScope.OnSelection)[0],\r\n        canAddImageAltText: !!editor.queryElements('img', QueryScope.OnSelection)[0],\r\n        isBlockQuote: !!editor.queryElements('blockquote', QueryScope.OnSelection)[0],\r\n        isCodeInline: !!editor.queryElements('code', QueryScope.OnSelection)[0],\r\n        isCodeBlock: !!editor.queryElements('pre>code', QueryScope.OnSelection)[0],\r\n        isInTable: !!table,\r\n        tableFormat: tableFormat || {},\r\n        tableHasHeader: hasTableHeader,\r\n        canMergeTableCell: canMergeTableCell(editor),\r\n    };\r\n}\r\n\r\n/**\r\n * Get format state at cursor\r\n * A format state is a collection of all format related states, e.g.,\r\n * bold, italic, underline, font name, font size, etc.\r\n * @param editor The editor instance\r\n * @param event (Optional) The plugin event, it stores the event cached data for looking up.\r\n * In this function the event cache is used to get list state and heading level. If not passed,\r\n * it will query the node within selection to get the info\r\n * @returns The format state at cursor\r\n */\r\nexport default function getFormatState(editor: IEditor, event?: PluginEvent): FormatState {\r\n    return {\r\n        ...editor.getPendableFormatState(false /* forceGetStateFromDom */),\r\n        ...getElementBasedFormatState(editor, event),\r\n        ...editor.getStyleBasedFormatState(),\r\n        ...editor.getUndoState(),\r\n        isDarkMode: editor.isDarkMode(),\r\n        zoomScale: editor.getZoomScale(),\r\n    };\r\n}\r\n\r\n/**\r\n * Checks whether the editor selection range is starting and ending at a table element.\r\n * @param editor Editor Instance\r\n * @returns\r\n */\r\n\r\nconst canMergeTableCell = (editor: IEditor): boolean => {\r\n    const selection = editor.getSelectionRangeEx();\r\n    const isATable = selection && selection.type === SelectionRangeTypes.TableSelection;\r\n    if (isATable && selection.coordinates) {\r\n        const { firstCell, lastCell } = selection.coordinates;\r\n        if (firstCell.x !== lastCell.x || firstCell.y !== lastCell.y) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    return false;\r\n};\r\n","import commitListChains from '../utils/commitListChains';\nimport {\n    addDelimiters,\n    applyFormat,\n    commitEntity,\n    createElement,\n    getEntityFromElement,\n    getEntitySelector,\n    Position,\n    VListChain,\n    wrap,\n} from 'roosterjs-editor-dom';\nimport type { Entity, IEditor, NodePosition } from 'roosterjs-editor-types';\nimport {\n    ChangeSource,\n    ContentPosition,\n    KnownCreateElementDataIndex,\n    PositionType,\n} from 'roosterjs-editor-types';\nimport type { CompatibleContentPosition } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * Insert an entity into editor.\n * @param editor The editor to insert entity into.\n * @param type Type of the entity\n * @param contentNode Root element of the entity\n * @param isBlock Whether the entity will be shown as a block\n * @param isReadonly Whether the entity will be a readonly entity\n * @param position @optional The position to insert into. If not specified, current position will be used.\n * If isBlock is true, entity will be insert below this position\n * @param insertToRegionRoot @optional When pass true, insert the entity at the root level of current region.\n * Parent nodes will be split if need\n * @param focusAfterEntity @optional When pass true, focus will be moved next to the entity. For inline entity,\n * focus will be after right after the entity (and the delimiter if exist). For block entity, focus will be in\n * the new empty line below the entity\n */\nexport default function insertEntity(\n    editor: IEditor,\n    type: string,\n    contentNode: Node,\n    isBlock: boolean,\n    isReadonly: boolean,\n    position?:\n        | NodePosition\n        | ContentPosition.Begin\n        | ContentPosition.End\n        | ContentPosition.DomEnd\n        | CompatibleContentPosition.Begin\n        | CompatibleContentPosition.End\n        | CompatibleContentPosition.DomEnd,\n    insertToRegionRoot?: boolean,\n    focusAfterEntity?: boolean\n): Entity {\n    const wrapper = wrap(contentNode, isBlock ? 'div' : 'span');\n\n    // For inline & readonly entity, we need to set display to \"inline-block\" otherwise\n    // there will be some weird behavior when move cursor around the entity node.\n    // And we should only do this for readonly entity since \"inline-block\" has some side effect\n    // in IE that there will be a resize border around the inline-block element. We made some\n    // workaround for readonly entity for this issue but for editable entity, keep it as \"inline\"\n    // will just work fine.\n    if (!isBlock && isReadonly) {\n        wrapper.style.display = 'inline-block';\n    }\n\n    commitEntity(wrapper, type, isReadonly);\n\n    if (!editor.contains(wrapper)) {\n        let currentRange: Range | null = null;\n        let contentPosition:\n            | ContentPosition.Begin\n            | ContentPosition.End\n            | ContentPosition.DomEnd\n            | ContentPosition.SelectionStart\n            | CompatibleContentPosition.Begin\n            | CompatibleContentPosition.End\n            | CompatibleContentPosition.DomEnd\n            | CompatibleContentPosition.SelectionStart;\n\n        if (typeof position == 'number') {\n            contentPosition = position;\n        } else if (position) {\n            currentRange = editor.getSelectionRange();\n            const node = position.normalize().node;\n            const existingEntity = node && editor.getElementAtCursor(getEntitySelector(), node);\n\n            // Do not insert entity into another entity\n            if (existingEntity) {\n                position = new Position(existingEntity, PositionType.After);\n            }\n\n            editor.select(position);\n            contentPosition = ContentPosition.SelectionStart;\n        } else {\n            editor.focus();\n            contentPosition = ContentPosition.SelectionStart;\n        }\n\n        const regions = insertToRegionRoot && editor.getSelectedRegions();\n        const chains = regions && VListChain.createListChains(regions);\n\n        editor.insertNode(wrapper, {\n            updateCursor: false,\n            insertOnNewLine: isBlock,\n            replaceSelection: true,\n            position: contentPosition,\n            insertToRegionRoot: insertToRegionRoot,\n        });\n\n        if (chains) {\n            commitListChains(editor, chains);\n        }\n\n        if (contentPosition == ContentPosition.SelectionStart) {\n            if (currentRange) {\n                editor.select(currentRange);\n            } else if (!isBlock) {\n                editor.select(wrapper, PositionType.After);\n            }\n        }\n    }\n\n    const entity = getEntityFromElement(wrapper)!;\n\n    if (isBlock) {\n        // Insert an extra empty line for block entity to make sure\n        // user can still put cursor below the entity.\n        const newLine = createElement(KnownCreateElementDataIndex.EmptyLine, editor.getDocument());\n\n        wrapper.parentNode?.insertBefore(newLine!, wrapper.nextSibling);\n\n        if (newLine) {\n            applyFormat(\n                newLine as HTMLElement,\n                editor.getDefaultFormat(),\n                editor.isDarkMode(),\n                editor.getDarkColorHandler()\n            );\n        }\n\n        if (focusAfterEntity) {\n            const br = newLine?.querySelector('br');\n            const pos = br && new Position(br, PositionType.Before);\n\n            if (pos) {\n                editor.select(pos);\n            }\n        }\n    } else if (isReadonly) {\n        addDelimiters(entity.wrapper);\n        if (entity.wrapper.nextElementSibling) {\n            editor.select(new Position(entity.wrapper.nextElementSibling, PositionType.After));\n        }\n    }\n\n    editor.triggerContentChangedEvent(ChangeSource.InsertEntity, entity);\n\n    return entity;\n}\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport { getObjectKeys, readFile } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Insert an image to editor at current selection\r\n * @param editor The editor instance\r\n * @param imageFileOrSrc Either the image file blob or source string of the image.\r\n * @param attributes Optional image element attributes\r\n */\r\nexport default function insertImage(\r\n    editor: IEditor,\r\n    imageFileOrSrc: File | string,\r\n    attributes?: Record<string, string>\r\n): void {\r\n    if (typeof imageFileOrSrc == 'string') {\r\n        insertImageWithSrc(editor, imageFileOrSrc, attributes);\r\n    } else {\r\n        readFile(imageFileOrSrc, dataUrl => {\r\n            if (dataUrl && !editor.isDisposed()) {\r\n                insertImageWithSrc(editor, dataUrl, attributes);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction insertImageWithSrc(editor: IEditor, src: string, attributes?: Record<string, string>) {\r\n    formatUndoSnapshot(\r\n        editor,\r\n        () => {\r\n            const image = editor.getDocument().createElement('img');\r\n            image.src = src;\r\n\r\n            if (attributes) {\r\n                getObjectKeys(attributes).forEach(attribute =>\r\n                    image.setAttribute(attribute, attributes[attribute])\r\n                );\r\n            }\r\n            editor.insertNode(image);\r\n        },\r\n        'insertImage'\r\n    );\r\n}\r\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport { QueryScope } from 'roosterjs-editor-types';\r\nimport { unwrap } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Remove link at selection. If no links at selection, do nothing.\r\n * If selection contains multiple links, all of the link styles will be removed.\r\n * If only part of a link is selected, the whole link style will be removed.\r\n * @param editor The editor instance\r\n */\r\nexport default function removeLink(editor: IEditor) {\r\n    editor.focus();\r\n    formatUndoSnapshot(\r\n        editor,\r\n        (start, end) => {\r\n            editor.queryElements('a[href]', QueryScope.OnSelection, unwrap);\r\n            if (start && end) {\r\n                editor.select(start, end);\r\n            }\r\n        },\r\n        'removeLink'\r\n    );\r\n}\r\n","import { ContentPosition } from 'roosterjs-editor-types';\r\nimport type { IEditor, IPositionContentSearcher } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Replace text before current selection with a node, current selection will be kept if possible\r\n * @param editor The editor instance\r\n * @param text The text for matching. We will try to match the text with the text before cursor\r\n * @param node The node to replace the text with\r\n * @param exactMatch True if the text must appear exactly before selection,\r\n * otherwise there can be some text between the target text and selection\r\n * @param searcher Optional PositionContentSearcher of current selection to help search text\r\n */\r\nexport default function replaceWithNode(\r\n    editor: IEditor,\r\n    text: string,\r\n    node: Node,\r\n    exactMatch: boolean,\r\n    searcher?: IPositionContentSearcher\r\n): boolean;\r\n\r\n/**\r\n * Replace a given range with a node, current selection will be kept if possible\r\n * @param editor The editor instance\r\n * @param range The range to replace from\r\n * @param node The node to replace the text with\r\n * @param exactMatch True if the text must appear exactly before selection,\r\n * otherwise there can be some text between the target text and selection\r\n */\r\nexport default function replaceWithNode(\r\n    editor: IEditor,\r\n    range: Range,\r\n    node: Node,\r\n    exactMatch: boolean\r\n): boolean;\r\n\r\nexport default function replaceWithNode(\r\n    editor: IEditor,\r\n    textOrRange: string | Range,\r\n    node: Node,\r\n    exactMatch: boolean,\r\n    searcher?: IPositionContentSearcher\r\n): boolean {\r\n    // Make sure the text and node is valid\r\n    if (!textOrRange || !node) {\r\n        return false;\r\n    }\r\n\r\n    let range: Range | null;\r\n\r\n    if (typeof textOrRange == 'string') {\r\n        searcher = (searcher || editor.getContentSearcherOfCursor()) ?? undefined;\r\n        range = searcher?.getRangeFromText(textOrRange, exactMatch) ?? null;\r\n    } else {\r\n        range = textOrRange;\r\n    }\r\n\r\n    if (range) {\r\n        const backupRange = editor.getSelectionRange();\r\n\r\n        // If the range to replace is right before current cursor, it is actually an exact match\r\n        if (\r\n            backupRange?.collapsed &&\r\n            range.endContainer == backupRange.startContainer &&\r\n            range.endOffset == backupRange.startOffset\r\n        ) {\r\n            exactMatch = true;\r\n        }\r\n\r\n        editor.insertNode(node, {\r\n            position: ContentPosition.Range,\r\n            updateCursor: exactMatch,\r\n            replaceSelection: true,\r\n            insertOnNewLine: false,\r\n            range: range,\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * Rotate an element visually\n * @param editor The editor instance\n * @param element The element that should be rotated\n * @param angle The degree at which to rotate the element from it's center\n */\nexport default function rotateElement(editor: IEditor, element: HTMLElement, angle: number): void {\n    if (element) {\n        formatUndoSnapshot(\n            editor,\n            () => {\n                element.style.transform = `rotate(${angle}deg)`;\n            },\n            'rotateElement'\n        );\n    }\n}\n","import blockFormat from '../utils/blockFormat';\r\nimport execCommand from '../utils/execCommand';\r\nimport formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport normalizeBlockquote from '../utils/normalizeBlockquote';\r\nimport {\r\n    Alignment,\r\n    DocumentCommand,\r\n    QueryScope,\r\n    SelectionRangeTypes,\r\n} from 'roosterjs-editor-types';\r\nimport {\r\n    createVListFromRegion,\r\n    findClosestElementAncestor,\r\n    getSelectedBlockElementsInRegion,\r\n    isWholeTableSelected,\r\n    VTable,\r\n} from 'roosterjs-editor-dom';\r\nimport type { IEditor, TableSelectionRange } from 'roosterjs-editor-types';\r\nimport type { CompatibleAlignment } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Set content alignment\r\n * @param editor The editor instance\r\n * @param alignment The alignment option:\r\n * Alignment.Center, Alignment.Left, Alignment.Right\r\n */\r\nexport default function setAlignment(editor: IEditor, alignment: Alignment | CompatibleAlignment) {\r\n    formatUndoSnapshot(\r\n        editor,\r\n        () => {\r\n            const selection = editor.getSelectionRangeEx();\r\n            const isATable = selection && selection.type === SelectionRangeTypes.TableSelection;\r\n            const elementAtCursor = editor.getElementAtCursor();\r\n\r\n            if (\r\n                isATable &&\r\n                selection.coordinates &&\r\n                isWholeTableSelected(new VTable(selection.table), selection.coordinates)\r\n            ) {\r\n                alignTable(selection, alignment);\r\n            } else if (elementAtCursor && isList(elementAtCursor)) {\r\n                alignList(editor, alignment);\r\n            } else {\r\n                alignText(editor, alignment);\r\n            }\r\n        },\r\n        'setAlignment'\r\n    );\r\n}\r\n\r\n/**\r\n * Align text using the margins\r\n * @param editor\r\n * @param element\r\n * @param alignment\r\n * @param addUndoSnapshot\r\n * @returns\r\n */\r\nfunction alignTable(selection: TableSelectionRange, alignment: Alignment | CompatibleAlignment) {\r\n    const table = selection.table;\r\n    if (alignment == Alignment.Center) {\r\n        table.style.marginLeft = 'auto';\r\n        table.style.marginRight = 'auto';\r\n    } else if (alignment == Alignment.Right) {\r\n        table.style.marginLeft = 'auto';\r\n        table.style.marginRight = '';\r\n    } else {\r\n        table.style.marginLeft = '';\r\n        table.style.marginRight = 'auto';\r\n    }\r\n}\r\n\r\n/**\r\n * Align text using the text-align\r\n * @param editor\r\n * @param alignment\r\n * @returns\r\n */\r\nfunction alignText(editor: IEditor, alignment: Alignment | CompatibleAlignment) {\r\n    let align = 'left';\r\n    let command = DocumentCommand.JustifyLeft;\r\n    if (alignment == Alignment.Center) {\r\n        command = DocumentCommand.JustifyCenter;\r\n        align = 'center';\r\n    } else if (alignment == Alignment.Right) {\r\n        command = DocumentCommand.JustifyRight;\r\n        align = 'right';\r\n    }\r\n    execCommand(editor, command);\r\n    const elements = editor.queryElements('[align]', QueryScope.OnSelection, node => {\r\n        node.style.textAlign = align;\r\n        normalizeBlockquote(node);\r\n    });\r\n\r\n    if (elements.length == 0) {\r\n        const node = editor.getElementAtCursor();\r\n        if (node) {\r\n            normalizeBlockquote(node);\r\n        }\r\n    }\r\n}\r\n\r\nfunction isList(element: HTMLElement) {\r\n    return findClosestElementAncestor(element, undefined /** root */, 'LI');\r\n}\r\n\r\nfunction alignList(editor: IEditor, alignment: Alignment | CompatibleAlignment) {\r\n    blockFormat(\r\n        editor,\r\n        (region, start, end) => {\r\n            const blocks = getSelectedBlockElementsInRegion(region);\r\n            const startNode = blocks[0].getStartNode();\r\n            const vList = createVListFromRegion(region, true /*includeSiblingLists*/, startNode);\r\n            if (start && end) {\r\n                vList?.setAlignment(start, end, alignment);\r\n            }\r\n        },\r\n        undefined /* beforeRunCallback */,\r\n        'alignList'\r\n    );\r\n}\r\n","import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { setColor } from 'roosterjs-editor-dom';\r\nimport type { IEditor, ModeIndependentColor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set background color at current selection\r\n * @param editor The editor instance\r\n * @param color One of two options:\r\n * The color string, can be any of the predefined color names (e.g, 'red')\r\n * or hexadecimal color string (e.g, '#FF0000') or rgb value (e.g, 'rgb(255, 0, 0)') supported by browser.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take effect\r\n * Alternatively, you can pass a @typedef ModeIndependentColor. If in light mode, the lightModeColor property will be used.\r\n * If in dark mode, the darkModeColor will be used and the lightModeColor will be used when converting back to light mode.\r\n **/\r\nexport default function setBackgroundColor(editor: IEditor, color: string | ModeIndependentColor) {\r\n    applyInlineStyle(\r\n        editor,\r\n        (element, isInnerNode) => {\r\n            setColor(\r\n                element,\r\n                isInnerNode ? '' : color,\r\n                true /*isBackground*/,\r\n                editor.isDarkMode(),\r\n                false /*shouldAdaptFontColor*/,\r\n                editor.getDarkColorHandler()\r\n            );\r\n        },\r\n        'setBackgroundColor'\r\n    );\r\n}\r\n","import collapseSelectedBlocks from '../utils/collapseSelectedBlocks';\r\nimport formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport { Direction } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\nimport type { CompatibleDirection } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Change direction for the blocks/paragraph at selection\r\n * @param editor The editor instance\r\n * @param direction The direction option:\r\n * Direction.LeftToRight refers to 'ltr', Direction.RightToLeft refers to 'rtl'\r\n */\r\nexport default function setDirection(editor: IEditor, direction: Direction | CompatibleDirection) {\r\n    editor.focus();\r\n\r\n    formatUndoSnapshot(\r\n        editor,\r\n        (start, end) => {\r\n            collapseSelectedBlocks(editor, element => {\r\n                element.setAttribute('dir', direction == Direction.LeftToRight ? 'ltr' : 'rtl');\r\n                element.style.textAlign = direction == Direction.LeftToRight ? 'left' : 'right';\r\n            });\r\n            if (start && end) {\r\n                editor.select(start, end);\r\n            }\r\n        },\r\n        'setDirection'\r\n    );\r\n}\r\n","import applyListItemStyleWrap from '../utils/applyListItemWrap';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set font name at selection\r\n * @param editor The editor instance\r\n * @param fontName The fontName string, should be a valid CSS font-family style.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nexport default function setFontName(editor: IEditor, fontName: string) {\r\n    // The browser provided execCommand creates a HTML <font> tag with face attribute. <font> is not HTML5 standard\r\n    // (http://www.w3schools.com/tags/tag_font.asp).\r\n    applyListItemStyleWrap(\r\n        editor,\r\n        'font-family',\r\n        (element, isInnerNode) => {\r\n            element.style.fontFamily = isInnerNode ? '' : fontName;\r\n        },\r\n        'setFontName'\r\n    );\r\n}\r\n","import applyListItemStyleWrap from '../utils/applyListItemWrap';\r\nimport { getComputedStyle } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set font size at selection\r\n * @param editor The editor instance\r\n * @param fontSize The fontSize string, should be a valid CSS font-size style.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nexport default function setFontSize(editor: IEditor, fontSize: string) {\r\n    // The browser provided execCommand only accepts 1-7 point value. In addition, it uses HTML <font> tag with size attribute.\r\n    // <font> is not HTML5 standard (http://www.w3schools.com/tags/tag_font.asp).\r\n    applyListItemStyleWrap(\r\n        editor,\r\n        'font-size',\r\n        (element, isInnerNode) => {\r\n            element.style.fontSize = isInnerNode ? '' : fontSize;\r\n            let lineHeight = getComputedStyle(element, 'line-height');\r\n            if (lineHeight && lineHeight != 'normal') {\r\n                element.style.lineHeight = 'normal';\r\n            }\r\n        },\r\n        'setFontSize'\r\n    );\r\n}\r\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\nimport { DocumentCommand, QueryScope } from 'roosterjs-editor-types';\nimport { HtmlSanitizer, moveChildNodes } from 'roosterjs-editor-dom';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * Set heading level at selection\n * @param editor The editor instance\n * @param level The heading level, can be a number from 0 to 6, in which 1 ~ 6 refers to\n * the HTML heading element &lt;H1&gt; to &lt;H6&gt;, 0 means no heading\n * if passed in param is outside the range, will be rounded to nearest number in the range\n */\nexport default function setHeadingLevel(editor: IEditor, level: number) {\n    level = Math.min(Math.max(Math.round(level), 0), 6);\n\n    formatUndoSnapshot(\n        editor,\n        () => {\n            editor.focus();\n\n            let wrapped = false;\n            editor.queryElements('H1,H2,H3,H4,H5,H6', QueryScope.OnSelection, heading => {\n                if (!wrapped) {\n                    editor.getDocument().execCommand(DocumentCommand.FormatBlock, false, '<DIV>');\n                    wrapped = true;\n                }\n\n                const div = editor.getDocument().createElement('div');\n                moveChildNodes(div, heading);\n                editor.replaceNode(heading, div);\n            });\n\n            if (level > 0) {\n                let traverser = editor.getSelectionTraverser();\n                let blockElement = traverser?.currentBlockElement;\n                let sanitizer = new HtmlSanitizer({\n                    cssStyleCallbacks: {\n                        'font-size': () => false,\n                    },\n                });\n                while (blockElement) {\n                    let element = blockElement.collapseToSingleElement();\n                    sanitizer.sanitize(element);\n                    blockElement = traverser?.getNextBlockElement();\n                }\n                editor.getDocument().execCommand(DocumentCommand.FormatBlock, false, `<H${level}>`);\n            }\n        },\n        'toggleHeader'\n    );\n}\n\n/**\n * @deprecated Use setHeadingLevel instead\n * Keep this for compatibility only, will be removed in next major release\n */\nexport const toggleHeader = setHeadingLevel;\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport { QueryScope } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set image alt text for all selected images at selection. If no images is contained\r\n * in selection, do nothing.\r\n * The alt attribute provides alternative information for an image if a user for some reason\r\n * cannot view it (because of slow connection, an error in the src attribute, or if the user\r\n * uses a screen reader). See https://www.w3schools.com/tags/att_img_alt.asp\r\n * @param editor The editor instance\r\n * @param altText The image alt text\r\n */\r\nexport default function setImageAltText(editor: IEditor, altText: string) {\r\n    editor.focus();\r\n\r\n    formatUndoSnapshot(\r\n        editor,\r\n        () => {\r\n            editor.queryElements('img', QueryScope.OnSelection, node =>\r\n                node.setAttribute('alt', altText)\r\n            );\r\n        },\r\n        'setImageAltText'\r\n    );\r\n}\r\n","import blockFormat from '../utils/blockFormat';\r\nimport normalizeBlockquote from '../utils/normalizeBlockquote';\r\nimport type { BlockElement, IEditor, RegionBase } from 'roosterjs-editor-types';\r\nimport {\r\n    ExperimentalFeatures,\r\n    Indentation,\r\n    KnownCreateElementDataIndex,\r\n    SelectionRangeTypes,\r\n} from 'roosterjs-editor-types';\r\nimport type { VList } from 'roosterjs-editor-dom';\r\nimport {\r\n    collapseNodesInRegion,\r\n    createVListFromRegion,\r\n    findClosestElementAncestor,\r\n    getSelectedBlockElementsInRegion,\r\n    getTagOfNode,\r\n    isNodeInRegion,\r\n    isWholeTableSelected,\r\n    splitBalancedNodeRange,\r\n    toArray,\r\n    unwrap,\r\n    VTable,\r\n    wrap,\r\n} from 'roosterjs-editor-dom';\r\nimport type { CompatibleIndentation } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Set indentation at selection\r\n * If selection contains bullet/numbering list, increase/decrease indentation will\r\n * increase/decrease the list level by one.\r\n * @param editor The editor instance\r\n * @param indentation The indentation option:\r\n * Indentation.Increase to increase indentation or Indentation.Decrease to decrease indentation\r\n */\r\nexport default function setIndentation(\r\n    editor: IEditor,\r\n    indentation: Indentation | CompatibleIndentation\r\n) {\r\n    const handler = indentation == Indentation.Increase ? indent : outdent;\r\n\r\n    blockFormat(\r\n        editor,\r\n        (region, start, end) => {\r\n            const blocks = getSelectedBlockElementsInRegion(region, true /*createBlockIfEmpty*/);\r\n            const blockGroups: BlockElement[][] = [[]];\r\n\r\n            for (let i = 0; i < blocks.length; i++) {\r\n                const startNode = blocks[i].getStartNode();\r\n                const vList = createVListFromRegion(\r\n                    region,\r\n                    true /*includeSiblingLists*/,\r\n                    startNode\r\n                );\r\n\r\n                if (vList) {\r\n                    while (blocks[i + 1] && vList.contains(blocks[i + 1].getStartNode())) {\r\n                        i++;\r\n                    }\r\n\r\n                    const isTabKeyTextFeaturesEnabled = editor.isFeatureEnabled(\r\n                        ExperimentalFeatures.TabKeyTextFeatures\r\n                    );\r\n\r\n                    if (\r\n                        isTabKeyTextFeaturesEnabled &&\r\n                        isFirstItem(vList, startNode) &&\r\n                        shouldHandleWithBlockquotes(indentation, editor, startNode)\r\n                    ) {\r\n                        const block = editor.getBlockElementAtNode(vList.rootList);\r\n                        if (block) {\r\n                            blockGroups.push([block]);\r\n                        }\r\n                    } else {\r\n                        if (start && end) {\r\n                            indentation == Indentation.Decrease\r\n                                ? vList.setIndentation(\r\n                                      start,\r\n                                      end,\r\n                                      indentation,\r\n                                      false /* softOutdent */,\r\n                                      isTabKeyTextFeaturesEnabled /* preventItemRemoval */\r\n                                  )\r\n                                : vList.setIndentation(start, end, indentation);\r\n                            vList.writeBack(\r\n                                editor.isFeatureEnabled(\r\n                                    ExperimentalFeatures.ReuseAllAncestorListElements\r\n                                ),\r\n                                editor.isFeatureEnabled(ExperimentalFeatures.DisableListChain)\r\n                            );\r\n                            blockGroups.push([]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    blockGroups[blockGroups.length - 1].push(blocks[i]);\r\n                }\r\n            }\r\n\r\n            blockGroups.forEach(group => handler(region, group));\r\n        },\r\n        () => {\r\n            const selection = editor.getSelectionRangeEx();\r\n            if (\r\n                selection.type == SelectionRangeTypes.TableSelection &&\r\n                selection.coordinates &&\r\n                isWholeTableSelected(new VTable(selection.table), selection.coordinates)\r\n            ) {\r\n                if (indentation == Indentation.Decrease) {\r\n                    const quote = editor.getElementAtCursor('blockquote', selection.table);\r\n                    if (quote) {\r\n                        unwrap(quote);\r\n                    }\r\n                } else if (indentation == Indentation.Increase) {\r\n                    wrap(selection.table, KnownCreateElementDataIndex.BlockquoteWrapper);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n        'setIndentation'\r\n    );\r\n\r\n    function indent(region: RegionBase, blocks: BlockElement[]) {\r\n        const nodes = collapseNodesInRegion(region, blocks);\r\n        wrap(nodes, KnownCreateElementDataIndex.BlockquoteWrapper);\r\n        const quotesHandled: Node[] = [];\r\n        nodes.forEach(node => normalizeBlockquote(node, quotesHandled));\r\n    }\r\n}\r\n\r\nfunction outdent(region: RegionBase, blocks: BlockElement[]) {\r\n    blocks.forEach(blockElement => {\r\n        let node: Node | null = blockElement.collapseToSingleElement();\r\n        const quote = findClosestElementAncestor(node, region.rootNode, 'blockquote');\r\n        if (quote) {\r\n            if (node == quote) {\r\n                node = wrap(toArray(node.childNodes));\r\n            }\r\n\r\n            while (node && isNodeInRegion(region, node) && getTagOfNode(node) != 'BLOCKQUOTE') {\r\n                node = splitBalancedNodeRange(node);\r\n            }\r\n\r\n            if (node && isNodeInRegion(region, node)) {\r\n                unwrap(node);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction isFirstItem(vList: VList, startNode: Node) {\r\n    return (\r\n        vList.items[0]?.getNode() == startNode &&\r\n        vList.getListItemIndex(startNode) == (vList.getStart() || 1)\r\n    );\r\n}\r\n\r\nfunction shouldHandleWithBlockquotes(\r\n    indentation: Indentation | CompatibleIndentation,\r\n    editor: IEditor,\r\n    startNode: Node\r\n) {\r\n    return (\r\n        indentation == Indentation.Increase || editor.getElementAtCursor('blockquote', startNode)\r\n    );\r\n}\r\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\nimport { createVListFromRegion } from 'roosterjs-editor-dom';\nimport { ExperimentalFeatures } from 'roosterjs-editor-types';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * Resets Ordered List Numbering back to the value of the parameter startNumber\n * @param editor The editor instance\n * @param separator The HTML element that indicates when to split the VList\n * @param startNumber The number of that the splitted list should start\n */\nexport default function setOrderedListNumbering(\n    editor: IEditor,\n    separator: HTMLLIElement,\n    startNumber: number = 1\n) {\n    formatUndoSnapshot(\n        editor,\n        () => {\n            editor.focus();\n            const regions = editor.getSelectedRegions();\n            if (regions[0]) {\n                const vList = createVListFromRegion(\n                    regions[0],\n                    false /*includeSiblingLists*/,\n                    separator\n                );\n                if (vList) {\n                    vList.split(separator, startNumber);\n                    vList.writeBack(\n                        editor.isFeatureEnabled(ExperimentalFeatures.ReuseAllAncestorListElements),\n                        editor.isFeatureEnabled(ExperimentalFeatures.DisableListChain)\n                    );\n                }\n            }\n        },\n        'setOrderedListNumbering'\n    );\n}\n","import applyListItemStyleWrap from '../utils/applyListItemWrap';\r\nimport { setColor } from 'roosterjs-editor-dom';\r\nimport type { IEditor, ModeIndependentColor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set text color at selection\r\n * @param editor The editor instance\r\n * @param color One of two options:\r\n * The color string, can be any of the predefined color names (e.g, 'red')\r\n * or hexadecimal color string (e.g, '#FF0000') or rgb value (e.g, 'rgb(255, 0, 0)') supported by browser.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n * Alternatively, you can pass a @typedef ModeIndependentColor. If in light mode, the lightModeColor property will be used.\r\n * If in dark mode, the darkModeColor will be used and the lightModeColor will be used when converting back to light mode.\r\n * @param shouldApplyInlineStyle Optional callback function to be invoked to verify if the current element should have the inline Style applied\r\n */\r\nexport default function setTextColor(\r\n    editor: IEditor,\r\n    color: string | ModeIndependentColor,\r\n    shouldApplyInlineStyle?: (element: HTMLElement) => boolean\r\n) {\r\n    applyListItemStyleWrap(\r\n        editor,\r\n        'color',\r\n        (element, isInnerNode) => {\r\n            if (!shouldApplyInlineStyle || shouldApplyInlineStyle(element)) {\r\n                setColor(\r\n                    element,\r\n                    isInnerNode ? '' : color,\r\n                    false /*isBackground*/,\r\n                    editor.isDarkMode(),\r\n                    false /*shouldAdaptFontColor*/,\r\n                    editor.getDarkColorHandler()\r\n                );\r\n            }\r\n        },\r\n        'setTextColor'\r\n    );\r\n}\r\n","import blockWrap from '../utils/blockWrap';\r\nimport { QueryScope } from 'roosterjs-editor-types';\r\nimport { unwrap, wrap } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\nconst BLOCKQUOTE_TAG = 'blockquote';\r\nconst DEFAULT_STYLER = (element: HTMLElement): void => {\r\n    element.style.borderLeft = '3px solid';\r\n    element.style.borderColor = '#C8C8C8';\r\n    element.style.paddingLeft = '10px';\r\n    element.style.color = '#666666';\r\n};\r\n\r\n/**\r\n * Toggle blockquote at selection, if selection already contains any blockquote elements,\r\n * the blockquote elements will be unquote and other elements will take no effect\r\n * @param editor The editor instance\r\n * @param styler (Optional) The custom styler for setting the style for the blockquote element\r\n */\r\nexport default function toggleBlockQuote(editor: IEditor, styler?: (element: HTMLElement) => void) {\r\n    blockWrap(\r\n        editor,\r\n        nodes => {\r\n            const wrapper = wrap(nodes, BLOCKQUOTE_TAG);\r\n            (styler || DEFAULT_STYLER)(wrapper);\r\n        },\r\n        () => editor.queryElements('blockquote', QueryScope.OnSelection, unwrap).length == 0,\r\n        'toggleBlockQuote'\r\n    );\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Toggle bold at selection\r\n * If selection is collapsed, it will only affect the following input after caret\r\n * If selection contains only bold text, the bold style will be removed\r\n * If selection contains only normal text, bold style will be added to the whole selected text\r\n * If selection contains both bold and normal text, bold style will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleBold(editor: IEditor) {\r\n    execCommand(editor, DocumentCommand.Bold, 'toggleBold');\r\n}\r\n","import toggleListType from '../utils/toggleListType';\r\nimport { ListType } from 'roosterjs-editor-types';\r\nimport type { BulletListType, IEditor } from 'roosterjs-editor-types';\r\nimport type { CompatibleBulletListType } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Toggle bullet at selection\r\n * If selection contains bullet in deep level, toggle bullet will decrease the bullet level by one\r\n * If selection contains number list, toggle bullet will convert the number list into bullet list\r\n * If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\r\n * browser execCommand API\r\n * @param editor The editor instance\r\n * @param listStyle (Optional) the style of the bullet list. If not defined, the style will be set to disc.\r\n * @param apiNameOverride (Optional) Set a new api name, if empty the api name will be 'toggleListType'.\r\n */\r\nexport default function toggleBullet(\r\n    editor: IEditor,\r\n    listStyle?: BulletListType | CompatibleBulletListType,\r\n    apiNameOverride?: string\r\n) {\r\n    toggleListType(\r\n        editor,\r\n        ListType.Unordered,\r\n        undefined /* startNumber */,\r\n        false /* includeSiblingLists */,\r\n        undefined /** orderedStyle  */,\r\n        listStyle,\r\n        apiNameOverride\r\n    );\r\n}\r\n","import blockWrap from '../utils/blockWrap';\r\nimport { QueryScope } from 'roosterjs-editor-types';\r\nimport { unwrap, wrap } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\nconst PRE_TAG = 'pre';\r\nconst CODE_TAG = 'code';\r\nconst SELECTOR = `${PRE_TAG}>${CODE_TAG}`;\r\n\r\n/**\r\n * Toggle code block at selection, if selection already contains any code blocked elements,\r\n * the code block elements will be no longer be code blocked and other elements will take no affect\r\n * @param editor The editor instance\r\n * @param styler (Optional) The custom styler for setting the style for the code block element\r\n */\r\nexport default function toggleCodeBlock(\r\n    editor: IEditor,\r\n    styler?: (element: HTMLElement) => void\r\n): void {\r\n    blockWrap(\r\n        editor,\r\n        nodes => {\r\n            const code = wrap(nodes, CODE_TAG);\r\n            const pre = wrap(code, PRE_TAG);\r\n            styler?.(pre);\r\n        },\r\n        () =>\r\n            editor.queryElements(SELECTOR, QueryScope.OnSelection, code => {\r\n                if (!code.previousSibling && !code.nextSibling) {\r\n                    const parent = code.parentNode;\r\n                    unwrap(code);\r\n                    if (parent) {\r\n                        unwrap(parent);\r\n                    }\r\n                }\r\n            }).length == 0,\r\n        'toggleCodeBlock'\r\n    );\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Toggle italic at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only italic text, the italic style will be removed\r\n * If selection contains only normal text, italic style will be added to the whole selected text\r\n * If selection contains both italic and normal text, italic style will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleItalic(editor: IEditor) {\r\n    execCommand(editor, DocumentCommand.Italic, 'toggleItalic');\r\n}\r\n","import toggleListType from '../utils/toggleListType';\r\nimport { ListType } from 'roosterjs-editor-types';\r\nimport type { IEditor, NumberingListType } from 'roosterjs-editor-types';\r\nimport type { CompatibleNumberingListType } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Toggle numbering at selection\r\n * If selection contains numbering in deep level, toggle numbering will decrease the numbering level by one\r\n * If selection contains bullet list, toggle numbering will convert the bullet list into number list\r\n * If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\r\n * realization of browser execCommand API\r\n * @param editor The editor instance\r\n * @param startNumber (Optional) Start number of the list\r\n * @param listStyle (Optional) The style of the numbering list. If not defined, the style will be set to decimal.\r\n * @param apiNameOverride (Optional) Set a new api name, if empty the api name will be 'toggleListType'.\r\n */\r\nexport default function toggleNumbering(\r\n    editor: IEditor,\r\n    startNumber?: number,\r\n    listStyle?: NumberingListType | CompatibleNumberingListType,\r\n    apiNameOverride?: string\r\n) {\r\n    toggleListType(\r\n        editor,\r\n        ListType.Ordered,\r\n        startNumber,\r\n        undefined /* includeSiblingLists */,\r\n        listStyle,\r\n        undefined /* unorderedStyle */,\r\n        apiNameOverride\r\n    );\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Toggle strikethrough at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only strikethrough text, the strikethrough style will be removed\r\n * If selection contains only normal text, strikethrough style will be added to the whole selected text\r\n * If selection contains both strikethrough and normal text, strikethrough style will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleStrikethrough(editor: IEditor) {\r\n    execCommand(editor, DocumentCommand.StrikeThrough, 'toggleStrikethrough');\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Toggle subscript at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only subscript text, the subscript style will be removed\r\n * If selection contains only normal text, subscript style will be added to the whole selected text\r\n * If selection contains both subscript and normal text, the subscript style will be removed from whole selected text\r\n * If selection contains any superscript text, the behavior is determined by corresponding realization of browser\r\n * execCommand API\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleSubscript(editor: IEditor) {\r\n    execCommand(editor, DocumentCommand.Subscript, 'toggleSubscript');\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Toggle superscript at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only superscript text, the superscript style will be removed\r\n * If selection contains only normal text, superscript style will be added to the whole selected text\r\n * If selection contains both superscript and normal text, the superscript style will be removed from whole selected text\r\n * If selection contains any subscript text, the behavior is determined by corresponding realization of browser\r\n * execCommand API\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleSuperscript(editor: IEditor) {\r\n    execCommand(editor, DocumentCommand.Superscript, 'toggleSuperscript');\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Toggle underline at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only underlined text, the underline style will be removed\r\n * If selection contains only normal text, underline style will be added to the whole selected text\r\n * If selection contains both underlined and normal text, the underline style will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleUnderline(editor: IEditor) {\r\n    execCommand(editor, DocumentCommand.Underline, 'toggleUnderline');\r\n}\r\n","export { default as changeFontSize, FONT_SIZES } from './format/changeFontSize';\r\nexport { default as clearBlockFormat } from './format/clearBlockFormat';\r\nexport { default as clearFormat } from './format/clearFormat';\r\nexport { default as createLink } from './format/createLink';\r\nexport { default as getFormatState, getElementBasedFormatState } from './format/getFormatState';\r\nexport { default as insertEntity } from './format/insertEntity';\r\nexport { default as insertImage } from './format/insertImage';\r\nexport { default as insertTable } from './table/insertTable';\r\nexport { default as editTable } from './table/editTable';\r\nexport { default as formatTable } from './table/formatTable';\r\nexport { default as removeLink } from './format/removeLink';\r\nexport { default as replaceWithNode } from './format/replaceWithNode';\r\nexport { default as rotateElement } from './format/rotateElement';\r\nexport { default as setAlignment } from './format/setAlignment';\r\nexport { default as setBackgroundColor } from './format/setBackgroundColor';\r\nexport { default as setTextColor } from './format/setTextColor';\r\nexport { default as setDirection } from './format/setDirection';\r\nexport { default as setFontName } from './format/setFontName';\r\nexport { default as setFontSize } from './format/setFontSize';\r\nexport { default as setImageAltText } from './format/setImageAltText';\r\nexport { default as setIndentation } from './format/setIndentation';\r\nexport { default as changeCapitalization } from './format/changeCapitalization';\r\nexport { default as toggleBold } from './format/toggleBold';\r\nexport { default as toggleBullet } from './format/toggleBullet';\r\nexport { default as toggleItalic } from './format/toggleItalic';\r\nexport { default as toggleNumbering } from './format/toggleNumbering';\r\nexport { default as setOrderedListNumbering } from './format/setOrderedListNumbering';\r\nexport { default as toggleBlockQuote } from './format/toggleBlockQuote';\r\nexport { default as toggleCodeBlock } from './format/toggleCodeBlock';\r\nexport { default as toggleStrikethrough } from './format/toggleStrikethrough';\r\nexport { default as toggleSubscript } from './format/toggleSubscript';\r\nexport { default as toggleSuperscript } from './format/toggleSuperscript';\r\nexport { default as toggleUnderline } from './format/toggleUnderline';\r\nexport { default as setHeadingLevel, toggleHeader } from './format/setHeadingLevel';\r\nexport { default as applyCellShading } from './table/applyCellShading';\r\n\r\nexport { default as toggleListType } from './utils/toggleListType';\r\nexport { default as blockFormat } from './utils/blockFormat';\r\nexport { default as commitListChains, experimentCommitListChains } from './utils/commitListChains';\r\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\nimport type { IEditor, ModeIndependentColor } from 'roosterjs-editor-types';\nimport {\n    getTableCellMetadata,\n    safeInstanceOf,\n    saveTableCellMetadata,\n    setColor,\n} from 'roosterjs-editor-dom';\n\n/**\n * Set background color of cells.\n * @param editor The editor instance\n * @param color One of two options:\n **/\nexport default function applyCellShading(editor: IEditor, color: string | ModeIndependentColor) {\n    editor.focus();\n    formatUndoSnapshot(\n        editor,\n        () => {\n            const regions = editor.getSelectedRegions();\n            regions.forEach(region => {\n                if (safeInstanceOf(region.rootNode, 'HTMLTableCellElement')) {\n                    setColor(\n                        region.rootNode,\n                        color,\n                        true /* isBackgroundColor */,\n                        editor.isDarkMode(),\n                        true /** shouldAdaptFontColor */,\n                        editor.getDarkColorHandler()\n                    );\n                    const meta = getTableCellMetadata(region.rootNode);\n                    saveTableCellMetadata(region.rootNode, {\n                        ...meta,\n                        bgColorOverride: true,\n                    });\n                }\n            });\n        },\n        'applyCellShading'\n    );\n}\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport { PositionType, SelectionRangeTypes, TableOperation } from 'roosterjs-editor-types';\r\nimport { VTable } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\nimport type { CompatibleTableOperation } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Edit table with given operation. If there is no table at cursor then no op.\r\n * @param editor The editor instance\r\n * @param operation Table operation\r\n */\r\nexport default function editTable(\r\n    editor: IEditor,\r\n    operation: TableOperation | CompatibleTableOperation\r\n) {\r\n    let td = editor.getElementAtCursor('TD,TH') as HTMLTableCellElement;\r\n    if (td) {\r\n        formatUndoSnapshot(\r\n            editor,\r\n            () => {\r\n                let vtable = new VTable(td);\r\n\r\n                saveTableSelection(editor, vtable);\r\n                vtable.edit(operation);\r\n                vtable.writeBack(false /** skipApplyFormat */, editor.getDarkColorHandler());\r\n                editor.transformToDarkColor(vtable.table);\r\n\r\n                editor.focus();\r\n                if (isUndefined(vtable.row) || isUndefined(vtable.col)) {\r\n                    return;\r\n                }\r\n                let { newCol, newRow } = calculateCellToSelect(operation, vtable.row, vtable.col);\r\n                const newTd = vtable.getCell(newRow, newCol).td;\r\n                if (newTd) {\r\n                    editor.select(newTd, PositionType.Begin);\r\n                }\r\n            },\r\n            'editTable'\r\n        );\r\n    }\r\n}\r\n\r\nfunction isUndefined(n: number | undefined): n is undefined {\r\n    return n == undefined;\r\n}\r\n\r\nfunction calculateCellToSelect(\r\n    operation: TableOperation | CompatibleTableOperation,\r\n    currentRow: number,\r\n    currentCol: number\r\n) {\r\n    let newRow = currentRow;\r\n    let newCol = currentCol;\r\n    switch (operation) {\r\n        case TableOperation.InsertAbove:\r\n            newCol = 0;\r\n            break;\r\n        case TableOperation.InsertBelow:\r\n            newRow += 1;\r\n            newCol = 0;\r\n            break;\r\n        case TableOperation.InsertLeft:\r\n            newRow = 0;\r\n            break;\r\n        case TableOperation.InsertRight:\r\n            newRow = 0;\r\n            newCol += 1;\r\n            break;\r\n    }\r\n\r\n    return {\r\n        newRow,\r\n        newCol,\r\n    };\r\n}\r\n\r\nfunction saveTableSelection(editor: IEditor, vtable: VTable) {\r\n    const selection = editor.getSelectionRangeEx();\r\n    if (selection && selection.type === SelectionRangeTypes.TableSelection) {\r\n        vtable.selection = selection.coordinates ?? null;\r\n    }\r\n}\r\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport { VTable } from 'roosterjs-editor-dom';\r\nimport type { IEditor, TableFormat } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Format table\r\n * @param editor The editor which contains the table to format\r\n * @param format A TableFormat object contains format information we want to apply to the table\r\n * @param table The table to format. This is optional. When not passed, the current table (if any) will be formatted\r\n */\r\nexport default function formatTable(\r\n    editor: IEditor,\r\n    format: TableFormat,\r\n    table?: HTMLTableElement\r\n) {\r\n    table = table || (editor.getElementAtCursor('TABLE') as HTMLTableElement);\r\n    if (table) {\r\n        formatUndoSnapshot(\r\n            editor,\r\n            (start, end) => {\r\n                if (!table) {\r\n                    return;\r\n                }\r\n\r\n                let vtable = new VTable(table);\r\n                vtable.applyFormat(format);\r\n                vtable.writeBack(false /** skipApplyFormat */, editor.getDarkColorHandler());\r\n                editor.transformToDarkColor(vtable.table);\r\n                editor.focus();\r\n                if (start && end) {\r\n                    editor.select(start, end);\r\n                }\r\n            },\r\n            'formatTable'\r\n        );\r\n    }\r\n}\r\n","import formatUndoSnapshot from '../utils/formatUndoSnapshot';\r\nimport setBackgroundColor from '../format/setBackgroundColor';\r\nimport { Position, VTable } from 'roosterjs-editor-dom';\r\nimport { PositionType } from 'roosterjs-editor-types';\r\nimport type { IEditor, TableFormat } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Insert table into editor at current selection\r\n * @param editor The editor instance\r\n * @param columns Number of columns in table, it also controls the default table cell width:\r\n * if columns &lt;= 4, width = 120px; if columns &lt;= 6, width = 100px; else width = 70px\r\n * @param rows Number of rows in table\r\n * @param format (Optional) The table format. If not passed, the default format will be applied:\r\n * background color: #FFF; border color: #ABABAB\r\n */\r\nexport default function insertTable(\r\n    editor: IEditor,\r\n    columns: number,\r\n    rows: number,\r\n    format?: TableFormat\r\n) {\r\n    let document = editor.getDocument();\r\n    let table = document.createElement('table') as HTMLTableElement;\r\n    table.cellSpacing = '0';\r\n    table.cellPadding = '1';\r\n    for (let i = 0; i < rows; i++) {\r\n        let tr = document.createElement('tr') as HTMLTableRowElement;\r\n        table.appendChild(tr);\r\n        for (let j = 0; j < columns; j++) {\r\n            let td = document.createElement('td') as HTMLTableCellElement;\r\n            tr.appendChild(td);\r\n            td.appendChild(document.createElement('br'));\r\n            td.style.width = getTableCellWidth(columns);\r\n        }\r\n    }\r\n\r\n    editor.focus();\r\n    formatUndoSnapshot(\r\n        editor,\r\n        () => {\r\n            const element = editor.getElementAtCursor();\r\n            if (element?.style.backgroundColor) {\r\n                setBackgroundColor(editor, 'transparent');\r\n            }\r\n            let vtable = new VTable(table);\r\n            // Assign default vertical align\r\n            format = format || { verticalAlign: 'top' };\r\n            vtable.applyFormat(format || {});\r\n            vtable.writeBack();\r\n            editor.insertNode(table);\r\n            editor.runAsync(editor =>\r\n                editor.select(new Position(table, PositionType.Begin).normalize())\r\n            );\r\n        },\r\n        'insertTable'\r\n    );\r\n}\r\n\r\nfunction getTableCellWidth(columns: number): string {\r\n    if (columns <= 4) {\r\n        return '120px';\r\n    } else if (columns <= 6) {\r\n        return '100px';\r\n    } else {\r\n        return '70px';\r\n    }\r\n}\r\n","import formatUndoSnapshot from './formatUndoSnapshot';\r\nimport { getTagOfNode } from 'roosterjs-editor-dom';\r\nimport type { IEditor } from 'roosterjs-editor-types';\r\nimport {\r\n    ChangeSource,\r\n    PluginEventType,\r\n    PositionType,\r\n    SelectionRangeTypes,\r\n} from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * Apply inline style to current selection\r\n * @param editor The editor instance\r\n * @param callback The callback function to apply style\r\n */\r\nexport default function applyInlineStyle(\r\n    editor: IEditor,\r\n    callback: (element: HTMLElement, isInnerNode?: boolean) => any,\r\n    apiName: string\r\n) {\r\n    editor.focus();\r\n    let selection = editor.getSelectionRangeEx();\r\n\r\n    const safeCallback = (element: HTMLElement, isInnerNode?: boolean) =>\r\n        element.isContentEditable && callback(element, isInnerNode);\r\n\r\n    if (selection && selection.areAllCollapsed) {\r\n        const range = selection.ranges[0];\r\n        let node = range.startContainer;\r\n        let isEmptySpan =\r\n            getTagOfNode(node) == 'SPAN' &&\r\n            (!node.firstChild ||\r\n                (getTagOfNode(node.firstChild) == 'BR' && !node.firstChild.nextSibling));\r\n        if (isEmptySpan) {\r\n            editor.addUndoSnapshot();\r\n            safeCallback(node as HTMLElement);\r\n        } else {\r\n            editor.triggerPluginEvent(PluginEventType.PendingFormatStateChanged, {\r\n                formatState: {},\r\n                // Here we use callback instead of safeCallback because we know it's contentEditable.\r\n                // In addition, for elements that are not added to the DOM tree, isContentEditable always returns false on Safari.\r\n                formatCallback: callback,\r\n            });\r\n            editor.triggerContentChangedEvent(ChangeSource.Format);\r\n        }\r\n    } else {\r\n        // This is start and end node that get the style. The start and end needs to be recorded so that selection\r\n        // can be re-applied post-applying style\r\n        formatUndoSnapshot(\r\n            editor,\r\n            () => {\r\n                let firstNode: Node | undefined;\r\n                let lastNode: Node | undefined;\r\n                selection.ranges.forEach(range => {\r\n                    let contentTraverser = editor.getSelectionTraverser(range);\r\n                    if (!contentTraverser) {\r\n                        return;\r\n                    }\r\n                    let inlineElement = contentTraverser && contentTraverser.currentInlineElement;\r\n                    while (inlineElement) {\r\n                        let nextInlineElement = contentTraverser.getNextInlineElement();\r\n                        inlineElement.applyStyle((element, isInnerNode) => {\r\n                            safeCallback(element, isInnerNode);\r\n                            firstNode = firstNode || element;\r\n                            lastNode = element;\r\n                        });\r\n                        inlineElement = nextInlineElement;\r\n                    }\r\n                });\r\n\r\n                if (firstNode && lastNode && selection.type == SelectionRangeTypes.Normal) {\r\n                    editor.select(firstNode, PositionType.Before, lastNode, PositionType.After);\r\n                }\r\n            },\r\n            apiName\r\n        );\r\n    }\r\n}\r\n","import applyInlineStyle from '../utils/applyInlineStyle';\nimport { safeInstanceOf, setListItemStyle } from 'roosterjs-editor-dom';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Set the List Item Style when all inner inline element have the same style\n * @param editor The editor instance\n * @param styleName Name of the style to apply to the list item\n * @param formatCallback callback to apply the style to each element\n */\nexport default function applyListItemStyleWrap(\n    editor: IEditor,\n    styleName: string,\n    formatCallback: (element: HTMLElement, isInnerNode?: boolean) => any,\n    apiName: string\n) {\n    const parentNodes: Node[] = [];\n    applyInlineStyle(\n        editor,\n        (element, isInnerNode) => {\n            formatCallback(element, isInnerNode);\n\n            let parent = editor.getElementAtCursor('LI', element);\n            if (parent && parentNodes.indexOf(parent) === -1) {\n                parentNodes.push(parent);\n            }\n        },\n        apiName\n    );\n\n    applyStyleToListItems(parentNodes, [styleName]);\n}\n\n/**\n * @internal\n * Checks if the parent element is a List Item, if it is, apply the style elements to the list item\n * @param parentNodes parentNodes to apply the style\n * @param styles styles to apply to the List Item Element\n */\nfunction applyStyleToListItems(parentNodes: Node[], styles: string[]) {\n    parentNodes.forEach(node => {\n        if (safeInstanceOf(node, 'HTMLLIElement')) {\n            setListItemStyle(node, styles);\n        }\n    });\n}\n","import commitListChains from '../utils/commitListChains';\nimport formatUndoSnapshot from './formatUndoSnapshot';\nimport { SelectionRangeTypes } from 'roosterjs-editor-types';\nimport { VListChain } from 'roosterjs-editor-dom';\nimport type { IEditor, NodePosition, Region } from 'roosterjs-editor-types';\n\n/**\n * Split selection into regions, and perform a block-wise formatting action for each region.\n */\nexport default function blockFormat(\n    editor: IEditor,\n    callback: (\n        region: Region,\n        start: NodePosition | null,\n        end: NodePosition | null,\n        chains: VListChain[]\n    ) => void,\n    beforeRunCallback?: () => boolean,\n    apiName?: string\n) {\n    editor.focus();\n    const selection = editor.getSelectionRangeEx();\n\n    formatUndoSnapshot(\n        editor,\n        (start, end) => {\n            if (!beforeRunCallback || beforeRunCallback()) {\n                const regions = editor.getSelectedRegions();\n                if (regions.length > 0) {\n                    const chains = VListChain.createListChains(regions, start?.node);\n                    regions.forEach(region => callback(region, start, end, chains));\n                    commitListChains(editor, chains);\n                }\n            }\n            if (selection.type == SelectionRangeTypes.Normal && start && end) {\n                editor.select(start, end);\n            } else {\n                editor.select(selection);\n            }\n        },\n        apiName\n    );\n}\n","import blockFormat from './blockFormat';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport {\n    collapseNodesInRegion,\n    getSelectedBlockElementsInRegion,\n    getTagOfNode,\n    isNodeInRegion,\n    splitBalancedNodeRange,\n    toArray,\n    wrap,\n} from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Toggle a tag at selection, if selection already contains elements of such tag,\n * the elements will be untagged and other elements will take no effect\n * @param editor The editor instance\n * @param wrapFunction  The wrap function\n * @param beforeRunCallback A callback function to run before looping all regions. If it returns false,\n * the loop for regions will be skipped\n */\nexport default function blockWrap(\n    editor: IEditor,\n    wrapFunction: (nodes: Node[]) => void,\n    beforeRunCallback: () => boolean,\n    apiName?: string\n): void {\n    blockFormat(\n        editor,\n        region => {\n            const blocks = getSelectedBlockElementsInRegion(region, true /*createBlockIfEmpty*/);\n            let nodes = collapseNodesInRegion(region, blocks);\n            if (nodes.length > 0) {\n                if (nodes.length == 1) {\n                    const NodeTag = getTagOfNode(nodes[0]);\n                    if (NodeTag == 'BR') {\n                        nodes = [wrap(nodes[0])];\n                    } else if (NodeTag == 'LI' || NodeTag == 'TD') {\n                        nodes = toArray(nodes[0].childNodes);\n                    }\n                }\n\n                while (\n                    nodes[0] &&\n                    nodes[0].parentNode &&\n                    isNodeInRegion(region, nodes[0].parentNode) &&\n                    nodes.some(node => getTagOfNode(node) == 'LI')\n                ) {\n                    const result = splitBalancedNodeRange(nodes);\n                    nodes = result ? [result] : [];\n                }\n\n                wrapFunction(nodes);\n            }\n        },\n        beforeRunCallback,\n        apiName\n    );\n}\n","import { getTagOfNode } from 'roosterjs-editor-dom';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\nimport type { BlockElement, IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * Collapse all selected blocks, return single HTML elements for each block\r\n * @param editor The editor instance\r\n * @param forEachCallback A callback function to invoke for each of the collapsed element\r\n */\r\nexport default function collapseSelectedBlocks(\r\n    editor: IEditor,\r\n    forEachCallback: (element: HTMLElement) => any\r\n) {\r\n    let traverser = editor.getSelectionTraverser();\r\n    if (!traverser) {\r\n        return;\r\n    }\r\n    let block = traverser.currentBlockElement;\r\n    let blocks: BlockElement[] = [];\r\n    while (block) {\r\n        if (!isEmptyBlockUnderTR(block)) {\r\n            blocks.push(block);\r\n        }\r\n        block = traverser.getNextBlockElement();\r\n    }\r\n\r\n    blocks.forEach(block => {\r\n        let element = block.collapseToSingleElement();\r\n        forEachCallback(element);\r\n    });\r\n}\r\n\r\nfunction isEmptyBlockUnderTR(block: BlockElement): boolean {\r\n    let startNode = block.getStartNode();\r\n\r\n    return (\r\n        startNode == block.getEndNode() &&\r\n        startNode.nodeType == NodeType.Text &&\r\n        ['TR', 'TABLE'].indexOf(getTagOfNode(startNode.parentNode)) >= 0\r\n    );\r\n}\r\n","import { ExperimentalFeatures } from 'roosterjs-editor-types';\nimport { Position } from 'roosterjs-editor-dom';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { VListChain } from 'roosterjs-editor-dom';\n\n/**\n * Commit changes of all list changes when experiment features are allowed\n * @param editor The Editor object\n * @param chains List chains to commit\n */\nexport default function commitListChains(editor: IEditor, chains: VListChain[]) {\n    if (chains?.length > 0) {\n        const range = editor.getSelectionRange();\n        const start = range && Position.getStart(range);\n        const end = range && Position.getEnd(range);\n        const shouldReuseAllAncestorListElements = editor.isFeatureEnabled(\n            ExperimentalFeatures.ReuseAllAncestorListElements\n        );\n        const shouldDisableListChain = editor.isFeatureEnabled(\n            ExperimentalFeatures.DisableListChain\n        );\n\n        chains.forEach(chain =>\n            chain.commit(shouldReuseAllAncestorListElements, shouldDisableListChain)\n        );\n\n        if (start && end) {\n            editor.select(start, end);\n        }\n    }\n}\n\n/**\n * @deprecated\n * Same with commitListChains, keep this export just for backward compatibility\n */\nexport const experimentCommitListChains = commitListChains;\n","import formatUndoSnapshot from './formatUndoSnapshot';\nimport { getObjectKeys, PendableFormatCommandMap } from 'roosterjs-editor-dom';\nimport { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type { PendableFormatNames } from 'roosterjs-editor-dom';\nimport type { DocumentCommand, IEditor } from 'roosterjs-editor-types';\nimport type { CompatibleDocumentCommand } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * @internal\n * Execute a document command\n * @param editor The editor instance\n * @param command The command to execute\n * @param addUndoSnapshotWhenCollapsed Optional, set to true to always add undo snapshot even current selection is collapsed.\n * Default value is false.\n * @param doWorkaroundForList Optional, set to true to do workaround for list in order to keep current format.\n * Default value is false.\n */\nexport default function execCommand(\n    editor: IEditor,\n    command: DocumentCommand | CompatibleDocumentCommand,\n    apiName?: string\n) {\n    editor.focus();\n\n    let formatter = () => editor.getDocument().execCommand(command, false, undefined);\n\n    let selection = editor.getSelectionRangeEx();\n    if (selection && selection.areAllCollapsed) {\n        editor.addUndoSnapshot();\n        const formatState = editor.getPendableFormatState(false /* forceGetStateFromDom */);\n        formatter();\n        const formatName = getObjectKeys(PendableFormatCommandMap).filter(\n            x => PendableFormatCommandMap[x] == command\n        )[0] as PendableFormatNames;\n\n        if (formatName) {\n            formatState[formatName] = !formatState[formatName];\n            editor.triggerPluginEvent(PluginEventType.PendingFormatStateChanged, {\n                formatState: formatState,\n            });\n        }\n    } else {\n        formatUndoSnapshot(\n            editor,\n            () => {\n                const needToSwitchSelection = selection.type != SelectionRangeTypes.Normal;\n\n                selection.ranges.forEach(range => {\n                    if (needToSwitchSelection) {\n                        editor.select(range);\n                    }\n                    formatter();\n                });\n\n                if (needToSwitchSelection) {\n                    editor.select(selection);\n                }\n            },\n            apiName\n        );\n    }\n}\n","import { ChangeSource } from 'roosterjs-editor-types';\nimport type { IEditor, NodePosition } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Execute add undo snapshot for the Format APIs\n * @param editor The editor instance\n * @param command Optional, The callback function to perform formatting, returns a data object which will be used as the data field in ContentChangedEvent if changeSource is not null.\n * @param apiName Optional, name of the API that was is going to be executed.\n * Default value is false.\n */\nexport default function formatUndoSnapshot(\n    editor: IEditor,\n    callback?: (start: NodePosition | null, end: NodePosition | null) => any,\n    apiName?: string\n) {\n    editor.addUndoSnapshot(\n        callback,\n        ChangeSource.Format,\n        undefined /* canUndoByBackspace */,\n        apiName && apiName != ''\n            ? {\n                  formatApiName: apiName,\n              }\n            : undefined\n    );\n}\n","import { findClosestElementAncestor, getComputedStyle, safeInstanceOf } from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * @param node start node to normalize\n * @param quotesHandled Optional parameter to prevent already modified quotes to be rechecked.\n * @returns\n */\nexport default function normalizeBlockquote(node: Node, quotesHandled?: Node[]): void {\n    if (safeInstanceOf(node, 'HTMLElement')) {\n        const alignment = node.style.textAlign;\n\n        let quote = findClosestElementAncestor(node, undefined /* root */, 'blockquote');\n        if (!quote) {\n            return;\n        }\n        const isNodeRTL = isRTL(node);\n\n        if (quotesHandled) {\n            if (quotesHandled.indexOf(quote) > -1) {\n                return;\n            }\n            quotesHandled.push(quote);\n        }\n\n        while (quote) {\n            if (alignment == 'center') {\n                if (isNodeRTL) {\n                    quote.style.removeProperty('marginInlineEnd');\n                    quote.style.marginInlineStart = 'auto';\n                } else {\n                    quote.style.removeProperty('marginInlineStart');\n                    quote.style.marginInlineEnd = 'auto';\n                }\n            } else {\n                quote.style.removeProperty('marginInlineEnd');\n                quote.style.removeProperty('marginInlineStart');\n            }\n\n            quote = findClosestElementAncestor(\n                quote.parentElement,\n                undefined /* root */,\n                'blockquote'\n            );\n        }\n    }\n}\n\nfunction isRTL(el: Element) {\n    return getComputedStyle(el, 'direction') == 'rtl' || el.getAttribute('dir') == 'rtl';\n}\n","import blockFormat from '../utils/blockFormat';\nimport { createVListFromRegion, getBlockElementAtNode } from 'roosterjs-editor-dom';\nimport { ExperimentalFeatures } from 'roosterjs-editor-types';\nimport type { BulletListType, IEditor, ListType, NumberingListType } from 'roosterjs-editor-types';\nimport type {\n    CompatibleBulletListType,\n    CompatibleListType,\n    CompatibleNumberingListType,\n} from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * Toggle List Type at selection\n * If ListType Provided is Ordered:\n *      If selection contains numbering in deep level, toggle numbering will decrease the numbering level by one\n *      If selection contains bullet list, toggle numbering will convert the bullet list into number list\n *      If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\n *       realization of browser execCommand API\n * If ListType Provided is Unordered:\n *      If selection contains bullet in deep level, toggle bullet will decrease the bullet level by one\n *      If selection contains number list, toggle bullet will convert the number list into bullet list\n *      If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\n *      browser execCommand API\n * @param editor The editor instance\n * @param listType The list type to toggle\n * @param startNumber (Optional) Start number of the list\n * @param includeSiblingLists Sets wether the operation should include Sibling Lists, by default true\n * @param orderedStyle (Optional) the style of an ordered. If not defined, the style will be set to decimal.\n * @param unorderedStyle (Optional) the style of an unordered list. If not defined, the style will be set to disc.\n * @param apiNameOverride (Optional) Set a new api name, if empty the api name will be 'toggleListType'.\n */\nexport default function toggleListType(\n    editor: IEditor,\n    listType: ListType | CompatibleListType,\n    startNumber: number = 0,\n    includeSiblingLists: boolean = true,\n    orderedStyle?: NumberingListType | CompatibleNumberingListType,\n    unorderedStyle?: BulletListType | CompatibleBulletListType,\n    apiNameOverride?: string\n) {\n    blockFormat(\n        editor,\n        (region, start, end, chains) => {\n            const chain =\n                startNumber > 0 && chains.filter(chain => chain.canAppendAtCursor(startNumber))[0];\n            const block = getBlockElementAtNode(\n                region.rootNode,\n                start?.node ?? null\n            )?.collapseToSingleElement();\n            if (!block) {\n                return;\n            }\n            const vList =\n                chain && end && start?.equalTo(end)\n                    ? chain.createVListAtBlock(block, startNumber)\n                    : createVListFromRegion(\n                          region,\n                          startNumber === 1 ? false : includeSiblingLists\n                      );\n\n            if (vList && start && end) {\n                vList.changeListType(start, end, listType);\n                vList.setListStyleType(orderedStyle, unorderedStyle);\n                vList.writeBack(\n                    editor.isFeatureEnabled(ExperimentalFeatures.ReuseAllAncestorListElements),\n                    editor.isFeatureEnabled(ExperimentalFeatures.DisableListChain)\n                );\n            }\n        },\n        undefined /* beforeRunCallback */,\n        apiNameOverride || 'toggleListType'\n    );\n}\n","import { getSelectionPath, Position } from 'roosterjs-editor-dom';\nimport { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type {\n    EntityState,\n    AddUndoSnapshot,\n    ChangeSource,\n    ContentChangedData,\n    ContentChangedEvent,\n    ContentMetadata,\n    EditorCore,\n    NodePosition,\n    SelectionRangeEx,\n} from 'roosterjs-editor-types';\nimport type { CompatibleChangeSource } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * @internal\n * Call an editing callback with adding undo snapshots around, and trigger a ContentChanged event if change source is specified.\n * Undo snapshot will not be added if this call is nested inside another addUndoSnapshot() call.\n * @param core The EditorCore object\n * @param callback The editing callback, accepting current selection start and end position, returns an optional object used as the data field of ContentChangedEvent.\n * @param changeSource The ChangeSource string of ContentChangedEvent. @default ChangeSource.Format. Set to null to avoid triggering ContentChangedEvent\n * @param canUndoByBackspace True if this action can be undone when user press Backspace key (aka Auto Complete).\n * @param additionalData @optional parameter to provide additional data related to the ContentChanged Event.\n */\nexport const addUndoSnapshot: AddUndoSnapshot = (\n    core: EditorCore,\n    callback: ((start: NodePosition | null, end: NodePosition | null) => any) | null,\n    changeSource: ChangeSource | CompatibleChangeSource | string | null,\n    canUndoByBackspace: boolean,\n    additionalData?: ContentChangedData\n) => {\n    const undoState = core.undo;\n    const isNested = undoState.isNested;\n    let data: any;\n\n    if (!isNested) {\n        undoState.isNested = true;\n\n        // When there is getEntityState, it means this is triggered by an entity change.\n        // So if HTML content is not changed (hasNewContent is false), no need to add another snapshot before change\n        if (core.undo.hasNewContent || !additionalData?.getEntityState || !callback) {\n            addUndoSnapshotInternal(core, canUndoByBackspace, additionalData?.getEntityState?.());\n        }\n    }\n\n    try {\n        if (callback) {\n            let range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\n            data = callback(\n                range && Position.getStart(range).normalize(),\n                range && Position.getEnd(range).normalize()\n            );\n\n            if (!isNested) {\n                const entityStates = additionalData?.getEntityState?.();\n                addUndoSnapshotInternal(core, false /*isAutoCompleteSnapshot*/, entityStates);\n            }\n        }\n    } finally {\n        if (!isNested) {\n            undoState.isNested = false;\n        }\n    }\n\n    if (callback && changeSource) {\n        let event: ContentChangedEvent = {\n            eventType: PluginEventType.ContentChanged,\n            source: changeSource,\n            data: data,\n            additionalData,\n        };\n        core.api.triggerEvent(core, event, true /*broadcast*/);\n    }\n\n    if (canUndoByBackspace) {\n        const range = core.api.getSelectionRange(core, false /*tryGetFromCache*/);\n\n        if (range) {\n            core.undo.hasNewContent = false;\n            core.undo.autoCompletePosition = Position.getStart(range);\n        }\n    }\n};\n\nfunction addUndoSnapshotInternal(\n    core: EditorCore,\n    canUndoByBackspace: boolean,\n    entityStates?: EntityState[]\n) {\n    if (!core.lifecycle.shadowEditFragment) {\n        const rangeEx = core.api.getSelectionRangeEx(core);\n        const isDarkMode = core.lifecycle.isDarkMode;\n        const metadata = createContentMetadata(core.contentDiv, rangeEx, isDarkMode) || null;\n\n        core.undo.snapshotsService.addSnapshot(\n            {\n                html: core.contentDiv.innerHTML,\n                metadata,\n                knownColors: core.darkColorHandler?.getKnownColorsCopy() || [],\n                entityStates,\n            },\n            canUndoByBackspace\n        );\n        core.undo.hasNewContent = false;\n    }\n}\n\nfunction createContentMetadata(\n    root: HTMLElement,\n    rangeEx: SelectionRangeEx,\n    isDarkMode: boolean\n): ContentMetadata | undefined {\n    switch (rangeEx?.type) {\n        case SelectionRangeTypes.TableSelection:\n            return {\n                type: SelectionRangeTypes.TableSelection,\n                tableId: rangeEx.table.id,\n                isDarkMode: !!isDarkMode,\n                ...rangeEx.coordinates!,\n            };\n        case SelectionRangeTypes.ImageSelection:\n            return {\n                type: SelectionRangeTypes.ImageSelection,\n                imageId: rangeEx.image.id,\n                isDarkMode: !!isDarkMode,\n            };\n        case SelectionRangeTypes.Normal:\n            return {\n                type: SelectionRangeTypes.Normal,\n                isDarkMode: !!isDarkMode,\n                start: [],\n                end: [],\n                ...(getSelectionPath(root, rangeEx.ranges[0]) || {}),\n            };\n    }\n}\n","import { getObjectKeys } from 'roosterjs-editor-dom';\nimport type {\n    AttachDomEvent,\n    DOMEventHandler,\n    DOMEventHandlerObject,\n    EditorCore,\n    PluginDomEvent,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Attach a DOM event to the editor content DIV\n * @param core The EditorCore object\n * @param eventName The DOM event name\n * @param pluginEventType Optional event type. When specified, editor will trigger a plugin event with this name when the DOM event is triggered\n * @param beforeDispatch Optional callback function to be invoked when the DOM event is triggered before trigger plugin event\n */\nexport const attachDomEvent: AttachDomEvent = (\n    core: EditorCore,\n    eventMap: Record<string, DOMEventHandler>\n) => {\n    const disposers = getObjectKeys(eventMap || {}).map(key => {\n        const { pluginEventType, beforeDispatch } = extractHandler(eventMap[key]);\n        const eventName = key as keyof HTMLElementEventMap;\n        let onEvent = (event: HTMLElementEventMap[typeof eventName]) => {\n            if (beforeDispatch) {\n                beforeDispatch(event);\n            }\n            if (pluginEventType != null) {\n                core.api.triggerEvent(\n                    core,\n                    <PluginDomEvent>{\n                        eventType: pluginEventType,\n                        rawEvent: event,\n                    },\n                    false /*broadcast*/\n                );\n            }\n        };\n\n        core.contentDiv.addEventListener(eventName, onEvent);\n\n        return () => {\n            core.contentDiv.removeEventListener(eventName, onEvent);\n        };\n    });\n    return () => disposers.forEach(disposers => disposers());\n};\n\nfunction extractHandler(handlerObj: DOMEventHandler): DOMEventHandlerObject {\n    let result: DOMEventHandlerObject = {\n        pluginEventType: null,\n        beforeDispatch: null,\n    };\n\n    if (typeof handlerObj === 'number') {\n        result.pluginEventType = handlerObj;\n    } else if (typeof handlerObj === 'function') {\n        result.beforeDispatch = handlerObj;\n    } else if (typeof handlerObj === 'object') {\n        result = handlerObj;\n    }\n    return result;\n}\n","import { addUndoSnapshot } from './addUndoSnapshot';\nimport { attachDomEvent } from './attachDomEvent';\nimport { createPasteFragment } from './createPasteFragment';\nimport { ensureTypeInContainer } from './ensureTypeInContainer';\nimport { focus } from './focus';\nimport { getContent } from './getContent';\nimport { getPendableFormatState } from './getPendableFormatState';\nimport { getSelectionRange } from './getSelectionRange';\nimport { getSelectionRangeEx } from './getSelectionRangeEx';\nimport { getStyleBasedFormatState } from './getStyleBasedFormatState';\nimport { hasFocus } from './hasFocus';\nimport { insertNode } from './insertNode';\nimport { restoreUndoSnapshot } from './restoreUndoSnapshot';\nimport { select } from './select';\nimport { selectImage } from './selectImage';\nimport { selectRange } from './selectRange';\nimport { selectTable } from './selectTable';\nimport { setContent } from './setContent';\nimport { switchShadowEdit } from './switchShadowEdit';\nimport { transformColor } from './transformColor';\nimport { triggerEvent } from './triggerEvent';\nimport type { CoreApiMap } from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport const coreApiMap: CoreApiMap = {\n    attachDomEvent,\n    addUndoSnapshot,\n    createPasteFragment,\n    ensureTypeInContainer,\n    focus,\n    getContent,\n    getSelectionRange,\n    getSelectionRangeEx,\n    getStyleBasedFormatState,\n    getPendableFormatState,\n    hasFocus,\n    insertNode,\n    restoreUndoSnapshot,\n    select,\n    selectRange,\n    setContent,\n    switchShadowEdit,\n    transformColor,\n    triggerEvent,\n    selectTable,\n    selectImage,\n};\n","import { PasteType, PluginEventType } from 'roosterjs-editor-types';\nimport {\n    applyFormat,\n    applyTextStyle,\n    createDefaultHtmlSanitizerOptions,\n    getPasteType,\n    handleImagePaste,\n    handleTextPaste,\n    moveChildNodes,\n    retrieveMetadataFromClipboard,\n    sanitizePasteContent,\n} from 'roosterjs-editor-dom';\nimport type {\n    BeforePasteEvent,\n    ClipboardData,\n    CreatePasteFragment,\n    EditorCore,\n    NodePosition,\n    DefaultFormat,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Create a DocumentFragment for paste from a ClipboardData\n * @param core The EditorCore object.\n * @param clipboardData Clipboard data retrieved from clipboard\n * @param position The position to paste to\n * @param pasteAsText True to force use plain text as the content to paste, false to choose HTML or Image if any\n * @param applyCurrentStyle True if apply format of current selection to the pasted content,\n * false to keep original format\n * @param pasteAsImage True if the image should be pasted as image\n */\nexport const createPasteFragment: CreatePasteFragment = (\n    core: EditorCore,\n    clipboardData: ClipboardData,\n    position: NodePosition | null,\n    pasteAsText: boolean,\n    applyCurrentStyle: boolean,\n    pasteAsImage: boolean = false\n) => {\n    if (!clipboardData) {\n        return null;\n    }\n\n    const pasteType = getPasteType(pasteAsText, applyCurrentStyle, pasteAsImage);\n\n    // Step 1: Prepare BeforePasteEvent object\n    const event = createBeforePasteEvent(core, clipboardData, pasteType);\n    return createFragmentFromClipboardData(\n        core,\n        clipboardData,\n        position,\n        pasteAsText,\n        applyCurrentStyle,\n        pasteAsImage,\n        event\n    );\n};\n\nfunction createBeforePasteEvent(\n    core: EditorCore,\n    clipboardData: ClipboardData,\n    pasteType: PasteType\n): BeforePasteEvent {\n    const options = createDefaultHtmlSanitizerOptions();\n\n    // Remove \"caret-color\" style generated by Safari to make sure caret shows in right color after paste\n    options.cssStyleCallbacks['caret-color'] = () => false;\n\n    return {\n        eventType: PluginEventType.BeforePaste,\n        clipboardData,\n        fragment: core.contentDiv.ownerDocument.createDocumentFragment(),\n        sanitizingOption: options,\n        htmlBefore: '',\n        htmlAfter: '',\n        htmlAttributes: {},\n        pasteType: pasteType,\n    };\n}\n\n/**\n * Create a DocumentFragment for paste from a ClipboardData\n * @param core The EditorCore object.\n * @param clipboardData Clipboard data retrieved from clipboard\n * @param position The position to paste to\n * @param pasteAsText True to force use plain text as the content to paste, false to choose HTML or Image if any\n * @param applyCurrentStyle True if apply format of current selection to the pasted content,\n * @param pasteAsImage Whether to force paste as image\n * @param event Event to trigger.\n * false to keep original format\n */\nfunction createFragmentFromClipboardData(\n    core: EditorCore,\n    clipboardData: ClipboardData,\n    position: NodePosition | null,\n    pasteAsText: boolean,\n    applyCurrentStyle: boolean,\n    pasteAsImage: boolean,\n    event: BeforePasteEvent\n) {\n    const { fragment } = event;\n    const { rawHtml, text, imageDataUri } = clipboardData;\n    let doc: Document | undefined = rawHtml\n        ? new DOMParser().parseFromString(core.trustedHTMLHandler(rawHtml), 'text/html')\n        : undefined;\n\n    // Step 2: Retrieve Metadata from Html and the Html that was copied.\n    retrieveMetadataFromClipboard(doc, event, core.trustedHTMLHandler);\n\n    // Step 3: Fill the BeforePasteEvent object, especially the fragment for paste\n    if ((pasteAsImage && imageDataUri) || (!pasteAsText && !text && imageDataUri)) {\n        // Paste image\n        handleImagePaste(imageDataUri, fragment);\n    } else if (!pasteAsText && rawHtml && doc ? doc.body : false) {\n        moveChildNodes(fragment, doc?.body);\n\n        if (applyCurrentStyle && position) {\n            const format = getCurrentFormat(core, position.node);\n            applyTextStyle(fragment, node => applyFormat(node, format));\n        }\n    } else if (text) {\n        // Paste text\n        handleTextPaste(text, position, fragment);\n    }\n\n    // Step 4: Trigger BeforePasteEvent so that plugins can do proper change before paste, when the type of paste is different than Plain Text\n    if (event.pasteType !== PasteType.AsPlainText) {\n        core.api.triggerEvent(core, event, true /*broadcast*/);\n    }\n\n    // Step 5. Sanitize the fragment before paste to make sure the content is safe\n    sanitizePasteContent(event, position);\n\n    return fragment;\n}\n\nfunction getCurrentFormat(core: EditorCore, node: Node): DefaultFormat {\n    const pendableFormat = core.api.getPendableFormatState(core, true /** forceGetStateFromDOM*/);\n    const styleBasedFormat = core.api.getStyleBasedFormatState(core, node);\n    return {\n        fontFamily: styleBasedFormat.fontName,\n        fontSize: styleBasedFormat.fontSize,\n        textColor: styleBasedFormat.textColor,\n        backgroundColor: styleBasedFormat.backgroundColor,\n        textColors: styleBasedFormat.textColors,\n        backgroundColors: styleBasedFormat.backgroundColors,\n        bold: pendableFormat.isBold,\n        italic: pendableFormat.isItalic,\n        underline: pendableFormat.isUnderline,\n    };\n}\n","import { ContentPosition, KnownCreateElementDataIndex, PositionType } from 'roosterjs-editor-types';\nimport type { EditorCore, EnsureTypeInContainer, NodePosition } from 'roosterjs-editor-types';\nimport {\n    applyFormat,\n    createElement,\n    createRange,\n    findClosestElementAncestor,\n    getBlockElementAtNode,\n    isNodeEmpty,\n    Position,\n    safeInstanceOf,\n} from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * When typing goes directly under content div, many things can go wrong\n * We fix it by wrapping it with a div and reposition cursor within the div\n */\nexport const ensureTypeInContainer: EnsureTypeInContainer = (\n    core: EditorCore,\n    position: NodePosition,\n    keyboardEvent?: KeyboardEvent\n) => {\n    const table = findClosestElementAncestor(position.node, core.contentDiv, 'table');\n    let td: HTMLElement | null;\n\n    if (table && (td = table.querySelector('td,th'))) {\n        position = new Position(td, PositionType.Begin);\n    }\n    position = position.normalize();\n\n    const block = getBlockElementAtNode(core.contentDiv, position.node);\n    let formatNode: HTMLElement | null;\n\n    if (block) {\n        formatNode = block.collapseToSingleElement();\n        if (isNodeEmpty(formatNode, false /* trimContent */, true /* shouldCountBrAsVisible */)) {\n            const brEl = formatNode.ownerDocument.createElement('br');\n            formatNode.append(brEl);\n        }\n        // if the block is empty, apply default format\n        // Otherwise, leave it as it is as we don't want to change the style for existing data\n        // unless the block was just created by the keyboard event (e.g. ctrl+a & start typing)\n        const shouldSetNodeStyles =\n            isNodeEmpty(formatNode) ||\n            (keyboardEvent && wasNodeJustCreatedByKeyboardEvent(keyboardEvent, formatNode));\n        formatNode = formatNode && shouldSetNodeStyles ? formatNode : null;\n    } else {\n        // Only reason we don't get the selection block is that we have an empty content div\n        // which can happen when users removes everything (i.e. select all and DEL, or backspace from very end to begin)\n        // The fix is to add a DIV wrapping, apply default format and move cursor over\n        formatNode = createElement(\n            KnownCreateElementDataIndex.EmptyLine,\n            core.contentDiv.ownerDocument\n        ) as HTMLElement;\n        core.api.insertNode(core, formatNode, {\n            position: ContentPosition.End,\n            updateCursor: false,\n            replaceSelection: false,\n            insertOnNewLine: false,\n        });\n\n        // element points to a wrapping node we added \"<div><br></div>\". We should move the selection left to <br>\n        position = new Position(formatNode, PositionType.Begin);\n    }\n\n    if (formatNode && core.lifecycle.defaultFormat) {\n        applyFormat(\n            formatNode,\n            core.lifecycle.defaultFormat,\n            core.lifecycle.isDarkMode,\n            core.darkColorHandler\n        );\n    }\n\n    // If this is triggered by a keyboard event, let's select the new position\n    if (keyboardEvent) {\n        core.api.selectRange(core, createRange(new Position(position)));\n    }\n};\n\nfunction wasNodeJustCreatedByKeyboardEvent(event: KeyboardEvent, formatNode: HTMLElement) {\n    return (\n        safeInstanceOf(event.target, 'Node') &&\n        event.target.contains(formatNode) &&\n        event.key === formatNode.innerText\n    );\n}\n","import { createRange, getFirstLeafNode } from 'roosterjs-editor-dom';\nimport { PositionType } from 'roosterjs-editor-types';\nimport type { EditorCore, Focus } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Focus to editor. If there is a cached selection range, use it as current selection\n * @param core The EditorCore object\n */\nexport const focus: Focus = (core: EditorCore) => {\n    if (!core.lifecycle.shadowEditFragment) {\n        if (\n            !core.api.hasFocus(core) ||\n            !core.api.getSelectionRange(core, false /*tryGetFromCache*/)\n        ) {\n            // Focus (document.activeElement indicates) and selection are mostly in sync, but could be out of sync in some extreme cases.\n            // i.e. if you programmatically change window selection to point to a non-focusable DOM element (i.e. tabindex=-1 etc.).\n            // On Chrome/Firefox, it does not change document.activeElement. On Edge/IE, it change document.activeElement to be body\n            // Although on Chrome/Firefox, document.activeElement points to editor, you cannot really type which we don't want (no cursor).\n            // So here we always do a live selection pull on DOM and make it point in Editor. The pitfall is, the cursor could be reset\n            // to very begin to of editor since we don't really have last saved selection (created on blur which does not fire in this case).\n            // It should be better than the case you cannot type\n            if (\n                !core.domEvent.selectionRange ||\n                !core.api.selectRange(core, core.domEvent.selectionRange, true /*skipSameRange*/)\n            ) {\n                let node = getFirstLeafNode(core.contentDiv) || core.contentDiv;\n                core.api.selectRange(\n                    core,\n                    createRange(node, PositionType.Begin),\n                    true /*skipSameRange*/\n                );\n            }\n        }\n\n        // remember to clear cached selection range\n        core.domEvent.selectionRange = null;\n\n        // This is more a fallback to ensure editor gets focus if it didn't manage to move focus to editor\n        if (!core.api.hasFocus(core)) {\n            core.contentDiv.focus();\n        }\n    }\n};\n","import { ColorTransformDirection, GetContentMode, PluginEventType } from 'roosterjs-editor-types';\nimport type { EditorCore, GetContent } from 'roosterjs-editor-types';\nimport {\n    createRange,\n    getHtmlWithSelectionPath,\n    getSelectionPath,\n    getTextContent,\n    safeInstanceOf,\n} from 'roosterjs-editor-dom';\nimport type { CompatibleGetContentMode } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * @internal\n * Get current editor content as HTML string\n * @param core The EditorCore object\n * @param mode specify what kind of HTML content to retrieve\n * @returns HTML string representing current editor content\n */\nexport const getContent: GetContent = (\n    core: EditorCore,\n    mode: GetContentMode | CompatibleGetContentMode\n): string => {\n    let content: string | null = '';\n    const triggerExtractContentEvent = mode == GetContentMode.CleanHTML;\n    const includeSelectionMarker = mode == GetContentMode.RawHTMLWithSelection;\n\n    // When there is fragment for shadow edit, always use the cached fragment as document since HTML node in editor\n    // has been changed by uncommitted shadow edit which should be ignored.\n    const root = core.lifecycle.shadowEditFragment || core.contentDiv;\n\n    if (mode == GetContentMode.PlainTextFast) {\n        content = root.textContent;\n    } else if (mode == GetContentMode.PlainText) {\n        content = getTextContent(root);\n    } else {\n        const clonedRoot = cloneNode(root);\n        clonedRoot.normalize();\n\n        const originalRange = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\n        const path = !includeSelectionMarker\n            ? null\n            : core.lifecycle.shadowEditFragment\n            ? core.lifecycle.shadowEditSelectionPath\n            : originalRange\n            ? getSelectionPath(core.contentDiv, originalRange)\n            : null;\n        const range = path && createRange(clonedRoot, path.start, path.end);\n\n        core.api.transformColor(\n            core,\n            clonedRoot,\n            false /*includeSelf*/,\n            null /*callback*/,\n            ColorTransformDirection.DarkToLight,\n            true /*forceTransform*/,\n            core.lifecycle.isDarkMode\n        );\n\n        if (triggerExtractContentEvent) {\n            core.api.triggerEvent(\n                core,\n                {\n                    eventType: PluginEventType.ExtractContentWithDom,\n                    clonedRoot,\n                },\n                true /*broadcast*/\n            );\n\n            content = clonedRoot.innerHTML;\n        } else if (range) {\n            // range is not null, which means we want to include a selection path in the content\n            content = getHtmlWithSelectionPath(clonedRoot, range);\n        } else {\n            content = clonedRoot.innerHTML;\n        }\n    }\n\n    return content ?? '';\n};\n\nfunction cloneNode(node: HTMLElement | DocumentFragment): HTMLElement {\n    let clonedNode: HTMLElement;\n    if (safeInstanceOf(node, 'DocumentFragment')) {\n        clonedNode = node.ownerDocument.createElement('div');\n        clonedNode.appendChild(node.cloneNode(true /*deep*/));\n    } else {\n        clonedNode = node.cloneNode(true /*deep*/) as HTMLElement;\n    }\n\n    return clonedNode;\n}\n","import { contains, getObjectKeys, getTagOfNode, Position } from 'roosterjs-editor-dom';\nimport { NodeType } from 'roosterjs-editor-types';\nimport type { PendableFormatNames } from 'roosterjs-editor-dom';\nimport type {\n    EditorCore,\n    GetPendableFormatState,\n    NodePosition,\n    PendableFormatState,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * @param core The EditorCore object\n * @param forceGetStateFromDOM If set to true, will force get the format state from DOM tree.\n * @returns The cached format state if it exists. If the cached position do not exist, search for pendable elements in the DOM tree and return the pendable format state.\n */\nexport const getPendableFormatState: GetPendableFormatState = (\n    core: EditorCore,\n    forceGetStateFromDOM: boolean\n): PendableFormatState => {\n    const range = core.api.getSelectionRange(core, true /* tryGetFromCache*/);\n    const cachedPendableFormatState = core.pendingFormatState.pendableFormatState;\n    const cachedPosition = core.pendingFormatState.pendableFormatPosition?.normalize();\n    const currentPosition = range && Position.getStart(range).normalize();\n    const isSamePosition =\n        currentPosition &&\n        cachedPosition &&\n        range.collapsed &&\n        currentPosition.equalTo(cachedPosition);\n\n    if (range && cachedPendableFormatState && isSamePosition && !forceGetStateFromDOM) {\n        return cachedPendableFormatState;\n    } else {\n        return currentPosition ? queryCommandStateFromDOM(core, currentPosition) : {};\n    }\n};\n\nconst PendableStyleCheckers: Record<\n    PendableFormatNames,\n    (tagName: string, style: CSSStyleDeclaration) => boolean\n> = {\n    isBold: (tag, style) =>\n        tag == 'B' ||\n        tag == 'STRONG' ||\n        tag == 'H1' ||\n        tag == 'H2' ||\n        tag == 'H3' ||\n        tag == 'H4' ||\n        tag == 'H5' ||\n        tag == 'H6' ||\n        parseInt(style.fontWeight) >= 700 ||\n        ['bold', 'bolder'].indexOf(style.fontWeight) >= 0,\n    isUnderline: (tag, style) => tag == 'U' || style.textDecoration.indexOf('underline') >= 0,\n    isItalic: (tag, style) => tag == 'I' || tag == 'EM' || style.fontStyle === 'italic',\n    isSubscript: (tag, style) => tag == 'SUB' || style.verticalAlign === 'sub',\n    isSuperscript: (tag, style) => tag == 'SUP' || style.verticalAlign === 'super',\n    isStrikeThrough: (tag, style) =>\n        tag == 'S' || tag == 'STRIKE' || style.textDecoration.indexOf('line-through') >= 0,\n};\n\n/**\n * CssFalsyCheckers checks for non pendable format that might overlay a pendable format, then it can prevent getPendableFormatState return falsy pendable format states.\n */\n\nconst CssFalsyCheckers: Record<PendableFormatNames, (style: CSSStyleDeclaration) => boolean> = {\n    isBold: style =>\n        (style.fontWeight !== '' && parseInt(style.fontWeight) < 700) ||\n        style.fontWeight === 'normal',\n    isUnderline: style =>\n        style.textDecoration !== '' && style.textDecoration.indexOf('underline') < 0,\n    isItalic: style => style.fontStyle !== '' && style.fontStyle !== 'italic',\n    isSubscript: style => style.verticalAlign !== '' && style.verticalAlign !== 'sub',\n    isSuperscript: style => style.verticalAlign !== '' && style.verticalAlign !== 'super',\n    isStrikeThrough: style =>\n        style.textDecoration !== '' && style.textDecoration.indexOf('line-through') < 0,\n};\n\nfunction queryCommandStateFromDOM(\n    core: EditorCore,\n    currentPosition: NodePosition\n): PendableFormatState {\n    let node: Node | null = currentPosition.node;\n    let formatState: PendableFormatState = {};\n    let pendableKeys: PendableFormatNames[] = [];\n    while (node && contains(core.contentDiv, node)) {\n        const tag = getTagOfNode(node);\n        const style = node.nodeType == NodeType.Element && (node as HTMLElement).style;\n        if (tag && style) {\n            getObjectKeys(PendableStyleCheckers).forEach(key => {\n                if (!(pendableKeys.indexOf(key) >= 0)) {\n                    formatState[key] = formatState[key] || PendableStyleCheckers[key](tag, style);\n                    if (CssFalsyCheckers[key](style)) {\n                        pendableKeys.push(key);\n                    }\n                }\n            });\n        }\n        node = node.parentNode;\n    }\n    return formatState;\n}\n","import { contains, createRange } from 'roosterjs-editor-dom';\nimport type { EditorCore, GetSelectionRange } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Get current or cached selection range\n * @param core The EditorCore object\n * @param tryGetFromCache Set to true to retrieve the selection range from cache if editor doesn't own the focus now\n * @returns A Range object of the selection range\n */\nexport const getSelectionRange: GetSelectionRange = (\n    core: EditorCore,\n    tryGetFromCache: boolean\n) => {\n    let result: Range | null = null;\n\n    if (core.lifecycle.shadowEditFragment) {\n        result =\n            core.lifecycle.shadowEditSelectionPath &&\n            createRange(\n                core.contentDiv,\n                core.lifecycle.shadowEditSelectionPath.start,\n                core.lifecycle.shadowEditSelectionPath.end\n            );\n\n        return result;\n    } else {\n        if (!tryGetFromCache || core.api.hasFocus(core)) {\n            let selection = core.contentDiv.ownerDocument.defaultView?.getSelection();\n            if (selection && selection.rangeCount > 0) {\n                let range = selection.getRangeAt(0);\n                if (contains(core.contentDiv, range)) {\n                    result = range;\n                }\n            }\n        }\n\n        if (!result && tryGetFromCache) {\n            result = core.domEvent.selectionRange;\n        }\n\n        return result;\n    }\n};\n","import { contains, createRange, findClosestElementAncestor } from 'roosterjs-editor-dom';\nimport { SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type { EditorCore, GetSelectionRangeEx, SelectionRangeEx } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Get current or cached selection range\n * @param core The EditorCore object\n * @returns A Range object of the selection range\n */\nexport const getSelectionRangeEx: GetSelectionRangeEx = (core: EditorCore) => {\n    let result: SelectionRangeEx | null = null;\n    if (core.lifecycle.shadowEditFragment) {\n        const {\n            shadowEditTableSelectionPath,\n            shadowEditSelectionPath,\n            shadowEditImageSelectionPath,\n        } = core.lifecycle;\n\n        if ((shadowEditTableSelectionPath?.length || 0) > 0) {\n            const ranges = core.lifecycle.shadowEditTableSelectionPath!.map(path =>\n                createRange(core.contentDiv, path.start, path.end)\n            );\n\n            return {\n                type: SelectionRangeTypes.TableSelection,\n                ranges,\n                areAllCollapsed: checkAllCollapsed(ranges),\n                table: findClosestElementAncestor(\n                    ranges[0].startContainer,\n                    core.contentDiv,\n                    'table'\n                ) as HTMLTableElement,\n                coordinates: undefined,\n            };\n        } else if ((shadowEditImageSelectionPath?.length || 0) > 0) {\n            const ranges = core.lifecycle.shadowEditImageSelectionPath!.map(path =>\n                createRange(core.contentDiv, path.start, path.end)\n            );\n            return {\n                type: SelectionRangeTypes.ImageSelection,\n                ranges,\n                areAllCollapsed: checkAllCollapsed(ranges),\n                image: findClosestElementAncestor(\n                    ranges[0].startContainer,\n                    core.contentDiv,\n                    'img'\n                ) as HTMLImageElement,\n                imageId: undefined,\n            };\n        } else {\n            const shadowRange =\n                shadowEditSelectionPath &&\n                createRange(\n                    core.contentDiv,\n                    shadowEditSelectionPath.start,\n                    shadowEditSelectionPath.end\n                );\n\n            return createNormalSelectionEx(shadowRange ? [shadowRange] : []);\n        }\n    } else {\n        if (core.api.hasFocus(core)) {\n            if (core.domEvent.tableSelectionRange) {\n                return core.domEvent.tableSelectionRange;\n            }\n\n            if (core.domEvent.imageSelectionRange) {\n                return core.domEvent.imageSelectionRange;\n            }\n\n            let selection = core.contentDiv.ownerDocument.defaultView?.getSelection();\n            if (!result && selection && selection.rangeCount > 0) {\n                let range = selection.getRangeAt(0);\n                if (contains(core.contentDiv, range)) {\n                    return createNormalSelectionEx([range]);\n                }\n            }\n        }\n\n        return (\n            core.domEvent.tableSelectionRange ??\n            core.domEvent.imageSelectionRange ??\n            createNormalSelectionEx(\n                core.domEvent.selectionRange ? [core.domEvent.selectionRange] : []\n            )\n        );\n    }\n};\n\nfunction createNormalSelectionEx(ranges: Range[]): SelectionRangeEx {\n    return {\n        type: SelectionRangeTypes.Normal,\n        ranges: ranges,\n        areAllCollapsed: checkAllCollapsed(ranges),\n    };\n}\n\nfunction checkAllCollapsed(ranges: Range[]): boolean {\n    return ranges.filter(range => range?.collapsed).length == ranges.length;\n}\n","import { contains, getComputedStyles } from 'roosterjs-editor-dom';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\nimport type { EditorCore, GetStyleBasedFormatState } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * Get style based format state from current selection, including font name/size and colors\r\n * @param core The EditorCore objects\r\n * @param node The node to get style from\r\n */\r\nexport const getStyleBasedFormatState: GetStyleBasedFormatState = (\r\n    core: EditorCore,\r\n    node: Node | null\r\n) => {\r\n    if (!node) {\r\n        return {};\r\n    }\r\n\r\n    let override: string[] = [];\r\n    const pendableFormatSpan = core.pendingFormatState.pendableFormatSpan;\r\n\r\n    if (pendableFormatSpan) {\r\n        override = [\r\n            pendableFormatSpan.style.fontFamily,\r\n            pendableFormatSpan.style.fontSize,\r\n            pendableFormatSpan.style.color,\r\n            pendableFormatSpan.style.backgroundColor,\r\n        ];\r\n    }\r\n\r\n    const styles = node\r\n        ? getComputedStyles(node, [\r\n              'font-family',\r\n              'font-size',\r\n              'color',\r\n              'background-color',\r\n              'line-height',\r\n              'margin-top',\r\n              'margin-bottom',\r\n              'text-align',\r\n              'direction',\r\n          ])\r\n        : [];\r\n    const { contentDiv, darkColorHandler } = core;\r\n\r\n    let styleTextColor: string | undefined;\r\n    let styleBackColor: string | undefined;\r\n\r\n    while (\r\n        node &&\r\n        contains(contentDiv, node, true /*treatSameNodeAsContain*/) &&\r\n        !(styleTextColor && styleBackColor)\r\n    ) {\r\n        if (node.nodeType == NodeType.Element) {\r\n            const element = node as HTMLElement;\r\n\r\n            styleTextColor = styleTextColor || element.style.getPropertyValue('color');\r\n            styleBackColor = styleBackColor || element.style.getPropertyValue('background-color');\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n\r\n    if (!core.lifecycle.isDarkMode && node == core.contentDiv) {\r\n        styleTextColor = styleTextColor || styles[2];\r\n        styleBackColor = styleBackColor || styles[3];\r\n    }\r\n\r\n    const textColor = darkColorHandler.parseColorValue(override[2] || styleTextColor);\r\n    const backColor = darkColorHandler.parseColorValue(override[3] || styleBackColor);\r\n\r\n    return {\r\n        fontName: override[0] || styles[0],\r\n        fontSize: override[1] || styles[1],\r\n        textColor: textColor.lightModeColor,\r\n        backgroundColor: backColor.lightModeColor,\r\n        textColors: textColor.darkModeColor\r\n            ? {\r\n                  lightModeColor: textColor.lightModeColor,\r\n                  darkModeColor: textColor.darkModeColor,\r\n              }\r\n            : undefined,\r\n        backgroundColors: backColor.darkModeColor\r\n            ? {\r\n                  lightModeColor: backColor.lightModeColor,\r\n                  darkModeColor: backColor.darkModeColor,\r\n              }\r\n            : undefined,\r\n        lineHeight: styles[4],\r\n        marginTop: styles[5],\r\n        marginBottom: styles[6],\r\n        textAlign: styles[7],\r\n        direction: styles[8],\r\n    };\r\n};\r\n","import { contains } from 'roosterjs-editor-dom';\nimport type { EditorCore, HasFocus } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Check if the editor has focus now\n * @param core The EditorCore object\n * @returns True if the editor has focus, otherwise false\n */\nexport const hasFocus: HasFocus = (core: EditorCore) => {\n    let activeElement = core.contentDiv.ownerDocument.activeElement;\n    return !!(\n        activeElement && contains(core.contentDiv, activeElement, true /*treatSameNodeAsContain*/)\n    );\n};\n","import type {\n    BlockElement,\n    EditorCore,\n    InsertNode,\n    InsertOption,\n    NodePosition,\n} from 'roosterjs-editor-types';\nimport {\n    ContentPosition,\n    ColorTransformDirection,\n    NodeType,\n    PositionType,\n    RegionType,\n} from 'roosterjs-editor-types';\nimport {\n    createRange,\n    getBlockElementAtNode,\n    getFirstLastBlockElement,\n    isBlockElement,\n    isVoidHtmlElement,\n    Position,\n    safeInstanceOf,\n    toArray,\n    wrap,\n    adjustInsertPosition,\n    getRegionsFromRange,\n    splitTextNode,\n    splitParentNode,\n} from 'roosterjs-editor-dom';\n\nfunction getInitialRange(\n    core: EditorCore,\n    option: InsertOption\n): { range: Range | null; rangeToRestore: Range | null } {\n    // Selection start replaces based on the current selection.\n    // Range inserts based on a provided range.\n    // Both have the potential to use the current selection to restore cursor position\n    // So in both cases we need to store the selection state.\n    let range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\n    let rangeToRestore = null;\n    if (option.position == ContentPosition.Range) {\n        rangeToRestore = range;\n        range = option.range;\n    } else if (range) {\n        rangeToRestore = range.cloneRange();\n    }\n\n    return { range, rangeToRestore };\n}\n\n/**\n * @internal\n * Insert a DOM node into editor content\n * @param core The EditorCore object. No op if null.\n * @param option An insert option object to specify how to insert the node\n */\nexport const insertNode: InsertNode = (\n    core: EditorCore,\n    node: Node,\n    option: InsertOption | null\n) => {\n    option = option || {\n        position: ContentPosition.SelectionStart,\n        insertOnNewLine: false,\n        updateCursor: true,\n        replaceSelection: true,\n        insertToRegionRoot: false,\n    };\n    let contentDiv = core.contentDiv;\n\n    if (option.updateCursor) {\n        core.api.focus(core);\n    }\n\n    if (option.position == ContentPosition.Outside) {\n        contentDiv.parentNode?.insertBefore(node, contentDiv.nextSibling);\n        return true;\n    }\n\n    core.api.transformColor(\n        core,\n        node,\n        true /*includeSelf*/,\n        () => {\n            if (!option) {\n                return;\n            }\n            switch (option.position) {\n                case ContentPosition.Begin:\n                case ContentPosition.End: {\n                    let isBegin = option.position == ContentPosition.Begin;\n                    let block = getFirstLastBlockElement(contentDiv, isBegin);\n                    let insertedNode: Node | Node[] | undefined;\n                    if (block) {\n                        let refNode = isBegin ? block.getStartNode() : block.getEndNode();\n                        if (\n                            option.insertOnNewLine ||\n                            refNode.nodeType == NodeType.Text ||\n                            isVoidHtmlElement(refNode)\n                        ) {\n                            // For insert on new line, or refNode is text or void html element (HR, BR etc.)\n                            // which cannot have children, i.e. <div>hello<br>world</div>. 'hello', 'world' are the\n                            // first and last node. Insert before 'hello' or after 'world', but still inside DIV\n                            if (safeInstanceOf(node, 'DocumentFragment')) {\n                                // if the node to be inserted is DocumentFragment, use its childNodes as insertedNode\n                                // because insertBefore() returns an empty DocumentFragment\n                                insertedNode = toArray(node.childNodes);\n                                refNode.parentNode?.insertBefore(\n                                    node,\n                                    isBegin ? refNode : refNode.nextSibling\n                                );\n                            } else {\n                                insertedNode = refNode.parentNode?.insertBefore(\n                                    node,\n                                    isBegin ? refNode : refNode.nextSibling\n                                );\n                            }\n                        } else {\n                            // if the refNode can have child, use appendChild (which is like to insert as first/last child)\n                            // i.e. <div>hello</div>, the content will be inserted before/after hello\n                            insertedNode = refNode.insertBefore(\n                                node,\n                                isBegin ? refNode.firstChild : null\n                            );\n                        }\n                    } else {\n                        // No first block, this can happen when editor is empty. Use appendChild to insert the content in contentDiv\n                        insertedNode = contentDiv.appendChild(node);\n                    }\n\n                    // Final check to see if the inserted node is a block. If not block and the ask is to insert on new line,\n                    // add a DIV wrapping\n                    if (insertedNode && option.insertOnNewLine) {\n                        const nodes = Array.isArray(insertedNode) ? insertedNode : [insertedNode];\n                        if (!isBlockElement(nodes[0]) || !isBlockElement(nodes[nodes.length - 1])) {\n                            wrap(nodes);\n                        }\n                    }\n\n                    break;\n                }\n                case ContentPosition.DomEnd:\n                    // Use appendChild to insert the node at the end of the content div.\n                    let insertedNode = contentDiv.appendChild(node);\n                    // Final check to see if the inserted node is a block. If not block and the ask is to insert on new line,\n                    // add a DIV wrapping\n                    if (insertedNode && option.insertOnNewLine && !isBlockElement(insertedNode)) {\n                        wrap(insertedNode);\n                    }\n                    break;\n                case ContentPosition.Range:\n                case ContentPosition.SelectionStart:\n                    let { range, rangeToRestore } = getInitialRange(core, option);\n                    if (!range) {\n                        return;\n                    }\n\n                    // if to replace the selection and the selection is not collapsed, remove the the content at selection first\n                    if (option.replaceSelection && !range.collapsed) {\n                        range.deleteContents();\n                    }\n\n                    let pos: NodePosition = Position.getStart(range);\n                    let blockElement: BlockElement | null;\n\n                    if (option.insertOnNewLine && option.insertToRegionRoot) {\n                        pos = adjustInsertPositionRegionRoot(core, range, pos);\n                    } else if (\n                        option.insertOnNewLine &&\n                        (blockElement = getBlockElementAtNode(contentDiv, pos.normalize().node))\n                    ) {\n                        pos = adjustInsertPositionNewLine(blockElement, core, pos);\n                    } else {\n                        pos = adjustInsertPosition(contentDiv, node, pos, range);\n                    }\n\n                    let nodeForCursor =\n                        node.nodeType == NodeType.DocumentFragment ? node.lastChild : node;\n\n                    range = createRange(pos);\n                    range.insertNode(node);\n\n                    if (option.updateCursor && nodeForCursor) {\n                        rangeToRestore = createRange(\n                            new Position(nodeForCursor, PositionType.After).normalize()\n                        );\n                    }\n\n                    if (rangeToRestore) {\n                        core.api.selectRange(core, rangeToRestore);\n                    }\n\n                    break;\n            }\n        },\n        ColorTransformDirection.LightToDark\n    );\n\n    return true;\n};\n\nfunction adjustInsertPositionRegionRoot(core: EditorCore, range: Range, position: NodePosition) {\n    const region = getRegionsFromRange(core.contentDiv, range, RegionType.Table)[0];\n    let node: Node | null = position.node;\n\n    if (region) {\n        if (node.nodeType == NodeType.Text && !position.isAtEnd) {\n            node = splitTextNode(node as Text, position.offset, true /*returnFirstPart*/);\n        }\n\n        if (node != region.rootNode) {\n            while (node && node.parentNode != region.rootNode) {\n                splitParentNode(node, false /*splitBefore*/);\n                node = node.parentNode;\n            }\n        }\n\n        if (node) {\n            position = new Position(node, PositionType.After);\n        }\n    }\n\n    return position;\n}\n\nfunction adjustInsertPositionNewLine(blockElement: BlockElement, core: EditorCore, pos: Position) {\n    let tempPos = new Position(blockElement.getEndNode(), PositionType.After);\n    if (safeInstanceOf(tempPos.node, 'HTMLTableRowElement')) {\n        const div = core.contentDiv.ownerDocument.createElement('div');\n        const range = createRange(pos);\n        range.insertNode(div);\n        tempPos = new Position(div, PositionType.Begin);\n    }\n    return tempPos;\n}\n","import { EntityOperation, PluginEventType } from 'roosterjs-editor-types';\nimport { getEntityFromElement, getEntitySelector, queryElements } from 'roosterjs-editor-dom';\nimport type { EditorCore, RestoreUndoSnapshot } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Restore an undo snapshot into editor\n * @param core The editor core object\n * @param step Steps to move, can be 0, positive or negative\n */\nexport const restoreUndoSnapshot: RestoreUndoSnapshot = (core: EditorCore, step: number) => {\n    if (core.undo.hasNewContent && step < 0) {\n        core.api.addUndoSnapshot(\n            core,\n            null /*callback*/,\n            null /*changeSource*/,\n            false /*canUndoByBackspace*/\n        );\n    }\n\n    const snapshot = core.undo.snapshotsService.move(step);\n\n    if (snapshot && snapshot.html != null) {\n        try {\n            core.undo.isRestoring = true;\n            core.api.setContent(\n                core,\n                snapshot.html,\n                true /*triggerContentChangedEvent*/,\n                snapshot.metadata ?? undefined\n            );\n\n            const darkColorHandler = core.darkColorHandler;\n            const isDarkModel = core.lifecycle.isDarkMode;\n\n            snapshot.knownColors.forEach(color => {\n                darkColorHandler.registerColor(\n                    color.lightModeColor,\n                    isDarkModel,\n                    color.darkModeColor\n                );\n            });\n\n            snapshot.entityStates?.forEach(entityState => {\n                const { type, id, state } = entityState;\n                const wrapper = queryElements(\n                    core.contentDiv,\n                    getEntitySelector(type, id)\n                )[0] as HTMLElement;\n                const entity = wrapper && getEntityFromElement(wrapper);\n\n                if (entity) {\n                    core.api.triggerEvent(\n                        core,\n                        {\n                            eventType: PluginEventType.EntityOperation,\n                            operation: EntityOperation.UpdateEntityState,\n                            entity: entity,\n                            state,\n                        },\n                        false\n                    );\n                }\n            });\n        } finally {\n            core.undo.isRestoring = false;\n        }\n    }\n};\n","import { contains, createRange, safeInstanceOf } from 'roosterjs-editor-dom';\nimport { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type {\n    EditorCore,\n    NodePosition,\n    PositionType,\n    Select,\n    SelectionPath,\n    SelectionRangeEx,\n    TableSelection,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Select content according to the given information.\n * There are a bunch of allowed combination of parameters. See IEditor.select for more details\n * @param core The editor core object\n * @param arg1 A DOM Range, or SelectionRangeEx, or NodePosition, or Node, or Selection Path\n * @param arg2 (optional) A NodePosition, or an offset number, or a PositionType, or a TableSelection\n * @param arg3 (optional) A Node\n * @param arg4 (optional) An offset number, or a PositionType\n */\nexport const select: Select = (core, arg1, arg2, arg3, arg4) => {\n    let rangeEx = buildRangeEx(core, arg1, arg2, arg3, arg4);\n\n    if (rangeEx) {\n        const skipReselectOnFocus = core.domEvent.skipReselectOnFocus;\n\n        // We are applying a new selection, so we don't need to apply cached selection in DOMEventPlugin.\n        // Set skipReselectOnFocus to skip this behavior\n        core.domEvent.skipReselectOnFocus = true;\n\n        try {\n            applyRangeEx(core, rangeEx);\n        } finally {\n            core.domEvent.skipReselectOnFocus = skipReselectOnFocus;\n        }\n    } else {\n        core.domEvent.tableSelectionRange = core.api.selectTable(core, null);\n        core.domEvent.imageSelectionRange = core.api.selectImage(core, null);\n    }\n\n    return !!rangeEx;\n};\n\nfunction buildRangeEx(\n    core: EditorCore,\n    arg1: Range | SelectionRangeEx | NodePosition | Node | SelectionPath | null,\n    arg2?: NodePosition | number | PositionType | TableSelection | null,\n    arg3?: Node,\n    arg4?: number | PositionType\n) {\n    let rangeEx: SelectionRangeEx | null = null;\n\n    if (isSelectionRangeEx(arg1)) {\n        rangeEx = arg1;\n    } else if (safeInstanceOf(arg1, 'HTMLTableElement') && isTableSelectionOrNull(arg2)) {\n        rangeEx = {\n            type: SelectionRangeTypes.TableSelection,\n            ranges: [],\n            areAllCollapsed: false,\n            table: arg1,\n            coordinates: arg2 ?? undefined,\n        };\n    } else if (safeInstanceOf(arg1, 'HTMLImageElement') && typeof arg2 == 'undefined') {\n        rangeEx = {\n            type: SelectionRangeTypes.ImageSelection,\n            ranges: [],\n            areAllCollapsed: false,\n            image: arg1,\n        };\n    } else {\n        let range = !arg1\n            ? null\n            : safeInstanceOf(arg1, 'Range')\n            ? arg1\n            : isSelectionPath(arg1)\n            ? createRange(core.contentDiv, arg1.start, arg1.end)\n            : isNodePosition(arg1) || safeInstanceOf(arg1, 'Node')\n            ? createRange(\n                  <Node>arg1,\n                  <number | PositionType>arg2,\n                  <Node>arg3,\n                  <number | PositionType>arg4\n              )\n            : null;\n\n        rangeEx = range\n            ? {\n                  type: SelectionRangeTypes.Normal,\n                  ranges: [range],\n                  areAllCollapsed: range.collapsed,\n              }\n            : null;\n    }\n\n    return rangeEx;\n}\n\nfunction applyRangeEx(core: EditorCore, rangeEx: SelectionRangeEx | null) {\n    switch (rangeEx?.type) {\n        case SelectionRangeTypes.TableSelection:\n            if (contains(core.contentDiv, rangeEx.table)) {\n                core.domEvent.imageSelectionRange = core.api.selectImage(core, null);\n                core.domEvent.tableSelectionRange = core.api.selectTable(\n                    core,\n                    rangeEx.table,\n                    rangeEx.coordinates\n                );\n                rangeEx = core.domEvent.tableSelectionRange;\n            }\n            break;\n        case SelectionRangeTypes.ImageSelection:\n            if (contains(core.contentDiv, rangeEx.image)) {\n                core.domEvent.tableSelectionRange = core.api.selectTable(core, null);\n                core.domEvent.imageSelectionRange = core.api.selectImage(core, rangeEx.image);\n                rangeEx = core.domEvent.imageSelectionRange;\n            }\n            break;\n        case SelectionRangeTypes.Normal:\n            core.domEvent.tableSelectionRange = core.api.selectTable(core, null);\n            core.domEvent.imageSelectionRange = core.api.selectImage(core, null);\n\n            if (contains(core.contentDiv, rangeEx.ranges[0])) {\n                core.api.selectRange(core, rangeEx.ranges[0]);\n            } else {\n                rangeEx = null;\n            }\n            break;\n    }\n\n    core.api.triggerEvent(\n        core,\n        {\n            eventType: PluginEventType.SelectionChanged,\n            selectionRangeEx: rangeEx,\n        },\n        true /** broadcast **/\n    );\n}\n\nfunction isSelectionRangeEx(obj: any): obj is SelectionRangeEx {\n    const rangeEx = obj as SelectionRangeEx;\n    return (\n        rangeEx &&\n        typeof rangeEx == 'object' &&\n        typeof rangeEx.type == 'number' &&\n        Array.isArray(rangeEx.ranges)\n    );\n}\n\nfunction isTableSelectionOrNull(obj: any): obj is TableSelection | null {\n    const selection = obj as TableSelection | null;\n\n    return (\n        selection === null ||\n        (selection &&\n            typeof selection == 'object' &&\n            typeof selection.firstCell == 'object' &&\n            typeof selection.lastCell == 'object')\n    );\n}\n\nfunction isSelectionPath(obj: any): obj is SelectionPath {\n    const path = obj as SelectionPath;\n\n    return path && typeof path == 'object' && Array.isArray(path.start) && Array.isArray(path.end);\n}\n\nfunction isNodePosition(obj: any): obj is NodePosition {\n    const pos = obj as NodePosition;\n\n    return (\n        pos &&\n        typeof pos == 'object' &&\n        typeof pos.node == 'object' &&\n        typeof pos.offset == 'number'\n    );\n}\n","import addUniqueId from './utils/addUniqueId';\nimport { PositionType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport {\n    createRange,\n    Position,\n    removeGlobalCssStyle,\n    removeImportantStyleRule,\n    setGlobalCssStyles,\n} from 'roosterjs-editor-dom';\nimport type { EditorCore, ImageSelectionRange, SelectImage } from 'roosterjs-editor-types';\n\nconst IMAGE_ID = 'imageSelected';\nconst CONTENT_DIV_ID = 'contentDiv_';\nconst STYLE_ID = 'imageStyle';\nconst DEFAULT_SELECTION_BORDER_COLOR = '#DB626C';\n\n/**\n * @internal\n * Select a image and save data of the selected range\n * @param image Image to select\n * @returns Selected image information\n */\nexport const selectImage: SelectImage = (core: EditorCore, image: HTMLImageElement | null) => {\n    unselect(core);\n\n    let selection: ImageSelectionRange | null = null;\n\n    if (image) {\n        const range = createRange(image);\n\n        addUniqueId(image, IMAGE_ID);\n        addUniqueId(core.contentDiv, CONTENT_DIV_ID);\n\n        core.api.selectRange(core, createRange(new Position(image, PositionType.After)));\n\n        select(core, image);\n\n        selection = {\n            type: SelectionRangeTypes.ImageSelection,\n            ranges: [range],\n            image: image,\n            areAllCollapsed: range.collapsed,\n        };\n    }\n\n    return selection;\n};\n\nconst select = (core: EditorCore, image: HTMLImageElement) => {\n    removeImportantStyleRule(image, ['border', 'margin']);\n    const borderCSS = buildBorderCSS(core, image.id);\n    setGlobalCssStyles(core.contentDiv.ownerDocument, borderCSS, STYLE_ID + core.contentDiv.id);\n};\n\nconst buildBorderCSS = (core: EditorCore, imageId: string): string => {\n    const divId = core.contentDiv.id;\n    const color = core.imageSelectionBorderColor || DEFAULT_SELECTION_BORDER_COLOR;\n\n    return `#${divId} #${imageId} {outline-style: auto!important;outline-color: ${color}!important;caret-color: transparent!important;}`;\n};\n\nconst unselect = (core: EditorCore) => {\n    const doc = core.contentDiv.ownerDocument;\n    removeGlobalCssStyle(doc, STYLE_ID + core.contentDiv.id);\n};\n","import { hasFocus } from './hasFocus';\nimport type { EditorCore, SelectRange } from 'roosterjs-editor-types';\nimport {\n    contains,\n    getPendableFormatState,\n    Position,\n    PendableFormatCommandMap,\n    addRangeToSelection,\n    getObjectKeys,\n} from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Change the editor selection to the given range\n * @param core The EditorCore object\n * @param range The range to select\n * @param skipSameRange When set to true, do nothing if the given range is the same with current selection\n * in editor, otherwise it will always remove current selection range and set to the given one.\n * This parameter is always treat as true in Edge to avoid some weird runtime exception.\n */\nexport const selectRange: SelectRange = (\n    core: EditorCore,\n    range: Range,\n    skipSameRange?: boolean\n) => {\n    if (!core.lifecycle.shadowEditSelectionPath && contains(core.contentDiv, range)) {\n        addRangeToSelection(range, skipSameRange);\n\n        if (!hasFocus(core)) {\n            core.domEvent.selectionRange = range;\n        }\n\n        if (range.collapsed) {\n            // If selected, and current selection is collapsed,\n            // need to restore pending format state if exists.\n            restorePendingFormatState(core);\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n};\n\n/**\n * Restore cached pending format state (if exist) to current selection\n */\nfunction restorePendingFormatState(core: EditorCore) {\n    const {\n        contentDiv,\n        pendingFormatState,\n        api: { getSelectionRange },\n    } = core;\n\n    if (pendingFormatState.pendableFormatState) {\n        const document = contentDiv.ownerDocument;\n        let formatState = getPendableFormatState(document);\n        getObjectKeys(PendableFormatCommandMap).forEach(key => {\n            if (!!pendingFormatState.pendableFormatState?.[key] != formatState[key]) {\n                document.execCommand(\n                    PendableFormatCommandMap[key],\n                    false /* showUI */,\n                    undefined /* value */\n                );\n            }\n        });\n\n        const range = getSelectionRange(core, true /*tryGetFromCache*/);\n        let position: Position | null = range && Position.getStart(range);\n        if (position) {\n            pendingFormatState.pendableFormatPosition = position;\n        }\n    }\n}\n","import addUniqueId from './utils/addUniqueId';\nimport { PositionType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport {\n    createRange,\n    getTagOfNode,\n    isWholeTableSelected,\n    Position,\n    removeGlobalCssStyle,\n    removeImportantStyleRule,\n    setGlobalCssStyles,\n    toArray,\n    VTable,\n} from 'roosterjs-editor-dom';\nimport type { EditorCore, TableSelection, SelectTable, Coordinates } from 'roosterjs-editor-types';\n\nconst TABLE_ID = 'tableSelected';\nconst CONTENT_DIV_ID = 'contentDiv_';\nconst STYLE_ID = 'tableStyle';\nconst SELECTED_CSS_RULE =\n    '{background-color: rgb(198,198,198) !important; caret-color: transparent}';\nconst MAX_RULE_SELECTOR_LENGTH = 9000;\n\n/**\n * @internal\n * Select a table and save data of the selected range\n * @param core The EditorCore object\n * @param table table to select\n * @param coordinates first and last cell of the selection, if this parameter is null, instead of\n * selecting, will unselect the table.\n * @returns true if successful\n */\nexport const selectTable: SelectTable = (\n    core: EditorCore,\n    table: HTMLTableElement | null,\n    coordinates?: TableSelection\n) => {\n    unselect(core);\n\n    if (areValidCoordinates(coordinates) && table) {\n        addUniqueId(table, TABLE_ID);\n        addUniqueId(core.contentDiv, CONTENT_DIV_ID);\n\n        const { ranges, isWholeTableSelected } = select(core, table, coordinates);\n        if (!isMergedCell(table, coordinates)) {\n            const cellToSelect = table.rows\n                .item(coordinates.firstCell.y)\n                ?.cells.item(coordinates.firstCell.x);\n\n            if (cellToSelect) {\n                core.api.selectRange(\n                    core,\n                    createRange(new Position(cellToSelect, PositionType.Begin))\n                );\n            }\n        }\n\n        return {\n            type: SelectionRangeTypes.TableSelection,\n            ranges,\n            table,\n            areAllCollapsed: ranges.filter(range => range?.collapsed).length == ranges.length,\n            coordinates,\n            isWholeTableSelected,\n        };\n    }\n\n    return null;\n};\n\nfunction buildCss(\n    table: HTMLTableElement,\n    coordinates: TableSelection,\n    contentDivSelector: string\n): { cssRules: string[]; ranges: Range[]; isWholeTableSelected: boolean } {\n    const ranges: Range[] = [];\n    const selectors: string[] = [];\n\n    const vTable = new VTable(table);\n    const isAllTableSelected = isWholeTableSelected(vTable, coordinates);\n    if (isAllTableSelected) {\n        handleAllTableSelected(contentDivSelector, vTable, selectors, ranges);\n    } else {\n        handleTableSelected(coordinates, vTable, contentDivSelector, selectors, ranges);\n    }\n\n    const cssRules: string[] = [];\n    let currentRules: string = '';\n    while (selectors.length > 0) {\n        currentRules += (currentRules.length > 0 ? ',' : '') + selectors.shift() || '';\n        if (\n            currentRules.length + (selectors[0]?.length || 0) > MAX_RULE_SELECTOR_LENGTH ||\n            selectors.length == 0\n        ) {\n            cssRules.push(currentRules + ' ' + SELECTED_CSS_RULE);\n            currentRules = '';\n        }\n    }\n\n    return { cssRules, ranges, isWholeTableSelected: isAllTableSelected };\n}\n\nfunction handleAllTableSelected(\n    contentDivSelector: string,\n    vTable: VTable,\n    selectors: string[],\n    ranges: Range[]\n) {\n    const table = vTable.table;\n    const tableSelector = contentDivSelector + ' #' + table.id;\n    selectors.push(tableSelector, `${tableSelector} *`);\n\n    const tableRange = new Range();\n    tableRange.selectNode(table);\n    ranges.push(tableRange);\n}\n\nfunction handleTableSelected(\n    coordinates: TableSelection,\n    vTable: VTable,\n    contentDivSelector: string,\n    selectors: string[],\n    ranges: Range[]\n) {\n    const tr1 = coordinates.firstCell.y;\n    const td1 = coordinates.firstCell.x;\n    const tr2 = coordinates.lastCell.y;\n    const td2 = coordinates.lastCell.x;\n    const table = vTable.table;\n\n    let firstSelected: HTMLTableCellElement | null = null;\n    let lastSelected: HTMLTableCellElement | null = null;\n    // Get whether table has thead, tbody or tfoot.\n    const tableChildren = toArray(table.childNodes).filter(\n        node => ['THEAD', 'TBODY', 'TFOOT'].indexOf(getTagOfNode(node)) > -1\n    );\n    // Set the start and end of each of the table children, so we can build the selector according the element between the table and the row.\n    let cont = 0;\n    const indexes = tableChildren.map(node => {\n        const result = {\n            el: getTagOfNode(node),\n            start: cont,\n            end: node.childNodes.length + cont,\n        };\n\n        cont = result.end;\n        return result;\n    });\n\n    vTable.cells?.forEach((row, rowIndex) => {\n        let tdCount = 0;\n        firstSelected = null;\n        lastSelected = null;\n\n        //Get current TBODY/THEAD/TFOOT\n        const midElement = indexes.filter(ind => ind.start <= rowIndex && ind.end > rowIndex)[0];\n\n        const middleElSelector = midElement ? '>' + midElement.el + '>' : '>';\n        const currentRow =\n            midElement && rowIndex + 1 >= midElement.start\n                ? rowIndex + 1 - midElement.start\n                : rowIndex + 1;\n\n        for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {\n            const cell = row[cellIndex].td;\n            if (cell) {\n                tdCount++;\n                if (rowIndex >= tr1 && rowIndex <= tr2 && cellIndex >= td1 && cellIndex <= td2) {\n                    removeImportant(cell);\n\n                    const selector = generateCssFromCell(\n                        contentDivSelector,\n                        table.id,\n                        middleElSelector,\n                        currentRow,\n                        getTagOfNode(cell),\n                        tdCount\n                    );\n                    const elementsSelector = selector + ' *';\n\n                    selectors.push(selector, elementsSelector);\n                    firstSelected = firstSelected || table.querySelector(selector);\n                    lastSelected = table.querySelector(selector);\n                }\n            }\n        }\n\n        if (firstSelected && lastSelected) {\n            const rowRange = new Range();\n            rowRange.setStartBefore(firstSelected);\n            rowRange.setEndAfter(lastSelected);\n            ranges.push(rowRange);\n        }\n    });\n}\n\nfunction select(\n    core: EditorCore,\n    table: HTMLTableElement,\n    coordinates: TableSelection\n): { ranges: Range[]; isWholeTableSelected: boolean } {\n    const contentDivSelector = '#' + core.contentDiv.id;\n    let { cssRules, ranges, isWholeTableSelected } = buildCss(\n        table,\n        coordinates,\n        contentDivSelector\n    );\n    cssRules.forEach(css =>\n        setGlobalCssStyles(core.contentDiv.ownerDocument, css, STYLE_ID + core.contentDiv.id)\n    );\n\n    return { ranges, isWholeTableSelected };\n}\n\nconst unselect = (core: EditorCore) => {\n    const doc = core.contentDiv.ownerDocument;\n    removeGlobalCssStyle(doc, STYLE_ID + core.contentDiv.id);\n};\n\nfunction generateCssFromCell(\n    contentDivSelector: string,\n    tableId: string,\n    middleElSelector: string,\n    rowIndex: number,\n    cellTag: string,\n    index: number\n): string {\n    return (\n        contentDivSelector +\n        ' #' +\n        tableId +\n        middleElSelector +\n        ' tr:nth-child(' +\n        rowIndex +\n        ')>' +\n        cellTag +\n        ':nth-child(' +\n        index +\n        ')'\n    );\n}\n\nfunction removeImportant(cell: HTMLTableCellElement) {\n    if (cell) {\n        removeImportantStyleRule(cell, ['background-color', 'background']);\n    }\n}\n\nfunction areValidCoordinates(input?: TableSelection): input is TableSelection {\n    if (input) {\n        const { firstCell, lastCell } = input || {};\n        if (firstCell && lastCell) {\n            const handler = (coordinate: Coordinates) =>\n                isValidCoordinate(coordinate.x) && isValidCoordinate(coordinate.y);\n            return handler(firstCell) && handler(lastCell);\n        }\n    }\n\n    return false;\n}\n\nfunction isValidCoordinate(input: number): boolean {\n    return (!!input || input == 0) && input > -1;\n}\n\nfunction isMergedCell(table: HTMLTableElement, coordinates: TableSelection): boolean {\n    const { firstCell } = coordinates;\n    return !(table.rows.item(firstCell.y) && table.rows.item(firstCell.y)?.cells.item(firstCell.x));\n}\n","import {\n    ChangeSource,\n    ColorTransformDirection,\n    PluginEventType,\n    SelectionRangeTypes,\n} from 'roosterjs-editor-types';\nimport {\n    createRange,\n    extractContentMetadata,\n    queryElements,\n    restoreContentWithEntityPlaceholder,\n} from 'roosterjs-editor-dom';\nimport type { ContentMetadata, EditorCore, SetContent } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Set HTML content to this editor. All existing content will be replaced. A ContentChanged event will be triggered\n * if triggerContentChangedEvent is set to true\n * @param core The EditorCore object\n * @param content HTML content to set in\n * @param triggerContentChangedEvent True to trigger a ContentChanged event. Default value is true\n * @param metadata @optional Metadata of the content that helps editor know the selection and color mode.\n * If not passed, we will treat content as in light mode without selection\n */\nexport const setContent: SetContent = (\n    core: EditorCore,\n    content: string,\n    triggerContentChangedEvent: boolean,\n    metadata?: ContentMetadata\n) => {\n    let contentChanged = false;\n    if (core.contentDiv.innerHTML != content) {\n        core.api.triggerEvent(\n            core,\n            {\n                eventType: PluginEventType.BeforeSetContent,\n                newContent: content,\n            },\n            true /*broadcast*/\n        );\n\n        const entities = core.entity.entityMap;\n        const html = content || '';\n        const body = new DOMParser().parseFromString(\n            core.trustedHTMLHandler?.(html) ?? html,\n            'text/html'\n        ).body;\n\n        restoreContentWithEntityPlaceholder(body, core.contentDiv, entities);\n\n        const metadataFromContent = extractContentMetadata(core.contentDiv);\n        metadata = metadata || metadataFromContent;\n        selectContentMetadata(core, metadata);\n        contentChanged = true;\n    }\n\n    const isDarkMode = core.lifecycle.isDarkMode;\n\n    if ((!metadata && isDarkMode) || (metadata && !!metadata.isDarkMode != !!isDarkMode)) {\n        core.api.transformColor(\n            core,\n            core.contentDiv,\n            false /*includeSelf*/,\n            null /*callback*/,\n            isDarkMode ? ColorTransformDirection.LightToDark : ColorTransformDirection.DarkToLight,\n            true /*forceTransform*/,\n            metadata?.isDarkMode\n        );\n        contentChanged = true;\n    }\n\n    if (triggerContentChangedEvent && contentChanged) {\n        core.api.triggerEvent(\n            core,\n            {\n                eventType: PluginEventType.ContentChanged,\n                source: ChangeSource.SetContent,\n            },\n            false /*broadcast*/\n        );\n    }\n};\n\nfunction selectContentMetadata(core: EditorCore, metadata: ContentMetadata | undefined) {\n    if (!core.lifecycle.shadowEditSelectionPath && metadata) {\n        core.domEvent.tableSelectionRange = null;\n        core.domEvent.imageSelectionRange = null;\n        core.domEvent.selectionRange = null;\n\n        switch (metadata.type) {\n            case SelectionRangeTypes.Normal:\n                core.api.selectTable(core, null);\n                core.api.selectImage(core, null);\n\n                const range = createRange(core.contentDiv, metadata.start, metadata.end);\n                core.api.selectRange(core, range);\n                break;\n            case SelectionRangeTypes.TableSelection:\n                const table = queryElements(\n                    core.contentDiv,\n                    '#' + metadata.tableId\n                )[0] as HTMLTableElement;\n\n                if (table) {\n                    core.domEvent.tableSelectionRange = core.api.selectTable(core, table, metadata);\n                }\n                break;\n            case SelectionRangeTypes.ImageSelection:\n                const image = queryElements(\n                    core.contentDiv,\n                    '#' + metadata.imageId\n                )[0] as HTMLImageElement;\n\n                if (image) {\n                    core.domEvent.imageSelectionRange = core.api.selectImage(core, image);\n                }\n                break;\n        }\n    }\n}\n","import { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport {\n    createRange,\n    getSelectionPath,\n    moveContentWithEntityPlaceholders,\n    restoreContentWithEntityPlaceholder,\n} from 'roosterjs-editor-dom';\nimport type { EditorCore, SelectionRangeEx, SwitchShadowEdit } from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport const switchShadowEdit: SwitchShadowEdit = (core: EditorCore, isOn: boolean): void => {\n    const { lifecycle, contentDiv } = core;\n    let {\n        shadowEditEntities,\n        shadowEditFragment,\n        shadowEditSelectionPath,\n        shadowEditTableSelectionPath,\n        shadowEditImageSelectionPath,\n    } = lifecycle;\n    const wasInShadowEdit = !!shadowEditFragment;\n\n    const getShadowEditSelectionPath = (\n        selectionType: SelectionRangeTypes,\n        shadowEditSelection?: SelectionRangeEx\n    ) => {\n        return (\n            (shadowEditSelection?.type == selectionType &&\n                shadowEditSelection.ranges\n                    .map(range => getSelectionPath(contentDiv, range))\n                    .map(w => w!!)) ||\n            null\n        );\n    };\n\n    if (isOn) {\n        if (!wasInShadowEdit) {\n            const selection = core.api.getSelectionRangeEx(core);\n            const range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\n\n            shadowEditSelectionPath = range && getSelectionPath(contentDiv, range);\n            shadowEditTableSelectionPath = getShadowEditSelectionPath(\n                SelectionRangeTypes.TableSelection,\n                selection\n            );\n            shadowEditImageSelectionPath = getShadowEditSelectionPath(\n                SelectionRangeTypes.ImageSelection,\n                selection\n            );\n\n            shadowEditEntities = {};\n            shadowEditFragment = moveContentWithEntityPlaceholders(contentDiv, shadowEditEntities);\n\n            core.api.triggerEvent(\n                core,\n                {\n                    eventType: PluginEventType.EnteredShadowEdit,\n                    fragment: shadowEditFragment,\n                    selectionPath: shadowEditSelectionPath,\n                },\n                false /*broadcast*/\n            );\n\n            lifecycle.shadowEditFragment = shadowEditFragment;\n            lifecycle.shadowEditSelectionPath = shadowEditSelectionPath;\n            lifecycle.shadowEditTableSelectionPath = shadowEditTableSelectionPath;\n            lifecycle.shadowEditImageSelectionPath = shadowEditImageSelectionPath;\n            lifecycle.shadowEditEntities = shadowEditEntities;\n        }\n\n        if (lifecycle.shadowEditFragment) {\n            restoreContentWithEntityPlaceholder(\n                lifecycle.shadowEditFragment,\n                contentDiv,\n                lifecycle.shadowEditEntities,\n                true /*insertClonedNode*/\n            );\n        }\n    } else {\n        lifecycle.shadowEditFragment = null;\n        lifecycle.shadowEditSelectionPath = null;\n        lifecycle.shadowEditEntities = null;\n\n        if (wasInShadowEdit) {\n            core.api.triggerEvent(\n                core,\n                {\n                    eventType: PluginEventType.LeavingShadowEdit,\n                },\n                false /*broadcast*/\n            );\n\n            if (shadowEditFragment) {\n                restoreContentWithEntityPlaceholder(\n                    shadowEditFragment,\n                    contentDiv,\n                    shadowEditEntities\n                );\n            }\n            core.api.focus(core);\n\n            if (shadowEditSelectionPath) {\n                core.api.selectRange(\n                    core,\n                    createRange(\n                        contentDiv,\n                        shadowEditSelectionPath.start,\n                        shadowEditSelectionPath.end\n                    )\n                );\n            }\n\n            if (core.domEvent.imageSelectionRange) {\n                const { image } = core.domEvent.imageSelectionRange;\n                const imageElement = core.contentDiv.querySelector('#' + image.id);\n                if (imageElement) {\n                    core.api.selectImage(core, image);\n                }\n            }\n\n            if (core.domEvent.tableSelectionRange) {\n                const { table, coordinates } = core.domEvent.tableSelectionRange;\n                const tableId = table.id;\n                const tableElement = core.contentDiv.querySelector('#' + tableId);\n                if (table) {\n                    core.domEvent.tableSelectionRange = core.api.selectTable(\n                        core,\n                        tableElement as HTMLTableElement,\n                        coordinates\n                    );\n                }\n            }\n        }\n    }\n};\n","import { ColorTransformDirection } from 'roosterjs-editor-types';\nimport type { EditorCore, TransformColor } from 'roosterjs-editor-types';\nimport type { CompatibleColorTransformDirection } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * @internal\n * Edit and transform color of elements between light mode and dark mode\n * @param core The EditorCore object\n * @param rootNode The root HTML elements to transform\n * @param includeSelf True to transform the root node as well, otherwise false\n * @param callback The callback function to invoke before do color transformation\n * @param direction To specify the transform direction, light to dark, or dark to light\n * @param forceTransform By default this function will only work when editor core is in dark mode.\n * Pass true to this value to force do color transformation even editor core is in light mode\n */\nexport const transformColor: TransformColor = (\n    core: EditorCore,\n    rootNode: Node | null,\n    includeSelf: boolean,\n    callback: (() => void) | null,\n    direction: ColorTransformDirection | CompatibleColorTransformDirection,\n    forceTransform?: boolean,\n    fromDarkMode: boolean = false\n) => {\n    const {\n        darkColorHandler,\n        lifecycle: { onExternalContentTransform },\n    } = core;\n    const toDarkMode = direction == ColorTransformDirection.LightToDark;\n    if (rootNode && (forceTransform || core.lifecycle.isDarkMode)) {\n        const transformer = onExternalContentTransform\n            ? (element: HTMLElement) => {\n                  onExternalContentTransform(element, fromDarkMode, toDarkMode, darkColorHandler);\n              }\n            : (element: HTMLElement) => {\n                  darkColorHandler.transformElementColor(element, fromDarkMode, toDarkMode);\n              };\n\n        iterateElements(rootNode, transformer, includeSelf);\n    }\n\n    callback?.();\n};\n\nfunction iterateElements(\n    root: Node,\n    transformer: (element: HTMLElement) => void,\n    includeSelf?: boolean\n) {\n    if (includeSelf && isHTMLElement(root)) {\n        transformer(root);\n    }\n\n    for (let child = root.firstChild; child; child = child.nextSibling) {\n        if (isHTMLElement(child)) {\n            transformer(child);\n        }\n\n        iterateElements(child, transformer);\n    }\n}\n\n// This is not a strict check, we just need to make sure this element has style so that we can set style to it\n// We don't use safeInstanceOf() here since this function will be called very frequently when extract html content\n// in dark mode, so we need to make sure this check is fast enough\nfunction isHTMLElement(node: Node): node is HTMLElement {\n    const htmlElement = <HTMLElement>node;\n    return node.nodeType == Node.ELEMENT_NODE && !!htmlElement.style;\n}\n","import { PluginEventType } from 'roosterjs-editor-types';\nimport type { EditorCore, EditorPlugin, PluginEvent, TriggerEvent } from 'roosterjs-editor-types';\nimport type { CompatiblePluginEventType } from 'roosterjs-editor-types/lib/compatibleTypes';\n\nconst allowedEventsInShadowEdit: (PluginEventType | CompatiblePluginEventType)[] = [\n    PluginEventType.EditorReady,\n    PluginEventType.BeforeDispose,\n    PluginEventType.ExtractContentWithDom,\n    PluginEventType.ZoomChanged,\n];\n\n/**\n * @internal\n * Trigger a plugin event\n * @param core The EditorCore object\n * @param pluginEvent The event object to trigger\n * @param broadcast Set to true to skip the shouldHandleEventExclusively check\n */\nexport const triggerEvent: TriggerEvent = (\n    core: EditorCore,\n    pluginEvent: PluginEvent,\n    broadcast: boolean\n) => {\n    if (\n        (!core.lifecycle.shadowEditFragment ||\n            allowedEventsInShadowEdit.indexOf(pluginEvent.eventType) >= 0) &&\n        (broadcast || !core.plugins.some(plugin => handledExclusively(pluginEvent, plugin)))\n    ) {\n        core.plugins.forEach(plugin => {\n            if (plugin.onPluginEvent) {\n                plugin.onPluginEvent(pluginEvent);\n            }\n        });\n    }\n};\n\nfunction handledExclusively(event: PluginEvent, plugin: EditorPlugin): boolean {\n    if (plugin.onPluginEvent && plugin.willHandleEventExclusively?.(event)) {\n        plugin.onPluginEvent(event);\n        return true;\n    }\n\n    return false;\n}\n","/**\n * Add an unique id to element and ensure that is unique\n * @param el The HTMLElement that will receive the id\n * @param idPrefix The prefix that will antecede the id (Ex: tableSelected01)\n */\nexport default function addUniqueId(el: HTMLElement, idPrefix: string) {\n    const doc = el.ownerDocument;\n    if (!el.id) {\n        applyId(el, idPrefix, doc);\n    } else {\n        const elements = doc.querySelectorAll(`#${el.id}`);\n        if (elements.length > 1) {\n            el.removeAttribute('id');\n            applyId(el, idPrefix, doc);\n        }\n    }\n}\n\nfunction applyId(el: HTMLElement, idPrefix: string, doc: Document) {\n    let cont = 0;\n    const getElement = () => doc.getElementById(idPrefix + cont);\n    //Ensure that there are no elements with the same ID\n    let element = getElement();\n    while (element) {\n        cont++;\n        element = getElement();\n    }\n\n    el.id = idPrefix + cont;\n}\n","import { forEachSelectedCell } from './utils/forEachSelectedCell';\nimport { removeCellsOutsideSelection } from './utils/removeCellsOutsideSelection';\nimport {\n    addRangeToSelection,\n    createElement,\n    extractClipboardEvent,\n    moveChildNodes,\n    Browser,\n    setHtmlWithMetadata,\n    createRange,\n    VTable,\n    isWholeTableSelected,\n} from 'roosterjs-editor-dom';\nimport type {\n    CopyPastePluginState,\n    EditorOptions,\n    IEditor,\n    PluginWithState,\n    SelectionRangeEx,\n    TableSelection,\n} from 'roosterjs-editor-types';\nimport {\n    ChangeSource,\n    GetContentMode,\n    PluginEventType,\n    KnownCreateElementDataIndex,\n    SelectionRangeTypes,\n    TableOperation,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Copy and paste plugin for handling onCopy and onPaste event\n */\nexport default class CopyPastePlugin implements PluginWithState<CopyPastePluginState> {\n    private editor: IEditor | null = null;\n    private disposer: (() => void) | null = null;\n    private state: CopyPastePluginState;\n\n    /**\n     * Construct a new instance of CopyPastePlugin\n     * @param options The editor options\n     */\n    constructor(options: EditorOptions) {\n        this.state = {\n            allowedCustomPasteType: options.allowedCustomPasteType || [],\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'CopyPaste';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.disposer = this.editor.addDomEventHandler({\n            paste: e => this.onPaste(e),\n            copy: e => this.onCutCopy(e, false /*isCut*/),\n            cut: e => this.onCutCopy(e, true /*isCut*/),\n        });\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        if (this.disposer) {\n            this.disposer();\n        }\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    private onCutCopy(event: Event, isCut: boolean) {\n        if (this.editor) {\n            const selection = this.editor.getSelectionRangeEx();\n            if (selection && !selection.areAllCollapsed) {\n                const html = this.editor.getContent(GetContentMode.RawHTMLWithSelection);\n                const tempDiv = this.getTempDiv(this.editor, true /*forceInLightMode*/);\n                const metadata = setHtmlWithMetadata(\n                    tempDiv,\n                    html,\n                    this.editor.getTrustedHTMLHandler()\n                );\n                let newRange: Range | null = null;\n\n                if (\n                    selection.type === SelectionRangeTypes.TableSelection &&\n                    selection.coordinates\n                ) {\n                    const table = tempDiv.querySelector(\n                        `#${selection.table.id}`\n                    ) as HTMLTableElement;\n                    newRange = this.createTableRange(table, selection.coordinates);\n                    if (isCut) {\n                        this.deleteTableContent(\n                            this.editor,\n                            selection.table,\n                            selection.coordinates\n                        );\n                    }\n                } else if (selection.type === SelectionRangeTypes.ImageSelection) {\n                    const image = tempDiv.querySelector('#' + selection.image.id);\n\n                    if (image) {\n                        newRange = createRange(image);\n                        if (isCut) {\n                            this.deleteImage(this.editor, selection.image.id);\n                        }\n                    }\n                } else {\n                    newRange =\n                        metadata?.type === SelectionRangeTypes.Normal\n                            ? createRange(tempDiv, metadata.start, metadata.end)\n                            : null;\n                }\n                if (newRange) {\n                    const cutCopyEvent = this.editor.triggerPluginEvent(\n                        PluginEventType.BeforeCutCopy,\n                        {\n                            clonedRoot: tempDiv,\n                            range: newRange,\n                            rawEvent: event as ClipboardEvent,\n                            isCut,\n                        }\n                    );\n\n                    if (cutCopyEvent.range) {\n                        addRangeToSelection(newRange);\n                    }\n\n                    this.editor.runAsync(editor => {\n                        this.cleanUpAndRestoreSelection(tempDiv, selection, !isCut /* isCopy */);\n\n                        if (isCut) {\n                            editor.addUndoSnapshot(() => {\n                                const position = editor.deleteSelectedContent();\n                                editor.focus();\n                                editor.select(position);\n                            }, ChangeSource.Cut);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    private onPaste = (event: Event) => {\n        let range: Range | null = null;\n        if (this.editor) {\n            const editor = this.editor;\n            extractClipboardEvent(\n                event as ClipboardEvent,\n                clipboardData => {\n                    if (editor && !editor.isDisposed()) {\n                        editor.paste(clipboardData);\n                    }\n                },\n                {\n                    allowedCustomPasteType: this.state.allowedCustomPasteType,\n                    getTempDiv: () => {\n                        range = editor.getSelectionRange() ?? null;\n                        return this.getTempDiv(editor);\n                    },\n                    removeTempDiv: div => {\n                        if (range) {\n                            this.cleanUpAndRestoreSelection(div, range, false /* isCopy */);\n                        }\n                    },\n                },\n                this.editor.getSelectionRange() ?? undefined\n            );\n        }\n    };\n\n    private getTempDiv(editor: IEditor, forceInLightMode?: boolean) {\n        const div = editor.getCustomData(\n            'CopyPasteTempDiv',\n            () => {\n                const tempDiv = createElement(\n                    KnownCreateElementDataIndex.CopyPasteTempDiv,\n                    editor.getDocument()\n                ) as HTMLDivElement;\n\n                editor.getDocument().body.appendChild(tempDiv);\n\n                return tempDiv;\n            },\n            tempDiv => tempDiv.parentNode?.removeChild(tempDiv)\n        );\n\n        if (forceInLightMode) {\n            div.style.backgroundColor = 'white';\n            div.style.color = 'black';\n        }\n\n        div.style.display = '';\n        div.focus();\n\n        return div;\n    }\n\n    private cleanUpAndRestoreSelection(\n        tempDiv: HTMLDivElement,\n        range: Range | SelectionRangeEx,\n        isCopy: boolean\n    ) {\n        if (!!(<SelectionRangeEx>range)?.type || (<SelectionRangeEx>range).type == 0) {\n            const selection = <SelectionRangeEx>range;\n            switch (selection.type) {\n                case SelectionRangeTypes.TableSelection:\n                case SelectionRangeTypes.ImageSelection:\n                    this.editor?.select(selection);\n                    break;\n                case SelectionRangeTypes.Normal:\n                    const range = selection.ranges?.[0];\n                    this.restoreRange(range, isCopy);\n                    break;\n            }\n        } else {\n            this.restoreRange(<Range>range, isCopy);\n        }\n\n        tempDiv.style.backgroundColor = '';\n        tempDiv.style.color = '';\n        tempDiv.style.display = 'none';\n        moveChildNodes(tempDiv);\n    }\n\n    private restoreRange(range: Range, isCopy: boolean) {\n        if (range && this.editor) {\n            if (isCopy && Browser.isAndroid) {\n                range.collapse();\n            }\n            this.editor.select(range);\n        }\n    }\n\n    private createTableRange(table: HTMLTableElement, selection: TableSelection) {\n        const clonedVTable = new VTable(table as HTMLTableElement);\n        clonedVTable.selection = selection;\n        removeCellsOutsideSelection(clonedVTable);\n        clonedVTable.writeBack();\n        return createRange(clonedVTable.table);\n    }\n\n    private deleteTableContent(\n        editor: IEditor,\n        table: HTMLTableElement,\n        selection: TableSelection\n    ) {\n        const selectedVTable = new VTable(table);\n        selectedVTable.selection = selection;\n\n        forEachSelectedCell(selectedVTable, cell => {\n            if (cell?.td) {\n                cell.td.innerHTML = editor.getTrustedHTMLHandler()('<br>');\n            }\n        });\n\n        const wholeTableSelected = isWholeTableSelected(selectedVTable, selection);\n        const isWholeColumnSelected =\n            table.rows.length - 1 === selection.lastCell.y && selection.firstCell.y === 0;\n        if (wholeTableSelected) {\n            selectedVTable.edit(TableOperation.DeleteTable);\n            selectedVTable.writeBack();\n        } else if (isWholeColumnSelected) {\n            selectedVTable.edit(TableOperation.DeleteColumn);\n            selectedVTable.writeBack();\n        }\n        if (wholeTableSelected || isWholeColumnSelected) {\n            table.style.removeProperty('width');\n            table.style.removeProperty('height');\n        }\n    }\n\n    private deleteImage(editor: IEditor, imageId: string) {\n        editor.queryElements('#' + imageId, node => {\n            editor.deleteNode(node);\n        });\n    }\n}\n","import { arrayPush, Browser, isCharacterValue } from 'roosterjs-editor-dom';\nimport { ChangeSource, Keys, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    ContextMenuProvider,\n    DOMEventHandler,\n    DOMEventPluginState,\n    EditorOptions,\n    EditorPlugin,\n    IEditor,\n    PluginWithState,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * DOMEventPlugin handles customized DOM events, including:\n * 1. Keyboard event\n * 2. Mouse event\n * 3. IME state\n * 4. Drop event\n * 5. Focus and blur event\n * 6. Input event\n * 7. Scroll event\n * It contains special handling for Safari since Safari cannot get correct selection when onBlur event is triggered in editor.\n */\nexport default class DOMEventPlugin implements PluginWithState<DOMEventPluginState> {\n    private editor: IEditor | null = null;\n    private disposer: (() => void) | null = null;\n    private state: DOMEventPluginState;\n\n    /**\n     * Construct a new instance of DOMEventPlugin\n     * @param options The editor options\n     * @param contentDiv The editor content DIV\n     */\n    constructor(options: EditorOptions, contentDiv: HTMLDivElement) {\n        this.state = {\n            isInIME: false,\n            scrollContainer: options.scrollContainer || contentDiv,\n            selectionRange: null,\n            stopPrintableKeyboardEventPropagation: !options.allowKeyboardEventPropagation,\n            contextMenuProviders:\n                options.plugins?.filter<ContextMenuProvider<any>>(isContextMenuProvider) || [],\n            tableSelectionRange: null,\n            imageSelectionRange: null,\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'DOMEvent';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n\n        const document = this.editor.getDocument();\n        //Record<string, DOMEventHandler>\n        const eventHandlers: Partial<\n            { [P in keyof HTMLElementEventMap]: DOMEventHandler<HTMLElementEventMap[P]> }\n        > = {\n            // 1. Keyboard event\n            keypress: this.getEventHandler(PluginEventType.KeyPress),\n            keydown: this.getEventHandler(PluginEventType.KeyDown),\n            keyup: this.getEventHandler(PluginEventType.KeyUp),\n\n            // 2. Mouse event\n            mousedown: PluginEventType.MouseDown,\n            contextmenu: this.onContextMenuEvent,\n\n            // 3. IME state management\n            compositionstart: () => (this.state.isInIME = true),\n            compositionend: (rawEvent: CompositionEvent) => {\n                this.state.isInIME = false;\n                editor.triggerPluginEvent(PluginEventType.CompositionEnd, {\n                    rawEvent,\n                });\n            },\n\n            // 4. Drag and Drop event\n            dragstart: this.onDragStart,\n            drop: this.onDrop,\n\n            // 5. Focus management\n            focus: this.onFocus,\n\n            // 6. Input event\n            [Browser.isIE ? 'textinput' : 'input']: this.getEventHandler(PluginEventType.Input),\n        };\n\n        // 7. onBlur handlers\n        if (Browser.isSafari) {\n            document.addEventListener('mousedown', this.onMouseDownDocument, true /*useCapture*/);\n            document.addEventListener('keydown', this.onKeyDownDocument);\n            document.defaultView?.addEventListener('blur', this.cacheSelection);\n        } else if (Browser.isIEOrEdge) {\n            type EventHandlersIE = {\n                beforedeactivate: DOMEventHandler<HTMLElementEventMap['blur']>;\n            };\n            (eventHandlers as EventHandlersIE).beforedeactivate = this.cacheSelection;\n        } else {\n            eventHandlers.blur = this.cacheSelection;\n        }\n\n        this.disposer = editor.addDomEventHandler(<Record<string, DOMEventHandler>>eventHandlers);\n\n        // 8. Scroll event\n        this.state.scrollContainer.addEventListener('scroll', this.onScroll);\n        document.defaultView?.addEventListener('scroll', this.onScroll);\n        document.defaultView?.addEventListener('resize', this.onScroll);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        const document = this.editor?.getDocument();\n        if (document && Browser.isSafari) {\n            document.removeEventListener(\n                'mousedown',\n                this.onMouseDownDocument,\n                true /*useCapture*/\n            );\n            document.removeEventListener('keydown', this.onKeyDownDocument);\n            document.defaultView?.removeEventListener('blur', this.cacheSelection);\n        }\n\n        document?.defaultView?.removeEventListener('resize', this.onScroll);\n        document?.defaultView?.removeEventListener('scroll', this.onScroll);\n        this.state.scrollContainer.removeEventListener('scroll', this.onScroll);\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    private onDragStart = (e: Event) => {\n        const dragEvent = e as DragEvent;\n        const element = this.editor?.getElementAtCursor('*', dragEvent.target as Node);\n\n        if (element && !element.isContentEditable) {\n            dragEvent.preventDefault();\n        }\n    };\n    private onDrop = () => {\n        this.editor?.runAsync(editor => {\n            editor.addUndoSnapshot(() => {}, ChangeSource.Drop);\n        });\n    };\n\n    private onFocus = () => {\n        if (!this.state.skipReselectOnFocus) {\n            const { table, coordinates } = this.state.tableSelectionRange || {};\n            const { image } = this.state.imageSelectionRange || {};\n\n            if (table && coordinates) {\n                this.editor?.select(table, coordinates);\n            } else if (image) {\n                this.editor?.select(image);\n            } else if (this.state.selectionRange) {\n                this.editor?.select(this.state.selectionRange);\n            }\n        }\n\n        this.state.selectionRange = null;\n    };\n    private onKeyDownDocument = (event: KeyboardEvent) => {\n        if (event.which == Keys.TAB && !event.defaultPrevented) {\n            this.cacheSelection();\n        }\n    };\n\n    private onMouseDownDocument = (event: MouseEvent) => {\n        if (\n            this.editor &&\n            !this.state.selectionRange &&\n            !this.editor.contains(event.target as Node)\n        ) {\n            this.cacheSelection();\n        }\n    };\n\n    private cacheSelection = () => {\n        if (!this.state.selectionRange && this.editor) {\n            this.state.selectionRange = this.editor.getSelectionRange(false /*tryGetFromCache*/);\n        }\n    };\n    private onScroll = (e: Event) => {\n        this.editor?.triggerPluginEvent(PluginEventType.Scroll, {\n            rawEvent: e,\n            scrollContainer: this.state.scrollContainer,\n        });\n    };\n\n    private getEventHandler(eventType: PluginEventType): DOMEventHandler {\n        const beforeDispatch = (event: Event) =>\n            eventType == PluginEventType.Input\n                ? this.onInputEvent(<InputEvent>event)\n                : this.onKeyboardEvent(<KeyboardEvent>event);\n\n        return this.state.stopPrintableKeyboardEventPropagation\n            ? {\n                  pluginEventType: eventType,\n                  beforeDispatch,\n              }\n            : eventType;\n    }\n\n    private onKeyboardEvent = (event: KeyboardEvent) => {\n        if (isCharacterValue(event) || (event.which >= Keys.PAGEUP && event.which <= Keys.DOWN)) {\n            // Stop propagation for Character keys and Up/Down/Left/Right/Home/End/PageUp/PageDown\n            // since editor already handles these keys and no need to propagate to parents\n            event.stopPropagation();\n        }\n    };\n\n    private onInputEvent = (event: InputEvent) => {\n        event.stopPropagation();\n    };\n\n    private onContextMenuEvent = (event: MouseEvent) => {\n        const allItems: any[] = [];\n        const searcher = this.editor?.getContentSearcherOfCursor();\n        const elementBeforeCursor = searcher?.getInlineElementBefore();\n\n        let eventTargetNode = event.target as Node;\n        if (event.button != 2 && elementBeforeCursor) {\n            eventTargetNode = elementBeforeCursor.getContainerNode();\n        }\n        this.state.contextMenuProviders.forEach(provider => {\n            const items = provider.getContextMenuItems(eventTargetNode) ?? [];\n            if (items?.length > 0) {\n                if (allItems.length > 0) {\n                    allItems.push(null);\n                }\n                arrayPush(allItems, items);\n            }\n        });\n        this.editor?.triggerPluginEvent(PluginEventType.ContextMenu, {\n            rawEvent: event,\n            items: allItems,\n        });\n    };\n}\n\nfunction isContextMenuProvider(source: EditorPlugin): source is ContextMenuProvider<any> {\n    return !!(<ContextMenuProvider<any>>source)?.getContextMenuItems;\n}\n","import { isCtrlOrMetaPressed } from 'roosterjs-editor-dom';\nimport { Keys, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    EditPluginState,\n    GenericContentEditFeature,\n    IEditor,\n    PluginEvent,\n    PluginWithState,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Edit Component helps handle Content edit features\n */\nexport default class EditPlugin implements PluginWithState<EditPluginState> {\n    private editor: IEditor | null = null;\n    private state: EditPluginState;\n\n    /**\n     * Construct a new instance of EditPlugin\n     * @param options The editor options\n     */\n    constructor() {\n        this.state = {\n            features: {},\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Edit';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        let hasFunctionKey = false;\n        let features: GenericContentEditFeature<PluginEvent>[] | null = null;\n        let ctrlOrMeta = false;\n        const isKeyDownEvent = event.eventType == PluginEventType.KeyDown;\n\n        if (isKeyDownEvent) {\n            const rawEvent = event.rawEvent;\n            const range = this.editor?.getSelectionRange();\n\n            ctrlOrMeta = isCtrlOrMetaPressed(rawEvent);\n            hasFunctionKey = ctrlOrMeta || rawEvent.altKey;\n            features =\n                this.state.features[rawEvent.which] ||\n                (range && !range.collapsed && this.state.features[Keys.RANGE]);\n        } else if (event.eventType == PluginEventType.ContentChanged) {\n            features = this.state.features[Keys.CONTENTCHANGED];\n        }\n\n        for (let i = 0; features && i < features?.length; i++) {\n            const feature = features[i];\n            if (\n                (feature.allowFunctionKeys || !hasFunctionKey) &&\n                this.editor &&\n                feature.shouldHandleEvent(event, this.editor, ctrlOrMeta)\n            ) {\n                feature.handleEvent(event, this.editor);\n                if (isKeyDownEvent) {\n                    event.handledByEditFeature = true;\n                }\n                break;\n            }\n        }\n    }\n}\n","import {\n    inlineEntityOnPluginEvent,\n    normalizeDelimitersInEditor,\n} from './utils/inlineEntityOnPluginEvent';\nimport {\n    Browser,\n    commitEntity,\n    getEntityFromElement,\n    getEntitySelector,\n    isCharacterValue,\n    toArray,\n    arrayPush,\n    createElement,\n    addRangeToSelection,\n    createRange,\n    isBlockElement,\n    getObjectKeys,\n} from 'roosterjs-editor-dom';\nimport type {\n    ContentChangedEvent,\n    Entity,\n    EntityOperationEvent,\n    EntityPluginState,\n    KnownEntityItem,\n    HtmlSanitizerOptions,\n    IEditor,\n    PluginEvent,\n    PluginMouseUpEvent,\n    PluginWithState,\n} from 'roosterjs-editor-types';\nimport {\n    ChangeSource,\n    ContentPosition,\n    EntityClasses,\n    EntityOperation,\n    Keys,\n    PluginEventType,\n    QueryScope,\n} from 'roosterjs-editor-types';\nimport type { CompatibleEntityOperation } from 'roosterjs-editor-types/lib/compatibleTypes';\n\nconst ENTITY_ID_REGEX = /_(\\d{1,8})$/;\n\nconst ENTITY_CSS_REGEX = '^' + EntityClasses.ENTITY_INFO_NAME + '$';\nconst ENTITY_ID_CSS_REGEX = '^' + EntityClasses.ENTITY_ID_PREFIX;\nconst ENTITY_TYPE_CSS_REGEX = '^' + EntityClasses.ENTITY_TYPE_PREFIX;\nconst ENTITY_READONLY_CSS_REGEX = '^' + EntityClasses.ENTITY_READONLY_PREFIX;\nconst ALLOWED_CSS_CLASSES = [\n    ENTITY_CSS_REGEX,\n    ENTITY_ID_CSS_REGEX,\n    ENTITY_TYPE_CSS_REGEX,\n    ENTITY_READONLY_CSS_REGEX,\n];\nconst REMOVE_ENTITY_OPERATIONS: (EntityOperation | CompatibleEntityOperation)[] = [\n    EntityOperation.Overwrite,\n    EntityOperation.PartialOverwrite,\n    EntityOperation.RemoveFromStart,\n    EntityOperation.RemoveFromEnd,\n];\n\n/**\n * @internal\n * Entity Plugin helps handle all operations related to an entity and generate entity specified events\n */\nexport default class EntityPlugin implements PluginWithState<EntityPluginState> {\n    private editor: IEditor | null = null;\n    private state: EntityPluginState;\n\n    /**\n     * Construct a new instance of EntityPlugin\n     */\n    constructor() {\n        this.state = {\n            entityMap: {},\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Entity';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n        this.state.entityMap = {};\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.MouseUp:\n                this.handleMouseUpEvent(event);\n                break;\n            case PluginEventType.KeyDown:\n                this.handleKeyDownEvent(event.rawEvent);\n                break;\n            case PluginEventType.BeforeCutCopy:\n                if (event.isCut) {\n                    this.handleCutEvent(event.rawEvent);\n                }\n                break;\n            case PluginEventType.BeforePaste:\n                this.handleBeforePasteEvent(event.sanitizingOption);\n                break;\n            case PluginEventType.ContentChanged:\n                this.handleContentChangedEvent(event);\n                break;\n            case PluginEventType.EditorReady:\n                this.handleContentChangedEvent();\n                break;\n            case PluginEventType.ExtractContentWithDom:\n                this.handleExtractContentWithDomEvent(event.clonedRoot);\n                break;\n            case PluginEventType.ContextMenu:\n                this.handleContextMenuEvent(event.rawEvent);\n                break;\n            case PluginEventType.EntityOperation:\n                this.handleEntityOperationEvent(event);\n                break;\n        }\n\n        if (this.editor) {\n            inlineEntityOnPluginEvent(event, this.editor);\n        }\n    }\n\n    private handleContextMenuEvent(event: UIEvent) {\n        const node = event.target as Node;\n        const entityElement = node && this.editor?.getElementAtCursor(getEntitySelector(), node);\n\n        if (entityElement) {\n            event.preventDefault();\n            this.triggerEvent(entityElement, EntityOperation.ContextMenu, event);\n        }\n    }\n\n    private handleCutEvent = (event: ClipboardEvent) => {\n        const range = this.editor?.getSelectionRange();\n        if (range && !range.collapsed) {\n            this.checkRemoveEntityForRange(event);\n        }\n    };\n\n    private handleMouseUpEvent(event: PluginMouseUpEvent) {\n        const { rawEvent, isClicking } = event;\n        const node = rawEvent.target as Node;\n        let entityElement: HTMLElement | null;\n\n        if (\n            this.editor &&\n            isClicking &&\n            node &&\n            !!(entityElement = this.editor.getElementAtCursor(getEntitySelector(), node))\n        ) {\n            this.triggerEvent(entityElement, EntityOperation.Click, rawEvent);\n\n            workaroundSelectionIssueForIE(this.editor);\n        }\n    }\n\n    private handleKeyDownEvent(event: KeyboardEvent) {\n        if (\n            isCharacterValue(event) ||\n            event.which == Keys.BACKSPACE ||\n            event.which == Keys.DELETE ||\n            event.which == Keys.ENTER\n        ) {\n            const range = this.editor?.getSelectionRange();\n            if (range && !range.collapsed) {\n                this.checkRemoveEntityForRange(event);\n            }\n        }\n    }\n\n    private handleBeforePasteEvent(sanitizingOption: HtmlSanitizerOptions) {\n        const range = this.editor?.getSelectionRange();\n\n        if (range && !range.collapsed) {\n            this.checkRemoveEntityForRange(null! /*rawEvent*/);\n        }\n\n        if (sanitizingOption.additionalAllowedCssClasses) {\n            arrayPush(sanitizingOption.additionalAllowedCssClasses, ALLOWED_CSS_CLASSES);\n        }\n    }\n\n    private handleContentChangedEvent(event?: ContentChangedEvent) {\n        let shouldNormalizeDelimiters: boolean = false;\n        // 1. find removed entities\n        getObjectKeys(this.state.entityMap).forEach(id => {\n            const item = this.state.entityMap[id];\n            const element = item.element;\n\n            if (this.editor && !item.isDeleted && !this.editor.contains(element)) {\n                item.isDeleted = true;\n\n                this.triggerEvent(element, EntityOperation.Overwrite);\n\n                if (\n                    !shouldNormalizeDelimiters &&\n                    !element.isContentEditable &&\n                    !isBlockElement(element)\n                ) {\n                    shouldNormalizeDelimiters = true;\n                }\n            }\n        });\n\n        // 2. collect all new entities\n        const newEntities =\n            event?.source == ChangeSource.InsertEntity && event.data\n                ? [event.data as Entity]\n                : this.getExistingEntities().filter(entity => {\n                      const item = this.state.entityMap[entity.id];\n\n                      return !item || item.element != entity.wrapper || item.isDeleted;\n                  });\n\n        // 3. Add new entities to known entity list, and hydrate\n        newEntities.forEach(entity => {\n            const { wrapper, type, id, isReadonly } = entity;\n\n            entity.id = this.ensureUniqueId(type, id, wrapper);\n            commitEntity(wrapper, type, isReadonly, entity.id); // Use entity.id here because it is newly updated\n            this.handleNewEntity(entity);\n        });\n\n        if (shouldNormalizeDelimiters && this.editor) {\n            normalizeDelimitersInEditor(this.editor);\n        }\n    }\n\n    private handleEntityOperationEvent(event: EntityOperationEvent) {\n        if (this.editor && REMOVE_ENTITY_OPERATIONS.indexOf(event.operation) >= 0) {\n            const item = this.state.entityMap[event.entity.id];\n\n            if (item) {\n                item.isDeleted = true;\n            }\n        }\n    }\n\n    private handleExtractContentWithDomEvent(root: HTMLElement) {\n        toArray(root.querySelectorAll(getEntitySelector())).forEach(element => {\n            element.removeAttribute('contentEditable');\n\n            this.triggerEvent(element as HTMLElement, EntityOperation.ReplaceTemporaryContent);\n        });\n    }\n\n    private checkRemoveEntityForRange(event: Event) {\n        const editableEntityElements: HTMLElement[] = [];\n        const selector = getEntitySelector();\n        this.editor?.queryElements(selector, QueryScope.OnSelection, element => {\n            if (element.isContentEditable) {\n                editableEntityElements.push(element);\n            } else {\n                this.triggerEvent(element, EntityOperation.Overwrite, event);\n            }\n        });\n\n        // For editable entities, we need to check if it is fully or partially covered by current selection,\n        // and trigger different events;\n        if (this.editor && editableEntityElements.length > 0) {\n            const inSelectionEntityElements = this.editor.queryElements(\n                selector,\n                QueryScope.InSelection\n            );\n            editableEntityElements.forEach(element => {\n                const isFullyCovered = inSelectionEntityElements.indexOf(element) >= 0;\n                this.triggerEvent(\n                    element,\n                    isFullyCovered ? EntityOperation.Overwrite : EntityOperation.PartialOverwrite,\n                    event\n                );\n            });\n        }\n    }\n\n    private triggerEvent(element: HTMLElement, operation: EntityOperation, rawEvent?: Event) {\n        const entity = element && getEntityFromElement(element);\n\n        return entity\n            ? this.editor?.triggerPluginEvent(PluginEventType.EntityOperation, {\n                  operation,\n                  rawEvent,\n                  entity,\n              })\n            : null;\n    }\n\n    private handleNewEntity(entity: Entity) {\n        const { wrapper } = entity;\n        const event = this.triggerEvent(wrapper, EntityOperation.NewEntity);\n\n        const newItem: KnownEntityItem = {\n            element: entity.wrapper,\n        };\n\n        if (event?.shouldPersist) {\n            newItem.canPersist = true;\n        }\n\n        this.state.entityMap[entity.id] = newItem;\n    }\n\n    private getExistingEntities(): Entity[] {\n        return (\n            this.editor\n                ?.queryElements(getEntitySelector())\n                .map(getEntityFromElement)\n                .filter((x): x is Entity => !!x) ?? []\n        );\n    }\n\n    private ensureUniqueId(type: string, id: string, wrapper: HTMLElement) {\n        const match = ENTITY_ID_REGEX.exec(id);\n        const baseId = (match ? id.substr(0, id.length - match[0].length) : id) || type;\n\n        // Make sure entity id is unique\n        let newId = '';\n\n        for (let num = (match && parseInt(match[1])) || 0; ; num++) {\n            newId = num > 0 ? `${baseId}_${num}` : baseId;\n\n            const item = this.state.entityMap[newId];\n\n            if (!item || item.element == wrapper) {\n                break;\n            }\n        }\n\n        return newId;\n    }\n}\n\n/**\n * IE will show a resize border around the readonly content within content editable DIV\n * This is a workaround to remove it by temporarily move focus out of editor\n */\nconst workaroundSelectionIssueForIE = Browser.isIE\n    ? (editor: IEditor) => {\n          editor.runAsync(editor => {\n              const workaroundButton = editor.getCustomData('ENTITY_IE_FOCUS_BUTTON', () => {\n                  const button = createElement(\n                      {\n                          tag: 'button',\n                          style: 'overflow:hidden;position:fixed;width:0;height:0;top:-1000px',\n                      },\n                      editor.getDocument()\n                  ) as HTMLElement;\n                  button.onblur = () => {\n                      button.style.display = 'none';\n                  };\n\n                  editor.insertNode(button, {\n                      position: ContentPosition.Outside,\n                  });\n\n                  return button;\n              });\n\n              workaroundButton.style.display = '';\n              addRangeToSelection(createRange(workaroundButton, 0));\n          });\n      }\n    : () => {};\n","import { PluginEventType, PositionType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport { safeInstanceOf } from 'roosterjs-editor-dom';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\nconst Escape = 'Escape';\nconst Delete = 'Delete';\nconst mouseLeftButton = 0;\n\n/**\n * Detect image selection and help highlight the image\n */\nexport default class ImageSelection implements EditorPlugin {\n    private editor: IEditor | null = null;\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'ImageSelection';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor?.select(null);\n        this.editor = null;\n    }\n\n    onPluginEvent(event: PluginEvent) {\n        if (this.editor) {\n            switch (event.eventType) {\n                case PluginEventType.MouseUp:\n                    const target = event.rawEvent.target;\n                    if (\n                        safeInstanceOf(target, 'HTMLImageElement') &&\n                        target.isContentEditable &&\n                        event.rawEvent.button === mouseLeftButton\n                    ) {\n                        this.editor.select(target);\n                    }\n                    break;\n                case PluginEventType.MouseDown:\n                    const mouseTarget = event.rawEvent.target;\n                    const mouseSelection = this.editor.getSelectionRangeEx();\n                    if (\n                        mouseSelection &&\n                        mouseSelection.type === SelectionRangeTypes.ImageSelection &&\n                        mouseSelection.image !== mouseTarget\n                    ) {\n                        this.editor.select(null);\n                    }\n                    break;\n                case PluginEventType.KeyUp:\n                    const key = event.rawEvent.key;\n                    const keyDownSelection = this.editor.getSelectionRangeEx();\n                    if (keyDownSelection.type === SelectionRangeTypes.ImageSelection) {\n                        if (key === Escape) {\n                            this.editor.select(keyDownSelection.image, PositionType.Before);\n                            this.editor.getSelectionRange()?.collapse();\n                            event.rawEvent.stopPropagation();\n                        } else if (key === Delete) {\n                            this.editor.deleteNode(keyDownSelection.image);\n                            event.rawEvent.preventDefault();\n                        } else {\n                            this.editor.select(keyDownSelection.ranges[0]);\n                        }\n                    }\n                    break;\n                case PluginEventType.ContextMenu:\n                    const contextMenuTarget = event.rawEvent.target;\n                    const actualSelection = this.editor.getSelectionRangeEx();\n                    if (\n                        safeInstanceOf(contextMenuTarget, 'HTMLImageElement') &&\n                        (actualSelection.type !== SelectionRangeTypes.ImageSelection ||\n                            actualSelection.image !== contextMenuTarget)\n                    ) {\n                        this.editor.select(contextMenuTarget);\n                    }\n            }\n        }\n    }\n}\n","import { Browser, getObjectKeys, setColor } from 'roosterjs-editor-dom';\nimport { ChangeSource, DocumentCommand, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    EditorOptions,\n    IEditor,\n    LifecyclePluginState,\n    PluginWithState,\n    PluginEvent,\n} from 'roosterjs-editor-types';\n\nconst CONTENT_EDITABLE_ATTRIBUTE_NAME = 'contenteditable';\nconst COMMANDS: Record<string, string> = Browser.isFirefox\n    ? {\n          /**\n           * Disable these object resizing for firefox since other browsers don't have these behaviors\n           */\n          [DocumentCommand.EnableObjectResizing]: (false as any) as string,\n          [DocumentCommand.EnableInlineTableEditing]: (false as any) as string,\n      }\n    : Browser.isIE\n    ? {\n          /**\n           * Change the default paragraph separator to DIV. This is mainly for IE since its default setting is P\n           */\n          [DocumentCommand.DefaultParagraphSeparator]: 'div',\n\n          /**\n           * Disable auto link feature in IE since we have our own implementation\n           */\n          [DocumentCommand.AutoUrlDetect]: (false as any) as string,\n      }\n    : {};\n\nconst DARK_MODE_DEFAULT_FORMAT = {\n    backgroundColors: {\n        darkModeColor: 'rgb(51,51,51)',\n        lightModeColor: 'rgb(255,255,255)',\n    },\n    textColors: {\n        darkModeColor: 'rgb(255,255,255)',\n        lightModeColor: 'rgb(0,0,0)',\n    },\n};\n\n/**\n * @internal\n * Lifecycle plugin handles editor initialization and disposing\n */\nexport default class LifecyclePlugin implements PluginWithState<LifecyclePluginState> {\n    private editor: IEditor | null = null;\n    private state: LifecyclePluginState;\n    private initialContent: string;\n    private initializer: (() => void) | null = null;\n    private disposer: (() => void) | null = null;\n    private adjustColor: () => void;\n\n    /**\n     * Construct a new instance of LifecyclePlugin\n     * @param options The editor options\n     * @param contentDiv The editor content DIV\n     */\n    constructor(options: EditorOptions, contentDiv: HTMLDivElement) {\n        this.initialContent = options.initialContent || contentDiv.innerHTML || '';\n\n        // Make the container editable and set its selection styles\n        if (contentDiv.getAttribute(CONTENT_EDITABLE_ATTRIBUTE_NAME) === null) {\n            this.initializer = () => {\n                contentDiv.contentEditable = 'true';\n                contentDiv.style.userSelect = 'text';\n                contentDiv.style.webkitUserSelect = 'text';\n            };\n            this.disposer = () => {\n                contentDiv.style.userSelect = '';\n                contentDiv.style.webkitUserSelect = '';\n                contentDiv.removeAttribute(CONTENT_EDITABLE_ATTRIBUTE_NAME);\n            };\n        }\n        this.adjustColor = options.doNotAdjustEditorColor\n            ? () => {}\n            : () => {\n                  const { textColors, backgroundColors } = DARK_MODE_DEFAULT_FORMAT;\n                  const { isDarkMode } = this.state;\n                  const darkColorHandler = this.editor?.getDarkColorHandler();\n                  setColor(\n                      contentDiv,\n                      textColors,\n                      false /*isBackground*/,\n                      isDarkMode,\n                      false /*shouldAdaptFontColor*/,\n                      darkColorHandler\n                  );\n                  setColor(\n                      contentDiv,\n                      backgroundColors,\n                      true /*isBackground*/,\n                      isDarkMode,\n                      false /*shouldAdaptFontColor*/,\n                      darkColorHandler\n                  );\n              };\n\n        const getDarkColor = options.getDarkColor ?? ((color: string) => color);\n        const defaultFormat = options.defaultFormat ? { ...options.defaultFormat } : null;\n\n        if (defaultFormat) {\n            if (defaultFormat.textColor && !defaultFormat.textColors) {\n                defaultFormat.textColors = {\n                    lightModeColor: defaultFormat.textColor,\n                    darkModeColor: getDarkColor(defaultFormat.textColor),\n                };\n                delete defaultFormat.textColor;\n            }\n\n            if (defaultFormat.backgroundColor && !defaultFormat.backgroundColors) {\n                defaultFormat.backgroundColors = {\n                    lightModeColor: defaultFormat.backgroundColor,\n                    darkModeColor: getDarkColor(defaultFormat.backgroundColor),\n                };\n                delete defaultFormat.backgroundColor;\n            }\n        }\n\n        this.state = {\n            customData: {},\n            defaultFormat,\n            isDarkMode: !!options.inDarkMode,\n            getDarkColor,\n            onExternalContentTransform: options.onExternalContentTransform ?? null,\n            experimentalFeatures: options.experimentalFeatures || [],\n            shadowEditFragment: null,\n            shadowEditEntities: null,\n            shadowEditSelectionPath: null,\n            shadowEditTableSelectionPath: null,\n            shadowEditImageSelectionPath: null,\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Lifecycle';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n\n        // Ensure initial content and its format\n        this.editor.setContent(this.initialContent, false /*triggerContentChangedEvent*/);\n\n        // Set content DIV to be editable\n        this.initializer?.();\n\n        // Set editor background color for dark mode\n        this.adjustColor();\n\n        // Do proper change for browsers to disable some browser-specified behaviors.\n        this.adjustBrowserBehavior();\n\n        // Let other plugins know that we are ready\n        this.editor.triggerPluginEvent(PluginEventType.EditorReady, {}, true /*broadcast*/);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor?.triggerPluginEvent(PluginEventType.BeforeDispose, {}, true /*broadcast*/);\n\n        getObjectKeys(this.state.customData).forEach(key => {\n            const data = this.state.customData[key];\n\n            if (data && data.disposer) {\n                data.disposer(data.value);\n            }\n\n            delete this.state.customData[key];\n        });\n\n        if (this.disposer) {\n            this.disposer();\n            this.disposer = null;\n            this.initializer = null;\n        }\n\n        this.editor = null;\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (\n            event.eventType == PluginEventType.ContentChanged &&\n            (event.source == ChangeSource.SwitchToDarkMode ||\n                event.source == ChangeSource.SwitchToLightMode)\n        ) {\n            this.state.isDarkMode = event.source == ChangeSource.SwitchToDarkMode;\n            this.adjustColor();\n        }\n    }\n\n    private adjustBrowserBehavior() {\n        getObjectKeys(COMMANDS).forEach(command => {\n            // Catch any possible exception since this should not block the initialization of editor\n            try {\n                this.editor?.getDocument().execCommand(command, false, COMMANDS[command]);\n            } catch {}\n        });\n    }\n}\n","import { PluginEventType } from 'roosterjs-editor-types';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * MouseUpPlugin help trigger MouseUp event even when mouse up happens outside editor\n * as long as the mouse was pressed within Editor before\n */\nexport default class MouseUpPlugin implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private mouseUpEventListerAdded: boolean = false;\n    private mouseDownX: number | null = null;\n    private mouseDownY: number | null = null;\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'MouseUp';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.removeMouseUpEventListener();\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (\n            this.editor &&\n            event.eventType == PluginEventType.MouseDown &&\n            !this.mouseUpEventListerAdded\n        ) {\n            this.editor\n                .getDocument()\n                .addEventListener('mouseup', this.onMouseUp, true /*setCapture*/);\n            this.mouseUpEventListerAdded = true;\n            this.mouseDownX = event.rawEvent.pageX;\n            this.mouseDownY = event.rawEvent.pageY;\n        }\n    }\n    private removeMouseUpEventListener() {\n        if (this.editor && this.mouseUpEventListerAdded) {\n            this.mouseUpEventListerAdded = false;\n            this.editor.getDocument().removeEventListener('mouseup', this.onMouseUp, true);\n        }\n    }\n\n    private onMouseUp = (rawEvent: MouseEvent) => {\n        if (this.editor) {\n            this.removeMouseUpEventListener();\n            this.editor.triggerPluginEvent(PluginEventType.MouseUp, {\n                rawEvent,\n                isClicking: this.mouseDownX == rawEvent.pageX && this.mouseDownY == rawEvent.pageY,\n            });\n        }\n    };\n}\n","import { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport {\n    changeElementTag,\n    getTagOfNode,\n    moveChildNodes,\n    safeInstanceOf,\n    toArray,\n} from 'roosterjs-editor-dom';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * TODO: Rename this plugin since it is not only for table now\n *\n * NormalizeTable plugin makes sure each table in editor has TBODY/THEAD/TFOOT tag around TR tags\n *\n * When we retrieve HTML content using innerHTML, browser will always add TBODY around TR nodes if there is not.\n * This causes some issue when we restore the HTML content with selection path since the selection path is\n * deeply coupled with DOM structure. So we need to always make sure there is already TBODY tag whenever\n * new table is inserted, to make sure the selection path we created is correct.\n */\nexport default class NormalizeTablePlugin implements EditorPlugin {\n    private editor: IEditor | null = null;\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'NormalizeTable';\n    }\n\n    /**\n     * The first method that editor will call to a plugin when editor is initializing.\n     * It will pass in the editor instance, plugin should take this chance to save the\n     * editor reference so that it can call to any editor method or format API later.\n     * @param editor The editor object\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * The last method that editor will call to a plugin before it is disposed.\n     * Plugin can take this chance to clear the reference to editor. After this method is\n     * called, plugin should not call to any editor method since it will result in error.\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Core method for a plugin. Once an event happens in editor, editor will call this\n     * method of each plugin to handle the event as long as the event is not handled\n     * exclusively by another plugin.\n     * @param event The event to handle:\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n            case PluginEventType.ContentChanged:\n                if (this.editor) {\n                    this.normalizeTables(this.editor.queryElements('table'));\n                }\n                break;\n\n            case PluginEventType.BeforePaste:\n                this.normalizeTables(toArray(event.fragment.querySelectorAll('table')));\n                break;\n\n            case PluginEventType.MouseDown:\n                this.normalizeTableFromEvent(event.rawEvent);\n                break;\n\n            case PluginEventType.KeyDown:\n                if (event.rawEvent.shiftKey) {\n                    this.normalizeTableFromEvent(event.rawEvent);\n                }\n                break;\n\n            case PluginEventType.ExtractContentWithDom:\n                normalizeListsForExport(event.clonedRoot);\n                break;\n        }\n    }\n\n    private normalizeTableFromEvent(event: KeyboardEvent | MouseEvent) {\n        const table = this.editor?.getElementAtCursor('table', event.target as Node);\n\n        if (table) {\n            this.normalizeTables([<HTMLTableElement>table]);\n        }\n    }\n\n    private normalizeTables(tables: HTMLTableElement[]) {\n        if (this.editor && tables.length > 0) {\n            const rangeEx = this.editor.getSelectionRangeEx();\n            const { startContainer, endContainer, startOffset, endOffset } =\n                (rangeEx?.type == SelectionRangeTypes.Normal && rangeEx.ranges[0]) || {};\n\n            const isChanged = normalizeTables(tables);\n\n            if (isChanged) {\n                if (\n                    startContainer &&\n                    endContainer &&\n                    typeof startOffset === 'number' &&\n                    typeof endOffset === 'number'\n                ) {\n                    this.editor.select(startContainer, startOffset, endContainer, endOffset);\n                } else if (\n                    rangeEx?.type == SelectionRangeTypes.TableSelection &&\n                    rangeEx.coordinates\n                ) {\n                    this.editor.select(rangeEx.table, rangeEx.coordinates);\n                }\n            }\n        }\n    }\n}\n\nfunction normalizeTables(tables: HTMLTableElement[]) {\n    let isDOMChanged = false;\n    tables.forEach(table => {\n        let tbody: HTMLTableSectionElement | null = null;\n\n        for (let child = table.firstChild; child; child = child.nextSibling) {\n            const tag = getTagOfNode(child);\n            switch (tag) {\n                case 'TR':\n                    if (!tbody) {\n                        tbody = table.ownerDocument.createElement('tbody');\n                        table.insertBefore(tbody, child);\n                    }\n\n                    tbody.appendChild(child);\n                    child = tbody;\n                    isDOMChanged = true;\n\n                    break;\n                case 'TBODY':\n                    if (tbody) {\n                        moveChildNodes(tbody, child, true /*keepExistingChildren*/);\n                        child.parentNode?.removeChild(child);\n                        child = tbody;\n                        isDOMChanged = true;\n                    } else {\n                        tbody = child as HTMLTableSectionElement;\n                    }\n                    break;\n                default:\n                    tbody = null;\n                    break;\n            }\n        }\n\n        const colgroups = table.querySelectorAll('colgroup');\n        const thead = table.querySelector('thead');\n        if (thead) {\n            colgroups.forEach(colgroup => {\n                if (!thead.contains(colgroup)) {\n                    thead.appendChild(colgroup);\n                }\n            });\n        }\n    });\n\n    return isDOMChanged;\n}\n\nfunction normalizeListsForExport(root: ParentNode) {\n    toArray(root.querySelectorAll('li')).forEach(li => {\n        const prevElement = li.previousSibling;\n\n        if (li.style.display == 'block' && safeInstanceOf(prevElement, 'HTMLLIElement')) {\n            li.style.removeProperty('display');\n\n            prevElement.appendChild(changeElementTag(li, 'div'));\n        }\n    });\n}\n","import { ChangeSource, Keys, PluginEventType, PositionType } from 'roosterjs-editor-types';\nimport { isCharacterValue, Position, setColor } from 'roosterjs-editor-dom';\nimport type {\n    IEditor,\n    NodePosition,\n    PendingFormatStatePluginState,\n    PluginEvent,\n    PluginWithState,\n} from 'roosterjs-editor-types';\n\nconst ZERO_WIDTH_SPACE = '\\u200B';\n\n/**\n * @internal\n * PendingFormatStatePlugin handles pending format state management\n */\nexport default class PendingFormatStatePlugin\n    implements PluginWithState<PendingFormatStatePluginState> {\n    private editor: IEditor | null = null;\n    private state: PendingFormatStatePluginState;\n\n    /**\n     * Construct a new instance of PendingFormatStatePlugin\n     * @param options The editor options\n     * @param contentDiv The editor content DIV\n     */\n    constructor() {\n        this.state = {\n            pendableFormatPosition: null,\n            pendableFormatState: null,\n            pendableFormatSpan: null,\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'PendingFormatState';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n        this.clear();\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.PendingFormatStateChanged:\n                // Got PendingFormatStateChanged event, cache current position and pending format if a format is passed in\n                // otherwise clear existing pending format.\n                if (event.formatState) {\n                    this.state.pendableFormatPosition = this.getCurrentPosition();\n                    this.state.pendableFormatState = event.formatState;\n                    this.state.pendableFormatSpan = event.formatCallback\n                        ? this.createPendingFormatSpan(event.formatCallback)\n                        : null;\n                } else {\n                    this.clear();\n                }\n\n                break;\n            case PluginEventType.KeyDown:\n            case PluginEventType.MouseDown:\n            case PluginEventType.ContentChanged:\n                let currentPosition: NodePosition | null = null;\n                if (\n                    this.editor &&\n                    event.eventType == PluginEventType.KeyDown &&\n                    isCharacterValue(event.rawEvent) &&\n                    this.state.pendableFormatSpan\n                ) {\n                    this.state.pendableFormatSpan.removeAttribute('contentEditable');\n                    this.editor.insertNode(this.state.pendableFormatSpan);\n                    this.editor.select(\n                        this.state.pendableFormatSpan,\n                        PositionType.Begin,\n                        this.state.pendableFormatSpan,\n                        PositionType.End\n                    );\n                    this.clear();\n                } else if (\n                    (event.eventType == PluginEventType.KeyDown &&\n                        event.rawEvent.which >= Keys.PAGEUP &&\n                        event.rawEvent.which <= Keys.DOWN) ||\n                    (this.state.pendableFormatPosition &&\n                        (currentPosition = this.getCurrentPosition()) &&\n                        !this.state.pendableFormatPosition.equalTo(currentPosition)) ||\n                    (event.eventType == PluginEventType.ContentChanged &&\n                        (event.source == ChangeSource.SwitchToDarkMode ||\n                            event.source == ChangeSource.SwitchToLightMode))\n                ) {\n                    // If content or position is changed (by keyboard, mouse, or code),\n                    // check if current position is still the same with the cached one (if exist),\n                    // and clear cached format if position is changed since it is out-of-date now\n                    this.clear();\n                }\n\n                break;\n        }\n    }\n\n    private clear() {\n        this.state.pendableFormatPosition = null;\n        this.state.pendableFormatState = null;\n        this.state.pendableFormatSpan = null;\n    }\n\n    private getCurrentPosition() {\n        let range = this.editor?.getSelectionRange();\n        return (range && Position.getStart(range).normalize()) ?? null;\n    }\n\n    private createPendingFormatSpan(\n        callback: (element: HTMLElement, isInnerNode?: boolean) => any\n    ) {\n        let span = this.state.pendableFormatSpan;\n\n        if (!span && this.editor) {\n            const currentStyle = this.editor.getStyleBasedFormatState();\n            const doc = this.editor.getDocument();\n            const isDarkMode = this.editor.isDarkMode();\n\n            span = doc.createElement('span');\n            span.contentEditable = 'true';\n            span.appendChild(doc.createTextNode(ZERO_WIDTH_SPACE));\n\n            span.style.setProperty('font-family', currentStyle.fontName ?? null);\n            span.style.setProperty('font-size', currentStyle.fontSize ?? null);\n\n            const darkColorHandler = this.editor.getDarkColorHandler();\n\n            if (currentStyle.textColors || currentStyle.textColor) {\n                setColor(\n                    span,\n                    (currentStyle.textColors || currentStyle.textColor)!,\n                    false /*isBackground*/,\n                    isDarkMode,\n                    false /*shouldAdaptFontColor*/,\n                    darkColorHandler\n                );\n            }\n\n            if (currentStyle.backgroundColors || currentStyle.backgroundColor) {\n                setColor(\n                    span,\n                    (currentStyle.backgroundColors || currentStyle.backgroundColor)!,\n                    true /*isBackground*/,\n                    isDarkMode,\n                    false /*shouldAdaptFontColor*/,\n                    darkColorHandler\n                );\n            }\n        }\n\n        if (span) {\n            callback(span);\n        }\n\n        return span;\n    }\n}\n","import { PluginEventType } from 'roosterjs-editor-types';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\nimport {\n    Browser,\n    findClosestElementAncestor,\n    getTagOfNode,\n    isCtrlOrMetaPressed,\n    Position,\n} from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Typing Component helps to ensure typing is always happening under a DOM container\n */\nexport default class TypeInContainerPlugin implements EditorPlugin {\n    private editor: IEditor | null = null;\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'TypeInContainer';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    private isRangeEmpty(range: Range) {\n        if (\n            range.collapsed &&\n            range.startContainer.nodeType === Node.ELEMENT_NODE &&\n            getTagOfNode(range.startContainer) == 'DIV' &&\n            !range.startContainer.firstChild\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        // We need to check if the ctrl key or the meta key is pressed,\n        // browsers like Safari fire the \"keypress\" event when the meta key is pressed.\n        if (\n            event.eventType == PluginEventType.KeyPress &&\n            this.editor &&\n            !(event.rawEvent && isCtrlOrMetaPressed(event.rawEvent))\n        ) {\n            // If normalization was not possible before the keypress,\n            // check again after the keyboard event has been processed by browser native behavior.\n            //\n            // This handles the case where the keyboard event that first inserts content happens when\n            // there is already content under the selection (e.g. Ctrl+a -> type new content).\n            //\n            // Only schedule when the range is not collapsed to catch this edge case.\n            let range = this.editor.getSelectionRange();\n\n            const styledAncestor =\n                range &&\n                findClosestElementAncestor(range.startContainer, undefined /* root */, '[style]');\n\n            if (!range || (!this.isRangeEmpty(range) && this.editor.contains(styledAncestor))) {\n                return;\n            }\n\n            if (range.collapsed) {\n                this.editor.ensureTypeInContainer(Position.getStart(range), event.rawEvent);\n            } else {\n                const callback = () => {\n                    const focusedPosition = this.editor?.getFocusedPosition();\n                    if (focusedPosition) {\n                        this.editor?.ensureTypeInContainer(focusedPosition, event.rawEvent);\n                    }\n                };\n\n                if (Browser.isMobileOrTablet) {\n                    this.editor.getDocument().defaultView?.setTimeout(callback, 100);\n                } else {\n                    this.editor.runAsync(callback);\n                }\n            }\n        }\n    }\n}\n","import { ChangeSource, Keys, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    ContentChangedEvent,\n    EditorOptions,\n    IEditor,\n    PluginEvent,\n    PluginWithState,\n    Snapshot,\n    UndoPluginState,\n    UndoSnapshotsService,\n} from 'roosterjs-editor-types';\nimport {\n    addSnapshotV2,\n    canMoveCurrentSnapshot,\n    clearProceedingSnapshotsV2,\n    createSnapshots,\n    isCtrlOrMetaPressed,\n    moveCurrentSnapshot,\n    canUndoAutoComplete,\n} from 'roosterjs-editor-dom';\n\n// Max stack size that cannot be exceeded. When exceeded, old undo history will be dropped\n// to keep size under limit. This is kept at 10MB\nconst MAX_SIZE_LIMIT = 1e7;\n\n/**\n * @internal\n * Provides snapshot based undo service for Editor\n */\nexport default class UndoPlugin implements PluginWithState<UndoPluginState> {\n    private editor: IEditor | null = null;\n    private lastKeyPress: number | null = null;\n    private state: UndoPluginState;\n\n    /**\n     * Construct a new instance of UndoPlugin\n     * @param options The wrapper of the state object\n     */\n    constructor(options: EditorOptions) {\n        this.state = {\n            snapshotsService:\n                options.undoMetadataSnapshotService ||\n                createUndoSnapshotServiceBridge(options.undoSnapshotService) ||\n                createUndoSnapshots(),\n            isRestoring: false,\n            hasNewContent: false,\n            isNested: false,\n            autoCompletePosition: null,\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Undo';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor): void {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    /**\n     * Check if the plugin should handle the given event exclusively.\n     * @param event The event to check\n     */\n    willHandleEventExclusively(event: PluginEvent) {\n        return (\n            event.eventType == PluginEventType.KeyDown &&\n            event.rawEvent.which == Keys.BACKSPACE &&\n            !event.rawEvent.ctrlKey &&\n            this.canUndoAutoComplete()\n        );\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent): void {\n        // if editor is in IME, don't do anything\n        if (!this.editor || this.editor.isInIME()) {\n            return;\n        }\n\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n                const undoState = this.editor.getUndoState();\n                if (!undoState.canUndo && !undoState.canRedo) {\n                    // Only add initial snapshot when there is no existing snapshot\n                    // Otherwise preserved undo/redo state may be ruined\n                    this.addUndoSnapshot();\n                }\n                break;\n            case PluginEventType.KeyDown:\n                this.onKeyDown(event.rawEvent);\n                break;\n            case PluginEventType.KeyPress:\n                this.onKeyPress(event.rawEvent);\n                break;\n            case PluginEventType.CompositionEnd:\n                this.clearRedoForInput();\n                this.addUndoSnapshot();\n                break;\n            case PluginEventType.ContentChanged:\n                this.onContentChanged(event);\n                break;\n            case PluginEventType.BeforeKeyboardEditing:\n                this.onBeforeKeyboardEditing(event.rawEvent);\n                break;\n        }\n    }\n\n    private onKeyDown(evt: KeyboardEvent): void {\n        // Handle backspace/delete when there is a selection to take a snapshot\n        // since we want the state prior to deletion restorable\n        // Ignore if keycombo is ALT+BACKSPACE\n        if ((evt.which == Keys.BACKSPACE && !evt.altKey) || evt.which == Keys.DELETE) {\n            if (evt.which == Keys.BACKSPACE && !evt.ctrlKey && this.canUndoAutoComplete()) {\n                evt.preventDefault();\n                this.editor?.undo();\n                this.state.autoCompletePosition = null;\n                this.lastKeyPress = evt.which;\n            } else if (!evt.defaultPrevented) {\n                let selectionRange = this.editor?.getSelectionRange();\n\n                // Add snapshot when\n                // 1. Something has been selected (not collapsed), or\n                // 2. It has a different key code from the last keyDown event (to prevent adding too many snapshot when keeping press the same key), or\n                // 3. Ctrl/Meta key is pressed so that a whole word will be deleted\n                if (\n                    selectionRange &&\n                    (!selectionRange.collapsed ||\n                        this.lastKeyPress != evt.which ||\n                        isCtrlOrMetaPressed(evt))\n                ) {\n                    this.addUndoSnapshot();\n                }\n\n                // Since some content is deleted, always set hasNewContent to true so that we will take undo snapshot next time\n                this.state.hasNewContent = true;\n                this.lastKeyPress = evt.which;\n            }\n        } else if (evt.which >= Keys.PAGEUP && evt.which <= Keys.DOWN) {\n            // PageUp, PageDown, Home, End, Left, Right, Up, Down\n            if (this.state.hasNewContent) {\n                this.addUndoSnapshot();\n            }\n            this.lastKeyPress = 0;\n        } else if (this.lastKeyPress == Keys.BACKSPACE || this.lastKeyPress == Keys.DELETE) {\n            if (this.state.hasNewContent) {\n                this.addUndoSnapshot();\n            }\n        }\n    }\n\n    private onKeyPress(evt: KeyboardEvent): void {\n        if (evt.metaKey) {\n            // if metaKey is pressed, simply return since no actual effect will be taken on the editor.\n            // this is to prevent changing hasNewContent to true when meta + v to paste on Safari.\n            return;\n        }\n\n        let range = this.editor?.getSelectionRange();\n        if (\n            (range && !range.collapsed) ||\n            (evt.which == Keys.SPACE && this.lastKeyPress != Keys.SPACE) ||\n            evt.which == Keys.ENTER\n        ) {\n            this.addUndoSnapshot();\n            if (evt.which == Keys.ENTER) {\n                // Treat ENTER as new content so if there is no input after ENTER and undo,\n                // we restore the snapshot before ENTER\n                this.state.hasNewContent = true;\n            }\n        } else {\n            this.clearRedoForInput();\n        }\n\n        this.lastKeyPress = evt.which;\n    }\n\n    private onBeforeKeyboardEditing(event: KeyboardEvent) {\n        // For keyboard event (triggered from Content Model), we can get its keycode from event.data\n        // And when user is keep pressing the same key, mark editor with \"hasNewContent\" so that next time user\n        // do some other action or press a different key, we will add undo snapshot\n        if (event.which != this.lastKeyPress) {\n            this.addUndoSnapshot();\n        }\n\n        this.lastKeyPress = event.which;\n        this.state.hasNewContent = true;\n    }\n\n    private onContentChanged(event: ContentChangedEvent) {\n        if (\n            !(\n                this.state.isRestoring ||\n                event.source == ChangeSource.SwitchToDarkMode ||\n                event.source == ChangeSource.SwitchToLightMode ||\n                event.source == ChangeSource.Keyboard\n            )\n        ) {\n            this.clearRedoForInput();\n        }\n    }\n\n    private clearRedoForInput() {\n        this.state.snapshotsService.clearRedo();\n        this.lastKeyPress = 0;\n        this.state.hasNewContent = true;\n    }\n\n    private canUndoAutoComplete() {\n        const focusedPosition = this.editor?.getFocusedPosition();\n        return (\n            this.state.snapshotsService.canUndoAutoComplete() &&\n            !!focusedPosition &&\n            !!this.state.autoCompletePosition?.equalTo(focusedPosition)\n        );\n    }\n\n    private addUndoSnapshot() {\n        this.editor?.addUndoSnapshot();\n        this.state.autoCompletePosition = null;\n    }\n}\n\nfunction createUndoSnapshots(): UndoSnapshotsService<Snapshot> {\n    const snapshots = createSnapshots<Snapshot>(MAX_SIZE_LIMIT);\n\n    return {\n        canMove: (delta: number): boolean => canMoveCurrentSnapshot(snapshots, delta),\n        move: (delta: number): Snapshot | null => moveCurrentSnapshot(snapshots, delta),\n        addSnapshot: (snapshot: Snapshot, isAutoCompleteSnapshot: boolean) =>\n            addSnapshotV2(snapshots, snapshot, isAutoCompleteSnapshot),\n        clearRedo: () => clearProceedingSnapshotsV2(snapshots),\n        canUndoAutoComplete: () => canUndoAutoComplete(snapshots),\n    };\n}\n\nfunction createUndoSnapshotServiceBridge(\n    service: UndoSnapshotsService<string> | undefined\n): UndoSnapshotsService<Snapshot> | undefined {\n    let html: string | null;\n    return service\n        ? {\n              canMove: (delta: number) => service.canMove(delta),\n              move: (delta: number): Snapshot | null =>\n                  (html = service.move(delta)) ? { html, metadata: null, knownColors: [] } : null,\n              addSnapshot: (snapshot: Snapshot, isAutoCompleteSnapshot: boolean) =>\n                  service.addSnapshot(\n                      snapshot.html +\n                          (snapshot.metadata ? `<!--${JSON.stringify(snapshot.metadata)}-->` : ''),\n                      isAutoCompleteSnapshot\n                  ),\n              clearRedo: () => service.clearRedo(),\n              canUndoAutoComplete: () => service.canUndoAutoComplete(),\n          }\n        : undefined;\n}\n","import CopyPastePlugin from './CopyPastePlugin';\nimport DOMEventPlugin from './DOMEventPlugin';\nimport EditPlugin from './EditPlugin';\nimport EntityPlugin from './EntityPlugin';\nimport ImageSelection from './ImageSelection';\nimport LifecyclePlugin from './LifecyclePlugin';\nimport MouseUpPlugin from './MouseUpPlugin';\nimport NormalizeTablePlugin from './NormalizeTablePlugin';\nimport PendingFormatStatePlugin from './PendingFormatStatePlugin';\nimport TypeInContainerPlugin from './TypeInContainerPlugin';\nimport UndoPlugin from './UndoPlugin';\nimport type { CorePlugins, EditorOptions, PluginState } from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport interface CreateCorePluginResponse extends CorePlugins {\n    _placeholder: null;\n}\n\n/**\n * @internal\n * Create Core Plugins\n * @param contentDiv Content DIV of editor\n * @param options Editor options\n */\nexport default function createCorePlugins(\n    contentDiv: HTMLDivElement,\n    options: EditorOptions\n): CreateCorePluginResponse {\n    const map = options.corePluginOverride || {};\n    // The order matters, some plugin needs to be put before/after others to make sure event\n    // can be handled in right order\n    return {\n        typeInContainer: map.typeInContainer || new TypeInContainerPlugin(),\n        edit: map.edit || new EditPlugin(),\n        pendingFormatState: map.pendingFormatState || new PendingFormatStatePlugin(),\n        _placeholder: null,\n        typeAfterLink: null!, //deprecated after firefox update\n        undo: map.undo || new UndoPlugin(options),\n        domEvent: map.domEvent || new DOMEventPlugin(options, contentDiv),\n        mouseUp: map.mouseUp || new MouseUpPlugin(),\n        copyPaste: map.copyPaste || new CopyPastePlugin(options),\n        entity: map.entity || new EntityPlugin(),\n        imageSelection: map.imageSelection || new ImageSelection(),\n        normalizeTable: map.normalizeTable || new NormalizeTablePlugin(),\n        lifecycle: map.lifecycle || new LifecyclePlugin(options, contentDiv),\n    };\n}\n\n/**\n * @internal\n * Get plugin state of core plugins\n * @param corePlugins CorePlugins object\n */\nexport function getPluginState(corePlugins: CorePlugins): PluginState {\n    return {\n        domEvent: corePlugins.domEvent.getState(),\n        pendingFormatState: corePlugins.pendingFormatState.getState(),\n        edit: corePlugins.edit.getState(),\n        lifecycle: corePlugins.lifecycle.getState(),\n        undo: corePlugins.undo.getState(),\n        entity: corePlugins.entity.getState(),\n        copyPaste: corePlugins.copyPaste.getState(),\n    };\n}\n","import type { VCell } from 'roosterjs-editor-types';\nimport type { VTable } from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Executes an action to all the cells within the selection range.\n * @param callback action to apply on each selected cell\n * @returns the amount of cells modified\n */\nexport const forEachSelectedCell = (vTable: VTable, callback: (cell: VCell) => void): void => {\n    if (vTable.selection) {\n        const { lastCell, firstCell } = vTable.selection;\n\n        for (let y = firstCell.y; y <= lastCell.y; y++) {\n            for (let x = firstCell.x; x <= lastCell.x; x++) {\n                if (vTable.cells && vTable.cells[y][x]?.td) {\n                    callback(vTable.cells[y][x]);\n                }\n            }\n        }\n    }\n};\n","import {\n    addDelimiters,\n    arrayPush,\n    createRange,\n    getDelimiterFromElement,\n    getEntityFromElement,\n    getEntitySelector,\n    isBlockElement,\n    isCharacterValue,\n    matchesSelector,\n    Position,\n    safeInstanceOf,\n    splitTextNode,\n} from 'roosterjs-editor-dom';\nimport type { Entity, IEditor, PluginEvent, PluginKeyDownEvent } from 'roosterjs-editor-types';\nimport {\n    ChangeSource,\n    DelimiterClasses,\n    Keys,\n    NodeType,\n    PluginEventType,\n    PositionType,\n    SelectionRangeTypes,\n} from 'roosterjs-editor-types';\n\nconst DELIMITER_SELECTOR =\n    '.' + DelimiterClasses.DELIMITER_AFTER + ',.' + DelimiterClasses.DELIMITER_BEFORE;\nconst ZERO_WIDTH_SPACE = '\\u200B';\nconst INLINE_ENTITY_SELECTOR = 'span' + getEntitySelector();\n\nexport function inlineEntityOnPluginEvent(event: PluginEvent, editor: IEditor) {\n    switch (event.eventType) {\n        case PluginEventType.ContentChanged:\n            if (event.source === ChangeSource.SetContent) {\n                normalizeDelimitersInEditor(editor);\n            }\n            break;\n        case PluginEventType.EditorReady:\n            normalizeDelimitersInEditor(editor);\n            break;\n\n        case PluginEventType.BeforePaste:\n            const { fragment, sanitizingOption } = event;\n            addDelimitersIfNeeded(fragment.querySelectorAll(INLINE_ENTITY_SELECTOR));\n\n            if (sanitizingOption.additionalAllowedCssClasses) {\n                arrayPush(sanitizingOption.additionalAllowedCssClasses, [\n                    DelimiterClasses.DELIMITER_AFTER,\n                    DelimiterClasses.DELIMITER_BEFORE,\n                ]);\n            }\n            break;\n\n        case PluginEventType.ExtractContentWithDom:\n        case PluginEventType.BeforeCutCopy:\n            event.clonedRoot.querySelectorAll(DELIMITER_SELECTOR).forEach(node => {\n                if (getDelimiterFromElement(node)) {\n                    removeNode(node);\n                } else {\n                    removeDelimiterAttr(node);\n                }\n            });\n            break;\n\n        case PluginEventType.KeyDown:\n            handleKeyDownEvent(editor, event);\n            break;\n    }\n}\n\nfunction preventTypeInDelimiter(delimiter: HTMLElement) {\n    delimiter.normalize();\n    const textNode = delimiter.firstChild as Node;\n    const index = textNode.nodeValue?.indexOf(ZERO_WIDTH_SPACE) ?? -1;\n    if (index >= 0) {\n        splitTextNode(<Text>textNode, index == 0 ? 1 : index, false /* returnFirstPart */);\n        let nodeToMove: Node | undefined;\n        delimiter.childNodes.forEach(node => {\n            if (node.nodeValue !== ZERO_WIDTH_SPACE) {\n                nodeToMove = node;\n            }\n        });\n        if (nodeToMove) {\n            delimiter.parentElement?.insertBefore(\n                nodeToMove,\n                delimiter.className == DelimiterClasses.DELIMITER_BEFORE\n                    ? delimiter\n                    : delimiter.nextSibling\n            );\n            const selection = nodeToMove.ownerDocument?.getSelection();\n\n            if (selection) {\n                selection.setPosition(\n                    nodeToMove,\n                    new Position(nodeToMove, PositionType.End).offset\n                );\n            }\n        }\n    }\n}\n\n/**\n * @internal\n */\nexport function normalizeDelimitersInEditor(editor: IEditor) {\n    removeInvalidDelimiters(editor.queryElements(DELIMITER_SELECTOR));\n    addDelimitersIfNeeded(editor.queryElements(INLINE_ENTITY_SELECTOR));\n}\n\nfunction addDelimitersIfNeeded(nodes: Element[] | NodeListOf<Element>) {\n    nodes.forEach(node => {\n        if (isEntityElement(node)) {\n            addDelimiters(node);\n        }\n    });\n}\n\nfunction isEntityElement(node: Node | null): node is HTMLElement {\n    return !!(\n        node &&\n        safeInstanceOf(node, 'HTMLElement') &&\n        isReadOnly(getEntityFromElement(node))\n    );\n}\n\nfunction removeNode(el: Node | undefined | null) {\n    el?.parentElement?.removeChild(el);\n}\n\nfunction isReadOnly(entity: Entity | null) {\n    return (\n        entity?.isReadonly &&\n        !isBlockElement(entity.wrapper) &&\n        safeInstanceOf(entity.wrapper, 'HTMLElement')\n    );\n}\n\nfunction removeInvalidDelimiters(nodes: Element[] | NodeListOf<Element>) {\n    nodes.forEach(node => {\n        if (getDelimiterFromElement(node)) {\n            const sibling = node.classList.contains(DelimiterClasses.DELIMITER_BEFORE)\n                ? node.nextElementSibling\n                : node.previousElementSibling;\n            if (!(safeInstanceOf(sibling, 'HTMLElement') && getEntityFromElement(sibling))) {\n                removeNode(node);\n            }\n        } else {\n            removeDelimiterAttr(node);\n        }\n    });\n}\n\nfunction removeDelimiterAttr(node: Element | undefined | null, checkEntity: boolean = true) {\n    if (!node) {\n        return;\n    }\n\n    const isAfter = node.classList.contains(DelimiterClasses.DELIMITER_AFTER);\n    const entitySibling = isAfter ? node.previousElementSibling : node.nextElementSibling;\n    if (checkEntity && entitySibling && isEntityElement(entitySibling)) {\n        return;\n    }\n\n    node.classList.remove(DelimiterClasses.DELIMITER_AFTER, DelimiterClasses.DELIMITER_BEFORE);\n\n    node.normalize();\n    node.childNodes.forEach(cn => {\n        const index = cn.textContent?.indexOf(ZERO_WIDTH_SPACE) ?? -1;\n        if (index >= 0) {\n            createRange(cn, index, cn, index + 1)?.deleteContents();\n        }\n    });\n}\n\nfunction handleCollapsedEnter(editor: IEditor, delimiter: HTMLElement) {\n    const isAfter = delimiter.classList.contains(DelimiterClasses.DELIMITER_AFTER);\n    const entity = !isAfter ? delimiter.nextSibling : delimiter.previousSibling;\n    const block = getBlock(editor, delimiter);\n\n    editor.runAsync(() => {\n        if (!block) {\n            return;\n        }\n        const blockToCheck = isAfter ? block.nextSibling : block.previousSibling;\n        if (blockToCheck && safeInstanceOf(blockToCheck, 'HTMLElement')) {\n            const delimiters = blockToCheck.querySelectorAll(DELIMITER_SELECTOR);\n            // Check if the last or first delimiter still contain the delimiter class and remove it.\n            const delimiterToCheck = delimiters.item(isAfter ? 0 : delimiters.length - 1);\n            removeDelimiterAttr(delimiterToCheck);\n        }\n\n        if (isEntityElement(entity)) {\n            const { nextElementSibling, previousElementSibling } = entity;\n            [nextElementSibling, previousElementSibling].forEach(el => {\n                // Check if after Enter the ZWS got removed but we still have a element with the class\n                // Remove the attributes of the element if it is invalid now.\n                if (el && matchesSelector(el, DELIMITER_SELECTOR) && !getDelimiterFromElement(el)) {\n                    removeDelimiterAttr(el, false /* checkEntity */);\n                }\n            });\n            // Add delimiters to the entity if needed because on Enter we can sometimes lose the ZWS of the element.\n            addDelimiters(entity);\n        }\n    });\n}\n\nconst getPosition = (container: HTMLElement | null) => {\n    if (container && getDelimiterFromElement(container)) {\n        const isAfter = container.classList.contains(DelimiterClasses.DELIMITER_AFTER);\n        return new Position(container, isAfter ? PositionType.After : PositionType.Before);\n    }\n    return undefined;\n};\n\nfunction getBlock(editor: IEditor, element: Node | undefined) {\n    if (!element) {\n        return undefined;\n    }\n\n    let block = editor.getBlockElementAtNode(element)?.getStartNode();\n\n    while (block && !isBlockElement(block)) {\n        block = editor.contains(block.parentElement) ? block.parentElement! : undefined;\n    }\n\n    return block;\n}\n\nfunction handleSelectionNotCollapsed(editor: IEditor, range: Range, event: KeyboardEvent) {\n    const { startContainer, endContainer, startOffset, endOffset } = range;\n\n    const startElement = editor.getElementAtCursor(DELIMITER_SELECTOR, startContainer);\n    const endElement = editor.getElementAtCursor(DELIMITER_SELECTOR, endContainer);\n\n    const startUpdate = getPosition(startElement);\n    const endUpdate = getPosition(endElement);\n\n    if (startUpdate || endUpdate) {\n        editor.select(\n            startUpdate ?? new Position(startContainer, startOffset),\n            endUpdate ?? new Position(endContainer, endOffset)\n        );\n    }\n    editor.runAsync(aEditor => {\n        const delimiter = aEditor.getElementAtCursor(DELIMITER_SELECTOR);\n        if (delimiter) {\n            preventTypeInDelimiter(delimiter);\n            if (event.which === Keys.ENTER) {\n                removeDelimiterAttr(delimiter);\n            }\n        }\n    });\n}\n\nfunction handleKeyDownEvent(editor: IEditor, event: PluginKeyDownEvent) {\n    const range = editor.getSelectionRangeEx();\n    const { rawEvent } = event;\n    if (range.type != SelectionRangeTypes.Normal) {\n        return;\n    }\n\n    if (range.areAllCollapsed && (isCharacterValue(rawEvent) || rawEvent.which === Keys.ENTER)) {\n        const position = editor.getFocusedPosition()?.normalize();\n        if (!position) {\n            return;\n        }\n\n        const { element, node } = position;\n        const refNode = element == node ? element.childNodes.item(position.offset) : element;\n\n        const delimiter = editor.getElementAtCursor(DELIMITER_SELECTOR, refNode);\n        if (!delimiter) {\n            return;\n        }\n\n        if (rawEvent.which === Keys.ENTER) {\n            handleCollapsedEnter(editor, delimiter);\n        } else if (delimiter.firstChild?.nodeType == NodeType.Text) {\n            editor.runAsync(() => preventTypeInDelimiter(delimiter));\n        }\n    } else if (!range.areAllCollapsed && !rawEvent.shiftKey && rawEvent.which != Keys.SHIFT) {\n        const currentRange = range.ranges[0];\n        if (!currentRange) {\n            return;\n        }\n        handleSelectionNotCollapsed(editor, currentRange, rawEvent);\n    }\n}\n","import { isWholeTableSelected } from 'roosterjs-editor-dom';\nimport type { VTable } from 'roosterjs-editor-dom';\nimport type { VCell } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Remove the cells outside of the selection.\n * @param vTable VTable to remove selection\n */\nexport const removeCellsOutsideSelection = (vTable: VTable) => {\n    if (vTable.selection) {\n        if (isWholeTableSelected(vTable, vTable.selection)) {\n            return;\n        }\n\n        vTable.table.style.removeProperty('width');\n        vTable.table.style.removeProperty('height');\n\n        const { firstCell, lastCell } = vTable.selection;\n        const resultCells: VCell[][] = [];\n\n        const firstX = firstCell.x;\n        const firstY = firstCell.y;\n        const lastX = lastCell.x;\n        const lastY = lastCell.y;\n\n        if (vTable.cells) {\n            vTable.cells.forEach((row, y) => {\n                row = row.filter((_, x) => y >= firstY && y <= lastY && x >= firstX && x <= lastX);\n                if (row.length > 0) {\n                    resultCells.push(row);\n                }\n            });\n            vTable.cells = resultCells;\n        }\n    }\n};\n","import { getObjectKeys, parseColor, setColor } from 'roosterjs-editor-dom';\nimport type {\n    ColorKeyAndValue,\n    DarkColorHandler,\n    ModeIndependentColor,\n} from 'roosterjs-editor-types';\n\nconst VARIABLE_REGEX = /^\\s*var\\(\\s*(\\-\\-[a-zA-Z0-9\\-_]+)\\s*(?:,\\s*(.*))?\\)\\s*$/;\nconst VARIABLE_PREFIX = 'var(';\nconst COLOR_VAR_PREFIX = 'darkColor';\nconst enum ColorAttributeEnum {\n    CssColor = 0,\n    HtmlColor = 1,\n}\nconst ColorAttributeName: { [key in ColorAttributeEnum]: string }[] = [\n    {\n        [ColorAttributeEnum.CssColor]: 'color',\n        [ColorAttributeEnum.HtmlColor]: 'color',\n    },\n    {\n        [ColorAttributeEnum.CssColor]: 'background-color',\n        [ColorAttributeEnum.HtmlColor]: 'bgcolor',\n    },\n];\n\n/**\n * @internal\n */\nexport default class DarkColorHandlerImpl implements DarkColorHandler {\n    private knownColors: Record<string, Readonly<ModeIndependentColor>> = {};\n\n    constructor(private contentDiv: HTMLElement, private getDarkColor: (color: string) => string) {}\n\n    /**\n     * Get a copy of known colors\n     * @returns\n     */\n    getKnownColorsCopy() {\n        return Object.values(this.knownColors);\n    }\n\n    /**\n     * Given a light mode color value and an optional dark mode color value, register this color\n     * so that editor can handle it, then return the CSS color value for current color mode.\n     * @param lightModeColor Light mode color value\n     * @param isDarkMode Whether current color mode is dark mode\n     * @param darkModeColor Optional dark mode color value. If not passed, we will calculate one.\n     */\n    registerColor(lightModeColor: string, isDarkMode: boolean, darkModeColor?: string): string {\n        const parsedColor = this.parseColorValue(lightModeColor);\n        let colorKey: string | undefined;\n\n        if (parsedColor) {\n            lightModeColor = parsedColor.lightModeColor;\n            darkModeColor = parsedColor.darkModeColor || darkModeColor;\n            colorKey = parsedColor.key;\n        }\n\n        if (isDarkMode && lightModeColor) {\n            colorKey =\n                colorKey || `--${COLOR_VAR_PREFIX}_${lightModeColor.replace(/[^\\d\\w]/g, '_')}`;\n\n            if (!this.knownColors[colorKey]) {\n                darkModeColor = darkModeColor || this.getDarkColor(lightModeColor);\n\n                this.knownColors[colorKey] = { lightModeColor, darkModeColor };\n                this.contentDiv.style.setProperty(colorKey, darkModeColor);\n            }\n\n            return `var(${colorKey}, ${lightModeColor})`;\n        } else {\n            return lightModeColor;\n        }\n    }\n\n    /**\n     * Reset known color record, clean up registered color variables.\n     */\n    reset(): void {\n        getObjectKeys(this.knownColors).forEach(key => this.contentDiv.style.removeProperty(key));\n        this.knownColors = {};\n    }\n\n    /**\n     * Parse an existing color value, if it is in variable-based color format, extract color key,\n     * light color and query related dark color if any\n     * @param color The color string to parse\n     * @param isInDarkMode Whether current content is in dark mode. When set to true, if the color value is not in dark var format,\n     * we will treat is as a dark mode color and try to find a matched dark mode color.\n     */\n    parseColorValue(color: string | undefined | null, isInDarkMode?: boolean): ColorKeyAndValue {\n        let key: string | undefined;\n        let lightModeColor = '';\n        let darkModeColor: string | undefined;\n\n        if (color) {\n            const match = color.startsWith(VARIABLE_PREFIX) ? VARIABLE_REGEX.exec(color) : null;\n\n            if (match) {\n                if (match[2]) {\n                    key = match[1];\n                    lightModeColor = match[2];\n                    darkModeColor = this.knownColors[key]?.darkModeColor;\n                } else {\n                    lightModeColor = '';\n                }\n            } else if (isInDarkMode) {\n                // If editor is in dark mode but the color is not in dark color format, it is possible the color was inserted from external code\n                // without any light color info. So we first try to see if there is a known dark color can match this color, and use its related\n                // light color as light mode color. Otherwise we need to drop this color to avoid show \"white on white\" content.\n                lightModeColor = this.findLightColorFromDarkColor(color) || '';\n\n                if (lightModeColor) {\n                    darkModeColor = color;\n                }\n            } else {\n                lightModeColor = color;\n            }\n        }\n\n        return { key, lightModeColor, darkModeColor };\n    }\n\n    /**\n     * Find related light mode color from dark mode color.\n     * @param darkColor The existing dark color\n     */\n    findLightColorFromDarkColor(darkColor: string): string | null {\n        const rgbSearch = parseColor(darkColor);\n\n        if (rgbSearch) {\n            const key = getObjectKeys(this.knownColors).find(key => {\n                const rgbCurrent = parseColor(this.knownColors[key].darkModeColor);\n\n                return (\n                    rgbCurrent &&\n                    rgbCurrent[0] == rgbSearch[0] &&\n                    rgbCurrent[1] == rgbSearch[1] &&\n                    rgbCurrent[2] == rgbSearch[2]\n                );\n            });\n\n            if (key) {\n                return this.knownColors[key].lightModeColor;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Transform element color, from dark to light or from light to dark\n     * @param element The element to transform color\n     * @param fromDarkMode Whether this is transforming color from dark mode\n     * @param toDarkMode Whether this is transforming color to dark mode\n     */\n    transformElementColor(element: HTMLElement, fromDarkMode: boolean, toDarkMode: boolean): void {\n        ColorAttributeName.forEach((names, i) => {\n            const color = this.parseColorValue(\n                element.style.getPropertyValue(names[ColorAttributeEnum.CssColor]) ||\n                    element.getAttribute(names[ColorAttributeEnum.HtmlColor]),\n                !!fromDarkMode\n            ).lightModeColor;\n\n            element.style.setProperty(names[ColorAttributeEnum.CssColor], null);\n            element.removeAttribute(names[ColorAttributeEnum.HtmlColor]);\n\n            if (color && color != 'inherit') {\n                setColor(element, color, i != 0, toDarkMode, false /*shouldAdaptFontColor*/, this);\n            }\n        });\n    }\n}\n","import { createEditorCore } from './createEditorCore';\r\nimport { EditorBase } from './EditorBase';\r\nimport type { EditorCore, EditorOptions } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * RoosterJs core editor class\r\n */\r\nexport default class Editor extends EditorBase<EditorCore, EditorOptions> {\r\n    /**\r\n     * Creates an instance of EditorBase\r\n     * @param contentDiv The DIV HTML element which will be the container element of editor\r\n     * @param options An optional options object to customize the editor\r\n     */\r\n    constructor(contentDiv: HTMLDivElement, options: EditorOptions = {}) {\r\n        super(contentDiv, options, createEditorCore);\r\n    }\r\n}\r\n","import { isFeatureEnabled } from './isFeatureEnabled';\nimport {\n    ChangeSource,\n    ColorTransformDirection,\n    ContentPosition,\n    GetContentMode,\n    PluginEventType,\n    PositionType,\n    QueryScope,\n    RegionType,\n} from 'roosterjs-editor-types';\nimport type {\n    BlockElement,\n    ClipboardData,\n    ContentChangedData,\n    CoreCreator,\n    DarkColorHandler,\n    DefaultFormat,\n    DOMEventHandler,\n    EditorCore,\n    EditorOptions,\n    EditorUndoState,\n    ExperimentalFeatures,\n    GenericContentEditFeature,\n    IContentTraverser,\n    IEditor,\n    InsertOption,\n    IPositionContentSearcher,\n    NodePosition,\n    PendableFormatState,\n    PluginEvent,\n    PluginEventData,\n    PluginEventFromType,\n    Rect,\n    Region,\n    SelectionPath,\n    SelectionRangeEx,\n    SizeTransformer,\n    StyleBasedFormatState,\n    TableSelection,\n    TrustedHTMLHandler,\n} from 'roosterjs-editor-types';\nimport {\n    cacheGetEventData,\n    collapseNodes,\n    contains,\n    ContentTraverser,\n    deleteSelectedContent,\n    getRegionsFromRange,\n    findClosestElementAncestor,\n    getBlockElementAtNode,\n    getSelectionPath,\n    getTagOfNode,\n    isNodeEmpty,\n    Position,\n    PositionContentSearcher,\n    queryElements,\n    wrap,\n    isPositionAtBeginningOf,\n    toArray,\n} from 'roosterjs-editor-dom';\nimport type {\n    CompatibleChangeSource,\n    CompatibleColorTransformDirection,\n    CompatibleContentPosition,\n    CompatibleExperimentalFeatures,\n    CompatibleGetContentMode,\n    CompatiblePluginEventType,\n    CompatibleQueryScope,\n    CompatibleRegionType,\n} from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * Base class of editor\n */\nexport class EditorBase<TEditorCore extends EditorCore, TEditorOptions extends EditorOptions>\n    implements IEditor {\n    private core: TEditorCore | null = null;\n\n    //#region Lifecycle\n\n    /**\n     * Creates an instance of EditorBase\n     * @param contentDiv The DIV HTML element which will be the container element of editor\n     * @param options An optional options object to customize the editor\n     */\n    constructor(\n        contentDiv: HTMLDivElement,\n        options: TEditorOptions,\n        coreCreator: CoreCreator<TEditorCore, TEditorOptions>\n    ) {\n        // 1. Make sure all parameters are valid\n        if (getTagOfNode(contentDiv) != 'DIV') {\n            throw new Error('contentDiv must be an HTML DIV element');\n        }\n\n        // 2. Create editor core\n        this.core = coreCreator(contentDiv, options);\n\n        // 3. Initialize plugins\n        this.core.plugins.forEach(plugin => plugin.initialize(this));\n\n        // 4. Ensure user will type in a container node, not the editor content DIV\n        this.ensureTypeInContainer(\n            new Position(this.core.contentDiv, PositionType.Begin).normalize()\n        );\n    }\n\n    /**\n     * Dispose this editor, dispose all plugins and custom data\n     */\n    public dispose(): void {\n        const core = this.getCore();\n        for (let i = core.plugins.length - 1; i >= 0; i--) {\n            core.plugins[i].dispose();\n        }\n\n        core.darkColorHandler.reset();\n\n        this.core = null;\n    }\n\n    /**\n     * Get whether this editor is disposed\n     * @returns True if editor is disposed, otherwise false\n     */\n    public isDisposed(): boolean {\n        return !this.core;\n    }\n\n    //#endregion\n\n    //#region Node API\n\n    /**\n     * Insert node into editor\n     * @param node The node to insert\n     * @param option Insert options. Default value is:\n     *  position: ContentPosition.SelectionStart\n     *  updateCursor: true\n     *  replaceSelection: true\n     *  insertOnNewLine: false\n     * @returns true if node is inserted. Otherwise false\n     */\n    public insertNode(node: Node, option?: InsertOption): boolean {\n        const core = this.getCore();\n        return node ? core.api.insertNode(core, node, option ?? null) : false;\n    }\n\n    /**\n     * Delete a node from editor content\n     * @param node The node to delete\n     * @returns true if node is deleted. Otherwise false\n     */\n    public deleteNode(node: Node): boolean {\n        // Only remove the node when it falls within editor\n        if (node && this.contains(node) && node.parentNode) {\n            node.parentNode.removeChild(node);\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Replace a node in editor content with another node\n     * @param existingNode The existing node to be replaced\n     * @param toNode node to replace to\n     * @param transformColorForDarkMode (optional) Whether to transform new node to dark mode. Default is false\n     * @returns true if node is replaced. Otherwise false\n     */\n    public replaceNode(\n        existingNode: Node,\n        toNode: Node,\n        transformColorForDarkMode?: boolean\n    ): boolean {\n        const core = this.getCore();\n        // Only replace the node when it falls within editor\n        if (this.contains(existingNode) && toNode) {\n            core.api.transformColor(\n                core,\n                transformColorForDarkMode ? toNode : null,\n                true /*includeSelf*/,\n                () => existingNode.parentNode?.replaceChild(toNode, existingNode),\n                ColorTransformDirection.LightToDark\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Get BlockElement at given node\n     * @param node The node to create InlineElement\n     * @returns The BlockElement result\n     */\n    public getBlockElementAtNode(node: Node): BlockElement | null {\n        return getBlockElementAtNode(this.getCore().contentDiv, node);\n    }\n\n    public contains(arg: Node | Range | null): boolean {\n        if (!arg) {\n            return false;\n        }\n        return contains(this.getCore().contentDiv, <Node>arg);\n    }\n\n    public queryElements(\n        selector: string,\n        scopeOrCallback:\n            | QueryScope\n            | CompatibleQueryScope\n            | ((node: Node) => any) = QueryScope.Body,\n        callback?: (node: Node) => any\n    ) {\n        const core = this.getCore();\n        const result: HTMLElement[] = [];\n        let scope = scopeOrCallback instanceof Function ? QueryScope.Body : scopeOrCallback;\n        callback = scopeOrCallback instanceof Function ? scopeOrCallback : callback;\n\n        let selectionEx = scope == QueryScope.Body ? null : this.getSelectionRangeEx();\n        if (selectionEx) {\n            selectionEx.ranges.forEach(range => {\n                result.push(...queryElements(core.contentDiv, selector, callback, scope, range));\n            });\n        } else {\n            return queryElements(core.contentDiv, selector, callback, scope, undefined /* range */);\n        }\n\n        return result;\n    }\n\n    /**\n     * Collapse nodes within the given start and end nodes to their common ancestor node,\n     * split parent nodes if necessary\n     * @param start The start node\n     * @param end The end node\n     * @param canSplitParent True to allow split parent node there are nodes before start or after end under the same parent\n     * and the returned nodes will be all nodes from start through end after splitting\n     * False to disallow split parent\n     * @returns When canSplitParent is true, returns all node from start through end after splitting,\n     * otherwise just return start and end\n     */\n    public collapseNodes(start: Node, end: Node, canSplitParent: boolean): Node[] {\n        return collapseNodes(this.getCore().contentDiv, start, end, canSplitParent);\n    }\n\n    //#endregion\n\n    //#region Content API\n\n    /**\n     * Check whether the editor contains any visible content\n     * @param trim Whether trim the content string before check. Default is false\n     * @returns True if there's no visible content, otherwise false\n     */\n    public isEmpty(trim?: boolean): boolean {\n        return isNodeEmpty(this.getCore().contentDiv, trim);\n    }\n\n    /**\n     * Get current editor content as HTML string\n     * @param mode specify what kind of HTML content to retrieve\n     * @returns HTML string representing current editor content\n     */\n    public getContent(\n        mode: GetContentMode | CompatibleGetContentMode = GetContentMode.CleanHTML\n    ): string {\n        const core = this.getCore();\n        return core.api.getContent(core, mode);\n    }\n\n    /**\n     * Set HTML content to this editor. All existing content will be replaced. A ContentChanged event will be triggered\n     * @param content HTML content to set in\n     * @param triggerContentChangedEvent True to trigger a ContentChanged event. Default value is true\n     */\n    public setContent(content: string, triggerContentChangedEvent: boolean = true) {\n        const core = this.getCore();\n        core.api.setContent(core, content, triggerContentChangedEvent);\n    }\n\n    /**\n     * Insert HTML content into editor\n     * @param HTML content to insert\n     * @param option Insert options. Default value is:\n     *  position: ContentPosition.SelectionStart\n     *  updateCursor: true\n     *  replaceSelection: true\n     *  insertOnNewLine: false\n     */\n    public insertContent(content: string, option?: InsertOption) {\n        if (content) {\n            const doc = this.getDocument();\n            const body = new DOMParser().parseFromString(\n                this.getCore().trustedHTMLHandler(content),\n                'text/html'\n            )?.body;\n            let allNodes = body?.childNodes ? toArray(body.childNodes) : [];\n\n            // If it is to insert on new line, and there are more than one node in the collection, wrap all nodes with\n            // a parent DIV before calling insertNode on each top level sub node. Otherwise, every sub node may get wrapped\n            // separately to show up on its own line\n            if (option && option.insertOnNewLine && allNodes.length > 1) {\n                allNodes = [wrap(allNodes)];\n            }\n\n            let fragment = doc.createDocumentFragment();\n            allNodes.forEach(node => fragment.appendChild(node));\n\n            this.insertNode(fragment, option);\n        }\n    }\n\n    /**\n     * Delete selected content\n     */\n    public deleteSelectedContent(): NodePosition | null {\n        const range = this.getSelectionRange();\n        if (range && !range.collapsed) {\n            return deleteSelectedContent(this.getCore().contentDiv, range);\n        }\n        return null;\n    }\n\n    /**\n     * Paste into editor using a clipboardData object\n     * @param clipboardData Clipboard data retrieved from clipboard\n     * @param pasteAsText Force pasting as plain text. Default value is false\n     * @param applyCurrentStyle True if apply format of current selection to the pasted content,\n     * false to keep original format.  Default value is false. When pasteAsText is true, this parameter is ignored\n     * @param pasteAsImage: When set to true, if the clipboardData contains a imageDataUri will paste the image to the editor\n     */\n    public paste(\n        clipboardData: ClipboardData,\n        pasteAsText: boolean = false,\n        applyCurrentFormat: boolean = false,\n        pasteAsImage: boolean = false\n    ) {\n        const core = this.getCore();\n        if (!clipboardData) {\n            return;\n        }\n\n        if (clipboardData.snapshotBeforePaste) {\n            // Restore original content before paste a new one\n            this.setContent(clipboardData.snapshotBeforePaste);\n        } else {\n            clipboardData.snapshotBeforePaste = this.getContent(\n                GetContentMode.RawHTMLWithSelection\n            );\n        }\n\n        const range = this.getSelectionRange();\n        const pos = range && Position.getStart(range);\n        const fragment = core.api.createPasteFragment(\n            core,\n            clipboardData,\n            pos,\n            pasteAsText,\n            applyCurrentFormat,\n            pasteAsImage\n        );\n        if (fragment) {\n            this.addUndoSnapshot(() => {\n                this.insertNode(fragment);\n                return clipboardData;\n            }, ChangeSource.Paste);\n        }\n    }\n\n    //#endregion\n\n    //#region Focus and Selection\n\n    /**\n     * Get current selection range from Editor.\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\n     * @param tryGetFromCache Set to true to retrieve the selection range from cache if editor doesn't own the focus now.\n     * Default value is true\n     * @returns current selection range, or null if editor never got focus before\n     */\n    public getSelectionRange(tryGetFromCache: boolean = true): Range | null {\n        const core = this.getCore();\n        return core.api.getSelectionRange(core, tryGetFromCache);\n    }\n\n    /**\n     * Get current selection range from Editor.\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\n     * @param tryGetFromCache Set to true to retrieve the selection range from cache if editor doesn't own the focus now.\n     * Default value is true\n     * @returns current selection range, or null if editor never got focus before\n     */\n    public getSelectionRangeEx(): SelectionRangeEx {\n        const core = this.getCore();\n        return core.api.getSelectionRangeEx(core);\n    }\n\n    /**\n     * Get current selection in a serializable format\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\n     * @returns current selection path, or null if editor never got focus before\n     */\n    public getSelectionPath(): SelectionPath | null {\n        const range = this.getSelectionRange();\n        return range && getSelectionPath(this.getCore().contentDiv, range);\n    }\n\n    /**\n     * Check if focus is in editor now\n     * @returns true if focus is in editor, otherwise false\n     */\n    public hasFocus(): boolean {\n        const core = this.getCore();\n        return core.api.hasFocus(core);\n    }\n\n    /**\n     * Focus to this editor, the selection was restored to where it was before, no unexpected scroll.\n     */\n    public focus() {\n        const core = this.getCore();\n        core.api.focus(core);\n    }\n\n    public select(\n        arg1: Range | SelectionRangeEx | NodePosition | Node | SelectionPath | null,\n        arg2?: NodePosition | number | PositionType | TableSelection | null,\n        arg3?: Node,\n        arg4?: number | PositionType\n    ): boolean {\n        const core = this.getCore();\n\n        return core.api.select(core, arg1, arg2, arg3, arg4);\n    }\n\n    /**\n     * Get current focused position. Return null if editor doesn't have focus at this time.\n     */\n    public getFocusedPosition(): NodePosition | null {\n        let sel = this.getDocument().defaultView?.getSelection();\n        if (sel?.focusNode && this.contains(sel.focusNode)) {\n            return new Position(sel.focusNode, sel.focusOffset);\n        }\n\n        let range = this.getSelectionRange();\n        if (range) {\n            return Position.getStart(range);\n        }\n\n        return null;\n    }\n\n    /**\n     * Get an HTML element from current cursor position.\n     * When expectedTags is not specified, return value is the current node (if it is HTML element)\n     * or its parent node (if current node is a Text node).\n     * When expectedTags is specified, return value is the first ancestor of current node which has\n     * one of the expected tags.\n     * If no element found within editor by the given tag, return null.\n     * @param selector Optional, an HTML selector to find HTML element with.\n     * @param startFrom Start search from this node. If not specified, start from current focused position\n     * @param event Optional, if specified, editor will try to get cached result from the event object first.\n     * If it is not cached before, query from DOM and cache the result into the event object\n     */\n    public getElementAtCursor(\n        selector?: string,\n        startFrom?: Node,\n        event?: PluginEvent\n    ): HTMLElement | null {\n        event = startFrom ? undefined : event; // Only use cache when startFrom is not specified, for different start position can have different result\n\n        return (\n            cacheGetEventData(event ?? null, 'GET_ELEMENT_AT_CURSOR_' + selector, () => {\n                if (!startFrom) {\n                    let position = this.getFocusedPosition();\n                    startFrom = position?.node;\n                }\n                return (\n                    startFrom &&\n                    findClosestElementAncestor(startFrom, this.getCore().contentDiv, selector)\n                );\n            }) ?? null\n        );\n    }\n\n    /**\n     * Check if this position is at beginning of the editor.\n     * This will return true if all nodes between the beginning of target node and the position are empty.\n     * @param position The position to check\n     * @returns True if position is at beginning of the editor, otherwise false\n     */\n    public isPositionAtBeginning(position: NodePosition): boolean {\n        return isPositionAtBeginningOf(position, this.getCore().contentDiv);\n    }\n\n    /**\n     * Get impacted regions from selection\n     */\n    public getSelectedRegions(\n        type: RegionType | CompatibleRegionType = RegionType.Table\n    ): Region[] {\n        const selection = this.getSelectionRangeEx();\n        const result: Region[] = [];\n        const contentDiv = this.getCore().contentDiv;\n        selection.ranges.forEach(range => {\n            result.push(...(range ? getRegionsFromRange(contentDiv, range, type) : []));\n        });\n        return result.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        });\n    }\n\n    //#endregion\n\n    //#region EVENT API\n\n    public addDomEventHandler(\n        nameOrMap: string | Record<string, DOMEventHandler>,\n        handler?: DOMEventHandler\n    ): () => void {\n        const eventsToMap = typeof nameOrMap == 'string' ? { [nameOrMap]: handler! } : nameOrMap;\n        const core = this.getCore();\n        return core.api.attachDomEvent(core, eventsToMap);\n    }\n\n    /**\n     * Trigger an event to be dispatched to all plugins\n     * @param eventType Type of the event\n     * @param data data of the event with given type, this is the rest part of PluginEvent with the given type\n     * @param broadcast indicates if the event needs to be dispatched to all plugins\n     * True means to all, false means to allow exclusive handling from one plugin unless no one wants that\n     * @returns the event object which is really passed into plugins. Some plugin may modify the event object so\n     * the result of this function provides a chance to read the modified result\n     */\n    public triggerPluginEvent<T extends PluginEventType | CompatiblePluginEventType>(\n        eventType: T,\n        data: PluginEventData<T>,\n        broadcast: boolean = false\n    ): PluginEventFromType<T> {\n        const core = this.getCore();\n        let event = ({\n            eventType,\n            ...data,\n        } as any) as PluginEventFromType<T>;\n        core.api.triggerEvent(core, event, broadcast);\n\n        return event;\n    }\n\n    /**\n     * Trigger a ContentChangedEvent\n     * @param source Source of this event, by default is 'SetContent'\n     * @param data additional data for this event\n     */\n    public triggerContentChangedEvent(\n        source: ChangeSource | CompatibleChangeSource | string = ChangeSource.SetContent,\n        data?: any\n    ) {\n        this.triggerPluginEvent(PluginEventType.ContentChanged, {\n            source,\n            data,\n        });\n    }\n\n    //#endregion\n\n    //#region Undo API\n\n    /**\n     * Undo last edit operation\n     */\n    public undo() {\n        this.focus();\n        const core = this.getCore();\n        core.api.restoreUndoSnapshot(core, -1 /*step*/);\n    }\n\n    /**\n     * Redo next edit operation\n     */\n    public redo() {\n        this.focus();\n        const core = this.getCore();\n        core.api.restoreUndoSnapshot(core, 1 /*step*/);\n    }\n\n    /**\n     * Add undo snapshot, and execute a format callback function, then add another undo snapshot, then trigger\n     * ContentChangedEvent with given change source.\n     * If this function is called nested, undo snapshot will only be added in the outside one\n     * @param callback The callback function to perform formatting, returns a data object which will be used as\n     * the data field in ContentChangedEvent if changeSource is not null.\n     * @param changeSource The change source to use when fire ContentChangedEvent. When the value is not null,\n     * a ContentChangedEvent will be fired with change source equal to this value\n     * @param canUndoByBackspace True if this action can be undone when user press Backspace key (aka Auto Complete).\n     */\n    public addUndoSnapshot(\n        callback?: (start: NodePosition | null, end: NodePosition | null) => any,\n        changeSource?: ChangeSource | CompatibleChangeSource | string,\n        canUndoByBackspace?: boolean,\n        additionalData?: ContentChangedData\n    ) {\n        const core = this.getCore();\n        core.api.addUndoSnapshot(\n            core,\n            callback ?? null,\n            changeSource ?? null,\n            canUndoByBackspace ?? false,\n            additionalData\n        );\n    }\n\n    /**\n     * Whether there is an available undo/redo snapshot\n     */\n    public getUndoState(): EditorUndoState {\n        const { hasNewContent, snapshotsService } = this.getCore().undo;\n        return {\n            canUndo: hasNewContent || snapshotsService.canMove(-1 /*previousSnapshot*/),\n            canRedo: snapshotsService.canMove(1 /*nextSnapshot*/),\n        };\n    }\n\n    //#endregion\n\n    //#region Misc\n\n    /**\n     * Get document which contains this editor\n     * @returns The HTML document which contains this editor\n     */\n    public getDocument(): Document {\n        return this.getCore().contentDiv.ownerDocument;\n    }\n\n    /**\n     * Get the scroll container of the editor\n     */\n    public getScrollContainer(): HTMLElement {\n        return this.getCore().domEvent.scrollContainer;\n    }\n\n    /**\n     * Get custom data related to this editor\n     * @param key Key of the custom data\n     * @param getter Getter function. If custom data for the given key doesn't exist,\n     * call this function to get one and store it if it is specified. Otherwise return undefined\n     * @param disposer An optional disposer function to dispose this custom data when\n     * dispose editor.\n     */\n    public getCustomData<T>(key: string, getter?: () => T, disposer?: (value: T) => void): T {\n        const core = this.getCore();\n        return (core.lifecycle.customData[key] = core.lifecycle.customData[key] || {\n            value: getter ? getter() : undefined,\n            disposer,\n        }).value as T;\n    }\n\n    /**\n     * Check if editor is in IME input sequence\n     * @returns True if editor is in IME input sequence, otherwise false\n     */\n    public isInIME(): boolean {\n        return this.getCore().domEvent.isInIME;\n    }\n\n    /**\n     * Get default format of this editor\n     * @returns Default format object of this editor\n     */\n    public getDefaultFormat(): DefaultFormat {\n        return this.getCore().lifecycle.defaultFormat ?? {};\n    }\n\n    /**\n     * Get a content traverser for the whole editor\n     * @param startNode The node to start from. If not passed, it will start from the beginning of the body\n     */\n    public getBodyTraverser(startNode?: Node): IContentTraverser {\n        return ContentTraverser.createBodyTraverser(this.getCore().contentDiv, startNode);\n    }\n\n    /**\n     * Get a content traverser for current selection\n     * @returns A content traverser, or null if editor never got focus before\n     */\n    public getSelectionTraverser(range?: Range): IContentTraverser | null {\n        range = range ?? this.getSelectionRange() ?? undefined;\n        return range\n            ? ContentTraverser.createSelectionTraverser(this.getCore().contentDiv, range)\n            : null;\n    }\n\n    /**\n     * Get a content traverser for current block element start from specified position\n     * @param startFrom Start position of the traverser. Default value is ContentPosition.SelectionStart\n     * @returns A content traverser, or null if editor never got focus before\n     */\n    public getBlockTraverser(\n        startFrom: ContentPosition | CompatibleContentPosition = ContentPosition.SelectionStart\n    ): IContentTraverser | null {\n        let range = this.getSelectionRange();\n        return range\n            ? ContentTraverser.createBlockTraverser(this.getCore().contentDiv, range, startFrom)\n            : null;\n    }\n\n    /**\n     * Get a text traverser of current selection\n     * @param event Optional, if specified, editor will try to get cached result from the event object first.\n     * If it is not cached before, query from DOM and cache the result into the event object\n     * @returns A content traverser, or null if editor never got focus before\n     */\n    public getContentSearcherOfCursor(event?: PluginEvent): IPositionContentSearcher | null {\n        return cacheGetEventData(event ?? null, 'ContentSearcher', () => {\n            let range = this.getSelectionRange();\n            return (\n                range &&\n                new PositionContentSearcher(this.getCore().contentDiv, Position.getStart(range))\n            );\n        });\n    }\n\n    /**\n     * Run a callback function asynchronously\n     * @param callback The callback function to run\n     * @returns a function to cancel this async run\n     */\n    public runAsync(callback: (editor: IEditor) => void) {\n        let win = this.getCore().contentDiv.ownerDocument.defaultView || window;\n        const handle = win.requestAnimationFrame(() => {\n            if (!this.isDisposed() && callback) {\n                callback(this);\n            }\n        });\n\n        return () => {\n            win.cancelAnimationFrame(handle);\n        };\n    }\n\n    /**\n     * Set DOM attribute of editor content DIV\n     * @param name Name of the attribute\n     * @param value Value of the attribute\n     */\n    public setEditorDomAttribute(name: string, value: string | null) {\n        if (value === null) {\n            this.getCore().contentDiv.removeAttribute(name);\n        } else {\n            this.getCore().contentDiv.setAttribute(name, value);\n        }\n    }\n\n    /**\n     * Get DOM attribute of editor content DIV, null if there is no such attribute.\n     * @param name Name of the attribute\n     */\n    public getEditorDomAttribute(name: string): string | null {\n        return this.getCore().contentDiv.getAttribute(name);\n    }\n\n    /**\n     * @deprecated Use getVisibleViewport() instead.\n     *\n     * Get current relative distance from top-left corner of the given element to top-left corner of editor content DIV.\n     * @param element The element to calculate from. If the given element is not in editor, return value will be null\n     * @param addScroll When pass true, The return value will also add scrollLeft and scrollTop if any. So the value\n     * may be different than what user is seeing from the view. When pass false, scroll position will be ignored.\n     * @returns An [x, y] array which contains the left and top distances, or null if the given element is not in editor.\n     */\n    getRelativeDistanceToEditor(element: HTMLElement, addScroll?: boolean): number[] | null {\n        if (this.contains(element)) {\n            const contentDiv = this.getCore().contentDiv;\n            const editorRect = contentDiv.getBoundingClientRect();\n            const elementRect = element.getBoundingClientRect();\n\n            if (editorRect && elementRect) {\n                let x = elementRect.left - editorRect?.left;\n                let y = elementRect.top - editorRect?.top;\n\n                if (addScroll) {\n                    x += contentDiv.scrollLeft;\n                    y += contentDiv.scrollTop;\n                }\n\n                return [x, y];\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Add a Content Edit feature.\n     * @param feature The feature to add\n     */\n    public addContentEditFeature(feature: GenericContentEditFeature<PluginEvent>) {\n        const core = this.getCore();\n        feature?.keys.forEach(key => {\n            let array = core.edit.features[key] || [];\n            array.push(feature);\n            core.edit.features[key] = array;\n        });\n    }\n\n    /**\n     * Remove a Content Edit feature.\n     * @param feature The feature to remove\n     */\n    public removeContentEditFeature(feature: GenericContentEditFeature<PluginEvent>) {\n        const core = this.getCore();\n        feature?.keys.forEach(key => {\n            const featureSet = core.edit.features[key];\n            const index = featureSet?.indexOf(feature) ?? -1;\n            if (index >= 0) {\n                core.edit.features[key].splice(index, 1);\n                if (core.edit.features[key].length < 1) {\n                    delete core.edit.features[key];\n                }\n            }\n        });\n    }\n\n    /**\n     * Get style based format state from current selection, including font name/size and colors\n     */\n    public getStyleBasedFormatState(node?: Node): StyleBasedFormatState {\n        if (!node) {\n            const range = this.getSelectionRange();\n            node = (range && Position.getStart(range).normalize().node) ?? undefined;\n        }\n        const core = this.getCore();\n        return core.api.getStyleBasedFormatState(core, node ?? null);\n    }\n\n    /**\n     * Get the pendable format such as underline and bold\n     * @param forceGetStateFromDOM If set to true, will force get the format state from DOM tree.\n     * @returns The pending format state\n     */\n    public getPendableFormatState(forceGetStateFromDOM: boolean = false): PendableFormatState {\n        const core = this.getCore();\n        return core.api.getPendableFormatState(core, forceGetStateFromDOM);\n    }\n\n    /**\n     * Ensure user will type into a container element rather than into the editor content DIV directly\n     * @param position The position that user is about to type to\n     * @param keyboardEvent Optional keyboard event object\n     */\n    public ensureTypeInContainer(position: NodePosition, keyboardEvent?: KeyboardEvent) {\n        const core = this.getCore();\n        core.api.ensureTypeInContainer(core, position, keyboardEvent);\n    }\n\n    //#endregion\n\n    //#region Dark mode APIs\n\n    /**\n     * Set the dark mode state and transforms the content to match the new state.\n     * @param nextDarkMode The next status of dark mode. True if the editor should be in dark mode, false if not.\n     */\n    public setDarkModeState(nextDarkMode?: boolean) {\n        const isDarkMode = this.isDarkMode();\n\n        if (isDarkMode == !!nextDarkMode) {\n            return;\n        }\n        const core = this.getCore();\n\n        core.api.transformColor(\n            core,\n            core.contentDiv,\n            false /*includeSelf*/,\n            null /*callback*/,\n            nextDarkMode\n                ? ColorTransformDirection.LightToDark\n                : ColorTransformDirection.DarkToLight,\n            true /*forceTransform*/,\n            isDarkMode\n        );\n\n        this.triggerContentChangedEvent(\n            nextDarkMode ? ChangeSource.SwitchToDarkMode : ChangeSource.SwitchToLightMode\n        );\n    }\n\n    /**\n     * Check if the editor is in dark mode\n     * @returns True if the editor is in dark mode, otherwise false\n     */\n    public isDarkMode(): boolean {\n        return this.getCore().lifecycle.isDarkMode;\n    }\n\n    /**\n     * Transform the given node and all its child nodes to dark mode color if editor is in dark mode\n     * @param node The node to transform\n     * @param direction The transform direction. @default ColorTransformDirection.LightToDark\n     */\n    public transformToDarkColor(\n        node: Node,\n        direction:\n            | ColorTransformDirection\n            | CompatibleColorTransformDirection = ColorTransformDirection.LightToDark\n    ) {\n        const core = this.getCore();\n        core.api.transformColor(core, node, true /*includeSelf*/, null /*callback*/, direction);\n    }\n\n    /**\n     * Get a darkColorHandler object for this editor.\n     */\n    public getDarkColorHandler(): DarkColorHandler {\n        return this.getCore().darkColorHandler;\n    }\n\n    /**\n     * Make the editor in \"Shadow Edit\" mode.\n     * In Shadow Edit mode, all format change will finally be ignored.\n     * This can be used for building a live preview feature for format button, to allow user\n     * see format result without really apply it.\n     * This function can be called repeated. If editor is already in shadow edit mode, we can still\n     * use this function to do more shadow edit operation.\n     */\n    public startShadowEdit() {\n        const core = this.getCore();\n        core.api.switchShadowEdit(core, true /*isOn*/);\n    }\n\n    /**\n     * Leave \"Shadow Edit\" mode, all changes made during shadow edit will be discarded\n     */\n    public stopShadowEdit() {\n        const core = this.getCore();\n        core.api.switchShadowEdit(core, false /*isOn*/);\n    }\n\n    /**\n     * Check if editor is in Shadow Edit mode\n     */\n    public isInShadowEdit() {\n        return !!this.getCore().lifecycle.shadowEditFragment;\n    }\n\n    /**\n     * Check if the given experimental feature is enabled\n     * @param feature The feature to check\n     */\n    public isFeatureEnabled(\n        feature: ExperimentalFeatures | CompatibleExperimentalFeatures\n    ): boolean {\n        return isFeatureEnabled(this.getCore().lifecycle.experimentalFeatures, feature);\n    }\n\n    /**\n     * Get a function to convert HTML string to trusted HTML string.\n     * By default it will just return the input HTML directly. To override this behavior,\n     * pass your own trusted HTML handler to EditorOptions.trustedHTMLHandler\n     * See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types\n     */\n    getTrustedHTMLHandler(): TrustedHTMLHandler {\n        return this.getCore().trustedHTMLHandler;\n    }\n\n    /**\n     * @deprecated Use getZoomScale() instead\n     */\n    getSizeTransformer(): SizeTransformer {\n        return this.getCore().sizeTransformer;\n    }\n\n    /**\n     * Get current zoom scale, default value is 1\n     * When editor is put under a zoomed container, need to pass the zoom scale number using EditorOptions.zoomScale\n     * to let editor behave correctly especially for those mouse drag/drop behaviors\n     * @returns current zoom scale number\n     */\n    getZoomScale(): number {\n        return this.getCore().zoomScale;\n    }\n\n    /**\n     * Set current zoom scale, default value is 1\n     * When editor is put under a zoomed container, need to pass the zoom scale number using EditorOptions.zoomScale\n     * to let editor behave correctly especially for those mouse drag/drop behaviors\n     * @param scale The new scale number to set. It should be positive number and no greater than 10, otherwise it will be ignored.\n     */\n    setZoomScale(scale: number): void {\n        const core = this.getCore();\n        if (scale > 0 && scale <= 10) {\n            const oldValue = core.zoomScale;\n            core.zoomScale = scale;\n\n            if (oldValue != scale) {\n                this.triggerPluginEvent(\n                    PluginEventType.ZoomChanged,\n                    {\n                        oldZoomScale: oldValue,\n                        newZoomScale: scale,\n                    },\n                    true /*broadcast*/\n                );\n            }\n        }\n    }\n\n    /**\n     * Retrieves the rect of the visible viewport of the editor.\n     */\n    getVisibleViewport(): Rect | null {\n        return this.getCore().getVisibleViewport();\n    }\n\n    /**\n     * @returns the current EditorCore object\n     * @throws a standard Error if there's no core object\n     */\n    protected getCore(): TEditorCore {\n        if (!this.core) {\n            throw new Error('Editor is already disposed');\n        }\n        return this.core;\n    }\n\n    //#endregion\n}\n","import createCorePlugins, { getPluginState } from '../corePlugins/createCorePlugins';\nimport DarkColorHandlerImpl from './DarkColorHandlerImpl';\nimport { arrayPush, getIntersectedRect, getObjectKeys } from 'roosterjs-editor-dom';\nimport { coreApiMap } from '../coreApi/coreApiMap';\nimport type { CoreCreator, EditorCore, EditorOptions, EditorPlugin } from 'roosterjs-editor-types';\n\n/**\n * Create a new instance of Editor Core\n * @param contentDiv The DIV HTML element which will be the container element of editor\n * @param options An optional options object to customize the editor\n */\nexport const createEditorCore: CoreCreator<EditorCore, EditorOptions> = (contentDiv, options) => {\n    const corePlugins = createCorePlugins(contentDiv, options);\n    const plugins: EditorPlugin[] = [];\n\n    getObjectKeys(corePlugins).forEach(name => {\n        if (name == '_placeholder') {\n            if (options.plugins) {\n                arrayPush(plugins, options.plugins);\n            }\n        } else {\n            plugins.push(corePlugins[name]);\n        }\n    });\n\n    const pluginState = getPluginState(corePlugins);\n    const zoomScale: number = (options.zoomScale ?? -1) > 0 ? options.zoomScale! : 1;\n    const getVisibleViewport =\n        options.getVisibleViewport ||\n        (() => {\n            const scrollContainer = pluginState.domEvent.scrollContainer;\n\n            return getIntersectedRect(\n                scrollContainer == core.contentDiv\n                    ? [scrollContainer]\n                    : [scrollContainer, core.contentDiv]\n            );\n        });\n\n    const core: EditorCore = {\n        contentDiv,\n        api: {\n            ...coreApiMap,\n            ...(options.coreApiOverride || {}),\n        },\n        originalApi: coreApiMap,\n        plugins: plugins.filter(x => !!x),\n        ...pluginState,\n        trustedHTMLHandler: options.trustedHTMLHandler || ((html: string) => html),\n        zoomScale: zoomScale,\n        sizeTransformer: options.sizeTransformer || ((size: number) => size / zoomScale),\n        getVisibleViewport,\n        imageSelectionBorderColor: options.imageSelectionBorderColor,\n        darkColorHandler: new DarkColorHandlerImpl(contentDiv, pluginState.lifecycle.getDarkColor),\n    };\n\n    return core;\n};\n","import type { ExperimentalFeatures } from 'roosterjs-editor-types';\nimport type { CompatibleExperimentalFeatures } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * Check if the given experimental feature is enabled\n * @param featureSet All enabled features\n * @param feature The feature to check\n * @returns True if the given feature is enabled, otherwise false\n */\nexport function isFeatureEnabled(\n    featureSet: (ExperimentalFeatures | CompatibleExperimentalFeatures)[] | undefined,\n    feature: ExperimentalFeatures | CompatibleExperimentalFeatures\n) {\n    return (featureSet || []).indexOf(feature) >= 0;\n}\n","// Classes\r\nexport { default as Editor } from './editor/Editor';\r\nexport { EditorBase } from './editor/EditorBase';\r\nexport { isFeatureEnabled } from './editor/isFeatureEnabled';\r\nexport { createEditorCore } from './editor/createEditorCore';\r\n","import contains from '../utils/contains';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport type { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * This presents a content block that can be represented by a single html block type element.\r\n * In most cases, it corresponds to an HTML block level element, i.e. P, DIV, LI, TD etc.\r\n */\r\nexport default class NodeBlockElement implements BlockElement {\r\n    constructor(private element: HTMLElement) {}\r\n\r\n    /**\r\n     * Collapse this element to a single DOM element.\r\n     * If the content nodes are separated in different root nodes, wrap them to a single node\r\n     * If the content nodes are included in root node with other nodes, split root node\r\n     */\r\n    public collapseToSingleElement(): HTMLElement {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Get the start node of the block\r\n     * For NodeBlockElement, start and end essentially refers to same node\r\n     */\r\n    public getStartNode(): Node {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Get the end node of the block\r\n     * For NodeBlockElement, start and end essentially refers to same node\r\n     */\r\n    public getEndNode(): Node {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Checks if it refers to same block\r\n     */\r\n    public equals(blockElement: BlockElement): boolean {\r\n        // Ideally there is only one unique way to generate a block so we only need to compare the startNode\r\n        return this.element == blockElement.getStartNode();\r\n    }\r\n\r\n    /**\r\n     * Checks if a block is after the current block\r\n     */\r\n    public isAfter(blockElement: BlockElement): boolean {\r\n        // if the block's startNode is after current node endEnd, we say it is after\r\n        return isNodeAfter(this.element, blockElement.getEndNode());\r\n    }\r\n\r\n    /**\r\n     * Checks if a certain html node is within the block\r\n     */\r\n    public contains(node: Node): boolean {\r\n        return contains(this.element, node, true /*treatSameNodeAsContain*/);\r\n    }\r\n\r\n    /**\r\n     * Get the text content of this block element\r\n     */\r\n    public getTextContent(): string {\r\n        return this.element?.textContent || '';\r\n    }\r\n}\r\n","import collapseNodes from '../utils/collapseNodes';\r\nimport contains from '../utils/contains';\r\nimport createRange from '../selection/createRange';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport isBlockElement from '../utils/isBlockElement';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport wrap from '../utils/wrap';\r\nimport { splitBalancedNodeRange } from '../utils/splitParentNode';\r\nimport type { BlockElement } from 'roosterjs-editor-types';\r\n\r\nconst STRUCTURE_NODE_TAGS = ['TD', 'TH', 'LI', 'BLOCKQUOTE'];\r\n\r\n/**\r\n * @internal\r\n * This represents a block that is identified by a start and end node\r\n * This is for cases like &lt;root&gt;Hello&lt;BR&gt;World&lt;/root&gt;\r\n * in that case, Hello&lt;BR&gt; is a block, World is another block\r\n * Such block cannot be represented by a NodeBlockElement since they don't chained up\r\n * to a single parent node, instead they have a start and end\r\n * This start and end must be in same sibling level and have same parent in DOM tree\r\n */\r\nexport default class StartEndBlockElement implements BlockElement {\r\n    constructor(private rootNode: Node, private startNode: Node, private endNode: Node) {}\r\n\r\n    static getBlockContext(node: Node): HTMLElement | null {\r\n        let currentNode: Node | null = node;\r\n        while (currentNode && !isBlockElement(currentNode)) {\r\n            currentNode = currentNode.parentNode;\r\n        }\r\n        return currentNode as HTMLElement;\r\n    }\r\n\r\n    /**\r\n     * Collapse this element to a single DOM element.\r\n     * If the content nodes are separated in different root nodes, wrap them to a single node\r\n     * If the content nodes are included in root node with other nodes, split root node\r\n     */\r\n    public collapseToSingleElement(): HTMLElement {\r\n        const nodeContext = StartEndBlockElement.getBlockContext(this.startNode);\r\n        let nodes = nodeContext\r\n            ? collapseNodes(nodeContext, this.startNode, this.endNode, true /*canSplitParent*/)\r\n            : [];\r\n        let blockContext = StartEndBlockElement.getBlockContext(this.startNode);\r\n        while (\r\n            nodes[0] &&\r\n            nodes[0] != blockContext &&\r\n            nodes[0].parentNode != this.rootNode &&\r\n            STRUCTURE_NODE_TAGS.indexOf(getTagOfNode(nodes[0].parentNode)) < 0\r\n        ) {\r\n            const newNode = splitBalancedNodeRange(nodes);\r\n            if (newNode) {\r\n                nodes = [newNode];\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return nodes.length == 1 && isBlockElement(nodes[0])\r\n            ? (nodes[0] as HTMLElement)\r\n            : wrap(nodes);\r\n    }\r\n\r\n    /**\r\n     * Gets the start node\r\n     */\r\n    public getStartNode(): Node {\r\n        return this.startNode;\r\n    }\r\n\r\n    /**\r\n     * Gets the end node\r\n     */\r\n    public getEndNode(): Node {\r\n        return this.endNode;\r\n    }\r\n\r\n    /**\r\n     * Checks equals of two blocks\r\n     */\r\n    public equals(blockElement: BlockElement): boolean {\r\n        return (\r\n            this.startNode == blockElement.getStartNode() &&\r\n            this.endNode == blockElement.getEndNode()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if another block is after this current\r\n     */\r\n    public isAfter(blockElement: BlockElement): boolean {\r\n        return isNodeAfter(this.getStartNode(), blockElement.getEndNode());\r\n    }\r\n\r\n    /**\r\n     * Checks if an Html node is contained within the block\r\n     */\r\n    public contains(node: Node): boolean {\r\n        return (\r\n            contains(this.startNode, node, true /*treatSameNodeAsContain*/) ||\r\n            contains(this.endNode, node, true /*treatSameNodeAsContain*/) ||\r\n            (isNodeAfter(node, this.startNode) && isNodeAfter(this.endNode, node))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get the text content of this block element\r\n     */\r\n    public getTextContent(): string {\r\n        const range = createRange(this.getStartNode(), this.getEndNode());\r\n        return range ? range.toString() : '';\r\n    }\r\n}\r\n","import collapseNodes from '../utils/collapseNodes';\r\nimport contains from '../utils/contains';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport isBlockElement from '../utils/isBlockElement';\r\nimport NodeBlockElement from './NodeBlockElement';\r\nimport StartEndBlockElement from './StartEndBlockElement';\r\nimport type { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This produces a block element from a a node\r\n * It needs to account for various HTML structure. Examples:\r\n * 1) &lt;root&gt;&lt;div&gt;abc&lt;/div&gt;&lt;/root&gt;\r\n *   This is most common the case, user passes in a node pointing to abc, and get back a block representing &lt;div&gt;abc&lt;/div&gt;\r\n * 2) &lt;root&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/root&gt;\r\n *   Common content for empty block, user passes node pointing to &lt;br&gt;, and get back a block representing &lt;p&gt;&lt;br&gt;&lt;/p&gt;\r\n * 3) &lt;root&gt;abc&lt;/root&gt;\r\n *   Not common, but does happen. It is still a block in user's view. User passes in abc, and get back a start-end block representing abc\r\n *   NOTE: abc could be just one node. However, since it is not a html block, it is more appropriate to use start-end block although they point to same node\r\n * 4) &lt;root&gt;&lt;div&gt;abc&lt;br&gt;123&lt;/div&gt;&lt;/root&gt;\r\n *   A bit tricky, but can happen when user use Ctrl+Enter which simply inserts a &lt;BR&gt; to create a link break. There're two blocks:\r\n *   block1: 1) abc&lt;br&gt; block2: 123\r\n * 5) &lt;root&gt;&lt;div&gt;abc&lt;div&gt;123&lt;/div&gt;&lt;/div&gt;&lt;/root&gt;\r\n *   Nesting div and there is text node in same level as a DIV. Two blocks: 1) abc 2) &lt;div&gt;123&lt;/div&gt;\r\n * 6) &lt;root&gt;&lt;div&gt;abc&lt;span&gt;123&lt;br&gt;456&lt;/span&gt;&lt;/div&gt;&lt;/root&gt;\r\n *   This is really tricky. Essentially there is a &lt;BR&gt; in middle of a span breaking the span into two blocks;\r\n *   block1: abc&lt;span&gt;123&lt;br&gt; block2: 456\r\n * In summary, given any arbitrary node (leaf), to identify the head and tail of the block, following rules need to be followed:\r\n * 1) to identify the head, it needs to crawl DOM tre left/up till a block node or BR is encountered\r\n * 2) same for identifying tail\r\n * 3) should also apply a block ceiling, meaning as it crawls up, it should stop at a block node\r\n * @param rootNode Root node of the scope, the block element will be inside of this node\r\n * @param node The node to get BlockElement start from\r\n */\r\nexport default function getBlockElementAtNode(\r\n    rootNode: Node,\r\n    node: Node | null\r\n): BlockElement | null {\r\n    if (!contains(rootNode, node)) {\r\n        return null;\r\n    }\r\n\r\n    // Identify the containing block. This serves as ceiling for traversing down below\r\n    // NOTE: this container block could be just the rootNode,\r\n    // which cannot be used to create block element. We will special case handle it later on\r\n    let containerBlockNode = StartEndBlockElement.getBlockContext(node!);\r\n    if (!containerBlockNode) {\r\n        return null;\r\n    } else if (containerBlockNode == node) {\r\n        return new NodeBlockElement(containerBlockNode);\r\n    }\r\n\r\n    // Find the head and leaf node in the block\r\n    let headNode = findHeadTailLeafNode(node!, containerBlockNode, false /*isTail*/);\r\n    let tailNode = findHeadTailLeafNode(node!, containerBlockNode, true /*isTail*/);\r\n\r\n    if (!headNode || !tailNode) {\r\n        return null;\r\n    }\r\n\r\n    // At this point, we have the head and tail of a block, here are some examples and where head and tail point to\r\n    // 1) &lt;root&gt;&lt;div&gt;hello&lt;br&gt;&lt;/div&gt;&lt;/root&gt;, head: hello, tail: &lt;br&gt;\r\n    // 2) &lt;root&gt;&lt;div&gt;hello&lt;span style=\"font-family: Arial\"&gt;world&lt;/span&gt;&lt;/div&gt;&lt;/root&gt;, head: hello, tail: world\r\n    // Both are actually completely and exclusively wrapped in a parent div, and can be represented with a Node block\r\n    // So we shall try to collapse as much as we can to the nearest common ancestor\r\n    let nodes = collapseNodes(rootNode, headNode, tailNode, false /*canSplitParent*/);\r\n\r\n    if (nodes.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    headNode = nodes[0];\r\n    tailNode = nodes[nodes.length - 1];\r\n\r\n    if (headNode.parentNode != tailNode.parentNode) {\r\n        // Un-Balanced start and end, create a start-end block\r\n        return new StartEndBlockElement(rootNode, headNode, tailNode);\r\n    } else {\r\n        // Balanced start and end (point to same parent), need to see if further collapsing can be done\r\n        while (!headNode.previousSibling && !tailNode.nextSibling) {\r\n            let parentNode = headNode.parentNode;\r\n            if (parentNode == containerBlockNode) {\r\n                // Has reached the container block\r\n                if (containerBlockNode != rootNode) {\r\n                    // If the container block is not the root, use the container block\r\n                    headNode = tailNode = parentNode;\r\n                }\r\n                break;\r\n            } else if (parentNode && parentNode != rootNode) {\r\n                // Continue collapsing to parent\r\n                headNode = tailNode = parentNode;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If head and tail are same and it is a block element, create NodeBlock, otherwise start-end block\r\n        return headNode == tailNode && isBlockElement(headNode)\r\n            ? new NodeBlockElement(headNode as HTMLElement)\r\n            : new StartEndBlockElement(rootNode, headNode, tailNode);\r\n    }\r\n}\r\n\r\n/**\r\n * Given a node and container block, identify the first/last leaf node\r\n * A leaf node is defined as deepest first/last node in a block\r\n * i.e. &lt;div&gt;&lt;span style=\"font-family: Arial\"&gt;abc&lt;/span&gt;&lt;/div&gt;, abc is the head leaf of the block\r\n * Often &lt;br&gt; or a child &lt;div&gt; is used to create a block. In that case, the leaf after the sibling div or br should be the head leaf\r\n * i.e. &lt;div&gt;123&lt;br&gt;abc&lt;/div&gt;, abc is the head of a block because of a previous sibling &lt;br&gt;\r\n * i.e. &lt;div&gt;&lt;div&gt;123&lt;/div&gt;abc&lt;/div&gt;, abc is also the head of a block because of a previous sibling &lt;div&gt;\r\n */\r\nfunction findHeadTailLeafNode(node: Node, containerBlockNode: Node, isTail: boolean): Node {\r\n    let result = node;\r\n\r\n    if (getTagOfNode(result) == 'BR' && isTail) {\r\n        return result;\r\n    }\r\n\r\n    while (result) {\r\n        let sibling: Node | null = node;\r\n        while (node.parentNode && !(sibling = isTail ? node.nextSibling : node.previousSibling)) {\r\n            node = node.parentNode;\r\n            if (node == containerBlockNode) {\r\n                return result;\r\n            }\r\n        }\r\n\r\n        while (sibling) {\r\n            if (isBlockElement(sibling)) {\r\n                return result;\r\n            } else if (getTagOfNode(sibling) == 'BR') {\r\n                return isTail ? sibling : result;\r\n            }\r\n\r\n            node = sibling;\r\n            sibling = isTail ? node.firstChild : node.lastChild;\r\n        }\r\n\r\n        result = node;\r\n    }\r\n    return result;\r\n}\r\n","import getBlockElementAtNode from './getBlockElementAtNode';\r\nimport type { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get the first/last BlockElement of under the root node.\r\n * If no suitable BlockElement found, returns null\r\n * @param rootNode The root node to get BlockElement from\r\n * @param isFirst True to get first BlockElement, false to get last BlockElement\r\n */\r\nexport default function getFirstLastBlockElement(\r\n    rootNode: Node,\r\n    isFirst: boolean\r\n): BlockElement | null {\r\n    let node: Node | null = rootNode;\r\n    do {\r\n        node = node && (isFirst ? node.firstChild : node.lastChild);\r\n    } while (node && node.firstChild);\r\n    return (node && getBlockElementAtNode(rootNode, node)) || null;\r\n}\r\n","import extractClipboardItems from './extractClipboardItems';\nimport extractClipboardItemsForIE from './extractClipboardItemsForIE';\nimport toArray from '../jsUtils/toArray';\nimport { Browser } from '../utils/Browser';\nimport type { ClipboardData, ExtractClipboardEventOption } from 'roosterjs-editor-types';\n\ninterface WindowForIE extends Window {\n    clipboardData: DataTransfer;\n}\n\n/**\n * @deprecated Use extractClipboardItems and extractClipboardItemsForIE instead\n * Extract a Clipboard event\n * @param event The paste event\n * @param callback Callback function when data is ready\n * @param options Options to retrieve more items from the event, including HTML string and other customized items\n * @param rangeBeforePaste Optional range to be removed when pasting in Android\n * @returns An object with the following properties:\n *  types: Available types from the clipboard event\n *  text: Plain text from the clipboard event\n *  image: Image file from the clipboard event\n *  html: Html string from the clipboard event. When set to null, it means there's no HTML found from the event.\n *   When set to undefined, it means can't retrieve HTML string, there may be HTML string but direct retrieving is\n *   not supported by browser.\n */\nexport default function extractClipboardEvent(\n    event: ClipboardEvent,\n    callback: (clipboardData: ClipboardData) => void,\n    options?: ExtractClipboardEventOption,\n    rangeBeforePaste?: Range\n) {\n    const dataTransfer =\n        event.clipboardData ||\n        (<WindowForIE>(<unknown>(<Node>event.target).ownerDocument?.defaultView)).clipboardData;\n\n    if (dataTransfer.items) {\n        event.preventDefault();\n        extractClipboardItems(\n            toArray(dataTransfer.items),\n            options,\n            true /** pasteNativeEvent */\n        ).then((clipboardData: ClipboardData) => {\n            removeContents(rangeBeforePaste);\n            callback(clipboardData);\n        });\n    } else {\n        extractClipboardItemsForIE(dataTransfer, callback, options);\n    }\n}\n\nfunction removeContents(range?: Range) {\n    if (Browser.isAndroid && range) {\n        range.deleteContents();\n    }\n}\n","import readFile from '../utils/readFile';\r\nimport { Browser } from '../utils/Browser';\r\nimport { ContentType, ContentTypePrefix } from 'roosterjs-editor-types';\r\nimport type {\r\n    ClipboardData,\r\n    EdgeLinkPreview,\r\n    ExtractClipboardItemsOption,\r\n} from 'roosterjs-editor-types';\r\n\r\n// HTML header to indicate where is the HTML content started from.\r\n// Sample header:\r\n// Version:0.9\r\n// StartHTML:71\r\n// EndHTML:170\r\n// StartFragment:140\r\n// EndFragment:160\r\n// StartSelection:140\r\n// EndSelection:160\r\nconst CLIPBOARD_HTML_HEADER_REGEX = /^Version:[0-9\\.]+\\s+StartHTML:\\s*([0-9]+)\\s+EndHTML:\\s*([0-9]+)\\s+/i;\r\nconst OTHER_TEXT_TYPE = ContentTypePrefix.Text + '*';\r\nconst EDGE_LINK_PREVIEW = 'link-preview';\r\nconst ContentHandlers: {\r\n    [contentType: string]: (data: ClipboardData, value: string, type?: string) => void;\r\n} = {\r\n    [ContentType.HTML]: (data, value) =>\r\n        (data.rawHtml = Browser.isEdge ? workaroundForEdge(value) : value),\r\n    [ContentType.PlainText]: (data, value) => (data.text = value),\r\n    [OTHER_TEXT_TYPE]: (data, value, type?) => !!type && (data.customValues[type] = value),\r\n    [ContentTypePrefix.Text + EDGE_LINK_PREVIEW]: tryParseLinkPreview,\r\n};\r\n\r\n/**\r\n * Extract clipboard items to be a ClipboardData object for IE\r\n * @param items The clipboard items retrieve from a DataTransfer object\r\n * @param callback Callback function when data is ready\r\n * @returns An object with the following properties:\r\n *  types: Available types from the clipboard event\r\n *  text: Plain text from the clipboard event\r\n *  image: Image file from the clipboard event\r\n *  html: Html string from the clipboard event. When set to null, it means there's no HTML found from the event.\r\n *   When set to undefined, it means can't retrieve HTML string, there may be HTML string but direct retrieving is\r\n *   not supported by browser.\r\n */\r\nexport default function extractClipboardItems(\r\n    items: DataTransferItem[],\r\n    options?: ExtractClipboardItemsOption,\r\n    pasteNativeEvent?: boolean\r\n): Promise<ClipboardData> {\r\n    const data: ClipboardData = {\r\n        types: [],\r\n        text: '',\r\n        image: null,\r\n        files: [],\r\n        rawHtml: null,\r\n        customValues: {},\r\n        pasteNativeEvent: pasteNativeEvent,\r\n    };\r\n\r\n    return Promise.all(\r\n        (items || []).map(item => {\r\n            const type = item.type;\r\n\r\n            if (type.indexOf(ContentTypePrefix.Image) == 0 && !data.image && item.kind == 'file') {\r\n                data.types.push(type);\r\n                data.image = item.getAsFile();\r\n                return new Promise<void>(resolve => {\r\n                    if (data.image) {\r\n                        readFile(data.image, dataUrl => {\r\n                            data.imageDataUri = dataUrl;\r\n                            resolve();\r\n                        });\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                });\r\n            } else if (item.kind == 'file') {\r\n                return new Promise<void>(resolve => {\r\n                    const file = item.getAsFile();\r\n                    if (!!file) {\r\n                        data.types.push(type);\r\n                        data.files!.push(file);\r\n                    }\r\n                    resolve();\r\n                });\r\n            } else {\r\n                const customType = getAllowedCustomType(type, options?.allowedCustomPasteType);\r\n                const handler =\r\n                    ContentHandlers[type] || (customType ? ContentHandlers[OTHER_TEXT_TYPE] : null);\r\n                return new Promise<void>(resolve =>\r\n                    handler\r\n                        ? item.getAsString(value => {\r\n                              data.types.push(type);\r\n                              handler(data, value, customType);\r\n                              resolve();\r\n                          })\r\n                        : resolve()\r\n                );\r\n            }\r\n        })\r\n    ).then(() => data);\r\n}\r\n\r\n/**\r\n * Edge sometimes doesn't remove the headers, which cause we paste more things then expected.\r\n * So we need to remove it in our code\r\n * @param html The HTML string got from clipboard\r\n */\r\nfunction workaroundForEdge(html: string) {\r\n    const headerValues = CLIPBOARD_HTML_HEADER_REGEX.exec(html);\r\n\r\n    if (headerValues?.length == 3) {\r\n        const start = parseInt(headerValues[1]);\r\n        const end = parseInt(headerValues[2]);\r\n        if (start > 0 && end > start) {\r\n            html = html.substring(start, end);\r\n        }\r\n    }\r\n\r\n    return html;\r\n}\r\n\r\nfunction tryParseLinkPreview(data: ClipboardData, value: string) {\r\n    try {\r\n        data.customValues[EDGE_LINK_PREVIEW] = value;\r\n        data.linkPreview = JSON.parse(value) as EdgeLinkPreview;\r\n    } catch {}\r\n}\r\n\r\nfunction getAllowedCustomType(type: string, allowedCustomPasteType?: string[]) {\r\n    const textType =\r\n        type.indexOf(ContentTypePrefix.Text) == 0\r\n            ? type.substring(ContentTypePrefix.Text.length)\r\n            : null;\r\n    const index =\r\n        allowedCustomPasteType && textType ? allowedCustomPasteType.indexOf(textType) : -1;\r\n    return textType && index >= 0 ? textType : undefined;\r\n}\r\n","import readFile from '../utils/readFile';\r\nimport toArray from '../jsUtils/toArray';\r\nimport { ContentTypePrefix } from 'roosterjs-editor-types';\r\nimport type { ClipboardData, ExtractClipboardItemsForIEOptions } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Extract clipboard items to be a ClipboardData object for IE\r\n * @param dataTransfer The clipboard items retrieve from a DataTransfer object\r\n * @param callback Callback function when data is ready\r\n * @returns An object with the following properties:\r\n *  types: Available types from the clipboard event\r\n *  text: Plain text from the clipboard event\r\n *  image: Image file from the clipboard event\r\n *  html: Html string from the clipboard event. When set to null, it means there's no HTML found from the event.\r\n *   When set to undefined, it means can't retrieve HTML string, there may be HTML string but direct retrieving is\r\n *   not supported by browser.\r\n */\r\nexport default function extractClipboardItemsForIE(\r\n    dataTransfer: DataTransfer,\r\n    callback: (data: ClipboardData) => void,\r\n    options?: ExtractClipboardItemsForIEOptions\r\n) {\r\n    const clipboardData: ClipboardData = {\r\n        types: dataTransfer.types ? toArray(dataTransfer.types) : [],\r\n        text: dataTransfer.getData('text'),\r\n        image: null,\r\n        files: [],\r\n        rawHtml: null,\r\n        customValues: {},\r\n        pasteNativeEvent: true,\r\n    };\r\n\r\n    for (let i = 0; i < (dataTransfer.files ? dataTransfer.files.length : 0); i++) {\r\n        let file = dataTransfer.files.item(i);\r\n        if (file?.type?.indexOf(ContentTypePrefix.Image) == 0) {\r\n            clipboardData.image = file;\r\n            break;\r\n        }\r\n    }\r\n\r\n    const nextStep = () => {\r\n        if (clipboardData.image) {\r\n            readFile(clipboardData.image, dataUrl => {\r\n                clipboardData.imageDataUri = dataUrl;\r\n                callback(clipboardData);\r\n            });\r\n        } else {\r\n            callback(clipboardData);\r\n        }\r\n    };\r\n\r\n    if (options?.getTempDiv && options?.removeTempDiv) {\r\n        const div = options.getTempDiv();\r\n        div.contentEditable = 'true';\r\n        div.innerHTML = '';\r\n        div.focus();\r\n        div.ownerDocument?.defaultView?.setTimeout(() => {\r\n            clipboardData.rawHtml = div.innerHTML;\r\n            options.removeTempDiv?.(div);\r\n            nextStep();\r\n        }, 0);\r\n    } else {\r\n        clipboardData.rawHtml = undefined;\r\n        nextStep();\r\n    }\r\n}\r\n","import { PasteType } from 'roosterjs-editor-types';\n\n/**\n * Get the paste type that will be used corresponding to the configuration\n * @param pasteAsText Whether to paste as Text\n * @param applyCurrentStyle Whether to apply the current format to the content\n * @param pasteAsImage Whether to only paste the image\n * @returns\n */\nexport default function getPasteType(\n    pasteAsText: boolean,\n    applyCurrentStyle: boolean,\n    pasteAsImage: boolean\n) {\n    if (pasteAsText) {\n        return PasteType.AsPlainText;\n    } else if (applyCurrentStyle) {\n        return PasteType.MergeFormat;\n    } else if (pasteAsImage) {\n        return PasteType.AsImage;\n    } else {\n        return PasteType.Normal;\n    }\n}\n","/**\n * Handles the content when using the Image Paste Option\n * @param imageDataUri the image uri to use for the image\n * @param fragment fragment that will contain the content to paste.\n */\nexport default function handleImagePaste(imageDataUri: string, fragment: DocumentFragment) {\n    const img = fragment.ownerDocument.createElement('img');\n    img.style.maxWidth = '100%';\n    img.src = imageDataUri;\n    fragment.appendChild(img);\n}\n","import wrap from '../utils/wrap';\nimport type { NodePosition } from 'roosterjs-editor-types';\n\nconst NBSP_HTML = '\\u00A0';\nconst ENSP_HTML = '\\u2002';\nconst TAB_SPACES = 6;\n\n/**\n * handle the content when using the text only option\n * @param text Text from clipboard\n * @param position current position of the clipboard\n * @param fragment fragment that contains the paste content.\n */\nexport default function handleTextPaste(\n    text: string,\n    position: NodePosition | null,\n    fragment: DocumentFragment\n) {\n    const document = fragment.ownerDocument;\n    text.split('\\n').forEach((line, index, lines) => {\n        line = line\n            .replace(/^ /g, NBSP_HTML)\n            .replace(/\\r/g, '')\n            .replace(/ {2}/g, ' ' + NBSP_HTML);\n\n        if (line.includes('\\t')) {\n            line = transformTabCharacters(line, index === 0 ? position?.offset : 0);\n        }\n\n        const textNode = document.createTextNode(line);\n\n        // There are 3 scenarios:\n        // 1. Single line: Paste as it is\n        // 2. Two lines: Add <br> between the lines\n        // 3. 3 or More lines, For first and last line, paste as it is. For middle lines, wrap with DIV, and add BR if it is empty line\n        if (lines.length == 2 && index == 0) {\n            // 1 of 2 lines scenario, add BR\n            fragment.appendChild(textNode);\n            fragment.appendChild(document.createElement('br'));\n        } else if (index > 0 && index < lines.length - 1) {\n            // Middle line of >=3 lines scenario, wrap with DIV\n            fragment.appendChild(wrap(line == '' ? document.createElement('br') : textNode));\n        } else {\n            // All others, paste as it is\n            fragment.appendChild(textNode);\n        }\n    });\n}\n\n/**\n * @internal\n * Transform \\t characters into EN SPACE characters\n * @param input string NOT containing \\n characters\n * @example t(\"\\thello\", 2) => \"&ensp;&ensp;&ensp;&ensp;hello\"\n */\n\nexport function transformTabCharacters(input: string, initialOffset: number = 0) {\n    let line = input;\n    let tIndex: number;\n    while ((tIndex = line.indexOf('\\t')) != -1) {\n        const lineBefore = line.slice(0, tIndex);\n        const lineAfter = line.slice(tIndex + 1);\n        const tabCount = TAB_SPACES - ((lineBefore.length + initialOffset) % TAB_SPACES);\n        const tabStr = Array(tabCount).fill(ENSP_HTML).join('');\n        line = lineBefore + tabStr + lineAfter;\n    }\n    return line;\n}\n","import getTagOfNode from '../utils/getTagOfNode';\nimport toArray from '../jsUtils/toArray';\nimport type { BeforePasteEvent, TrustedHTMLHandler } from 'roosterjs-editor-types';\n\nconst START_FRAGMENT = '<!--StartFragment-->';\nconst END_FRAGMENT = '<!--EndFragment-->';\n\n/**\n * Retrieves the metadata from the content inside of the clipboard\n * @param doc Document parsed from the clipboard\n * @param event Before Paste event\n * @param trustedHTMLHandler the trusted html handler to sanitize the content.\n */\nexport default function retrieveMetadataFromClipboard(\n    doc: Document | undefined,\n    event: BeforePasteEvent,\n    trustedHTMLHandler: TrustedHTMLHandler\n) {\n    const { clipboardData, sanitizingOption } = event;\n    const { rawHtml } = clipboardData;\n    if (rawHtml && doc?.body) {\n        const attributes = doc.querySelector('html')?.attributes;\n        (attributes ? toArray(attributes) : []).reduce((attrs, attr) => {\n            attrs[attr.name] = attr.value;\n            return attrs;\n        }, event.htmlAttributes);\n        toArray(doc.querySelectorAll('meta')).reduce((attrs, meta) => {\n            attrs[meta.name] = meta.content;\n            return attrs;\n        }, event.htmlAttributes);\n\n        clipboardData.htmlFirstLevelChildTags = [];\n        doc?.body.normalize();\n\n        for (let i = 0; i < doc?.body.childNodes.length; i++) {\n            const node = doc?.body.childNodes.item(i);\n            if (node.nodeType == Node.TEXT_NODE) {\n                const trimmedString = node.nodeValue?.replace(/(\\r\\n|\\r|\\n)/gm, '').trim();\n                if (!trimmedString) {\n                    continue;\n                }\n            }\n            const nodeTag = getTagOfNode(node);\n            if (node.nodeType != Node.COMMENT_NODE) {\n                clipboardData.htmlFirstLevelChildTags.push(nodeTag);\n            }\n        }\n        // Move all STYLE nodes into header, and save them into sanitizing options.\n        // Because if we directly move them into a fragment, all sheets under STYLE will be lost.\n        processStyles(doc, style => {\n            doc?.head.appendChild(style);\n            sanitizingOption.additionalGlobalStyleNodes.push(style);\n        });\n\n        const startIndex = rawHtml.indexOf(START_FRAGMENT);\n        const endIndex = rawHtml.lastIndexOf(END_FRAGMENT);\n\n        if (startIndex >= 0 && endIndex >= startIndex + START_FRAGMENT.length) {\n            event.htmlBefore = rawHtml.substr(0, startIndex);\n            event.htmlAfter = rawHtml.substr(endIndex + END_FRAGMENT.length);\n            clipboardData.html = rawHtml.substring(startIndex + START_FRAGMENT.length, endIndex);\n            doc.body.innerHTML = trustedHTMLHandler(clipboardData.html);\n\n            // Remove style nodes just added by setting innerHTML of body since we already have all\n            // style nodes in header.\n            // Here we use doc.body instead of doc because we only want to remove STYLE nodes under BODY\n            // and the nodes under HEAD are still used when convert global CSS to inline\n            processStyles(doc.body, style => style.parentNode?.removeChild(style));\n        }\n    }\n}\n\nfunction processStyles(node: ParentNode, callback: (style: HTMLStyleElement) => void) {\n    toArray(node.querySelectorAll('style')).forEach(callback);\n}\n","import getInheritableStyles from '../htmlSanitizer/getInheritableStyles';\nimport HtmlSanitizer from '../htmlSanitizer/HtmlSanitizer';\nimport type { BeforePasteEvent, NodePosition } from 'roosterjs-editor-types';\n\n/**\n * Sanitize the content from the pasted content\n * @param event The before paste event\n * @param position the position of the cursor\n */\nexport default function sanitizePasteContent(\n    event: BeforePasteEvent,\n    position: NodePosition | null\n) {\n    const { fragment } = event;\n    const sanitizer = new HtmlSanitizer(event.sanitizingOption);\n    sanitizer.convertGlobalCssToInlineCss(fragment);\n    sanitizer.sanitize(fragment, position ? getInheritableStyles(position.element) : undefined);\n}\n","import contains from '../utils/contains';\r\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getFirstLastBlockElement from '../blockElements/getFirstLastBlockElement';\r\nimport getInlineElementAtNode from '../inlineElements/getInlineElementAtNode';\r\nimport { getFirstInlineElement } from '../inlineElements/getFirstLastInlineElement';\r\nimport type TraversingScoper from './TraversingScoper';\r\nimport type { BlockElement, InlineElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * provides a scope object for traversing the entire editor body starting from the beginning\r\n */\r\nexport default class BodyScoper implements TraversingScoper {\r\n    private startNode: Node | null;\r\n\r\n    /**\r\n     * Construct a new instance of BodyScoper class\r\n     * @param rootNode Root node of the body\r\n     * @param startNode The node to start from. If not passed, it will start from the beginning of the body\r\n     */\r\n    constructor(public rootNode: Node, startNode?: Node) {\r\n        this.startNode = contains(rootNode, startNode) ? startNode! : null;\r\n    }\r\n\r\n    /**\r\n     * Get the start block element\r\n     */\r\n    public getStartBlockElement(): BlockElement | null {\r\n        return this.startNode\r\n            ? getBlockElementAtNode(this.rootNode, this.startNode)\r\n            : getFirstLastBlockElement(this.rootNode, true /*isFirst*/);\r\n    }\r\n\r\n    /**\r\n     * Get the start inline element\r\n     */\r\n    public getStartInlineElement(): InlineElement | null {\r\n        return this.startNode\r\n            ? getInlineElementAtNode(this.rootNode, this.startNode)\r\n            : getFirstInlineElement(this.rootNode);\r\n    }\r\n\r\n    /**\r\n     * Since the scope is global, all blocks under the root node are in scope\r\n     */\r\n    public isBlockInScope(blockElement: BlockElement): boolean {\r\n        return contains(this.rootNode, blockElement.getStartNode());\r\n    }\r\n\r\n    /**\r\n     * Since we're at body scope, inline elements never need to be trimmed\r\n     */\r\n    public trimInlineElement(inlineElement: InlineElement): InlineElement {\r\n        return inlineElement;\r\n    }\r\n}\r\n","import BodyScoper from './BodyScoper';\r\nimport EmptyInlineElement from '../inlineElements/EmptyInlineElement';\r\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getInlineElementAtNode from '../inlineElements/getInlineElementAtNode';\r\nimport PartialInlineElement from '../inlineElements/PartialInlineElement';\r\nimport SelectionBlockScoper from './SelectionBlockScoper';\r\nimport SelectionScoper from './SelectionScoper';\r\nimport { ContentPosition } from 'roosterjs-editor-types';\r\nimport { getInlineElementBeforeAfter } from '../inlineElements/getInlineElementBeforeAfter';\r\nimport { getLeafSibling } from '../utils/getLeafSibling';\r\nimport type TraversingScoper from './TraversingScoper';\r\nimport type { CompatibleContentPosition } from 'roosterjs-editor-types/lib/compatibleTypes';\r\nimport type {\r\n    BlockElement,\r\n    IContentTraverser,\r\n    InlineElement,\r\n    NodePosition,\r\n} from 'roosterjs-editor-types';\r\n\r\n/**\r\n * The provides traversing of content inside editor.\r\n * There are two ways to traverse, block by block, or inline element by inline element\r\n * Block and inline traversing is independent from each other, meaning if you traverse block by block, it does not change\r\n * the current inline element position\r\n */\r\nexport default class ContentTraverser implements IContentTraverser {\r\n    private currentInline: InlineElement | null = null;\r\n    private currentBlock: BlockElement | null = null;\r\n\r\n    /**\r\n     * Create a content traverser for the whole body of given root node\r\n     * @param scoper Traversing scoper object to help scope the traversing\r\n     * @param skipTags (Optional) tags that child elements will be skipped\r\n     */\r\n    private constructor(private scoper: TraversingScoper, private skipTags?: string[]) {}\r\n\r\n    /**\r\n     * Create a content traverser for the whole body of given root node\r\n     * @param rootNode The root node to traverse in\r\n     * @param startNode The node to start from. If not passed, it will start from the beginning of the body\r\n     * @param skipTags (Optional) tags that child elements will be skipped\r\n     */\r\n    public static createBodyTraverser(\r\n        rootNode: Node,\r\n        startNode?: Node,\r\n        skipTags?: string[]\r\n    ): IContentTraverser {\r\n        return new ContentTraverser(new BodyScoper(rootNode, startNode));\r\n    }\r\n\r\n    /**\r\n     * Create a content traverser for the given selection\r\n     * @param rootNode The root node to traverse in\r\n     * @param range The selection range to scope the traversing\r\n     * @param skipTags (Optional) tags that child elements will be skipped\r\n     */\r\n    public static createSelectionTraverser(\r\n        rootNode: Node,\r\n        range: Range,\r\n        skipTags?: string[]\r\n    ): IContentTraverser {\r\n        return new ContentTraverser(new SelectionScoper(rootNode, range), skipTags);\r\n    }\r\n\r\n    /**\r\n     * Create a content traverser for a block element which contains the given position\r\n     * @param rootNode The root node to traverse in\r\n     * @param position A position inside a block, traversing will be scoped within this block.\r\n     * If passing a range, the start position of this range will be used\r\n     * @param startFrom Start position of traversing. The value can be Begin, End, SelectionStart\r\n     * @param skipTags (Optional) tags that child elements will be skipped\r\n     */\r\n    public static createBlockTraverser(\r\n        rootNode: Node,\r\n        position: NodePosition | Range,\r\n        start: ContentPosition | CompatibleContentPosition = ContentPosition.SelectionStart,\r\n        skipTags?: string[]\r\n    ): IContentTraverser {\r\n        return new ContentTraverser(new SelectionBlockScoper(rootNode, position, start));\r\n    }\r\n\r\n    /**\r\n     * Get current block\r\n     */\r\n    public get currentBlockElement(): BlockElement | null {\r\n        // Prepare currentBlock from the scoper\r\n        if (!this.currentBlock) {\r\n            this.currentBlock = this.scoper.getStartBlockElement();\r\n        }\r\n\r\n        return this.currentBlock;\r\n    }\r\n\r\n    /**\r\n     * Get next block element\r\n     */\r\n    public getNextBlockElement(): BlockElement | null {\r\n        return this.getPreviousNextBlockElement(true /*isNext*/);\r\n    }\r\n\r\n    /**\r\n     * Get previous block element\r\n     */\r\n    public getPreviousBlockElement(): BlockElement | null {\r\n        return this.getPreviousNextBlockElement(false /*isNext*/);\r\n    }\r\n\r\n    private getPreviousNextBlockElement(isNext: boolean): BlockElement | null {\r\n        let current = this.currentBlockElement;\r\n\r\n        if (!current) {\r\n            return null;\r\n        }\r\n\r\n        let leaf = getLeafSibling(\r\n            this.scoper.rootNode,\r\n            isNext ? current.getEndNode() : current.getStartNode(),\r\n            isNext,\r\n            this.skipTags\r\n        );\r\n        let newBlock = leaf ? getBlockElementAtNode(this.scoper.rootNode, leaf) : null;\r\n\r\n        // Make sure this is right block:\r\n        // 1) the block is in scope per scoper\r\n        // 2) the block is after (for next) or before (for previous) the current block\r\n        // Then:\r\n        // 1) Re-position current block to newly found block\r\n        if (\r\n            newBlock &&\r\n            this.scoper.isBlockInScope(newBlock) &&\r\n            ((isNext && newBlock.isAfter(current)) || (!isNext && current.isAfter(newBlock)))\r\n        ) {\r\n            this.currentBlock = newBlock;\r\n            return this.currentBlock;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Current inline element getter\r\n     */\r\n    public get currentInlineElement(): InlineElement | null {\r\n        // Retrieve a start inline from scoper\r\n        if (!this.currentInline) {\r\n            this.currentInline = this.scoper.getStartInlineElement();\r\n        }\r\n\r\n        return this.currentInline instanceof EmptyInlineElement ? null : this.currentInline;\r\n    }\r\n\r\n    /**\r\n     * Get next inline element\r\n     */\r\n    public getNextInlineElement(): InlineElement | null {\r\n        return this.getPreviousNextInlineElement(true /*isNext*/);\r\n    }\r\n\r\n    /**\r\n     * Get previous inline element\r\n     */\r\n    public getPreviousInlineElement(): InlineElement | null {\r\n        return this.getPreviousNextInlineElement(false /*isNext*/);\r\n    }\r\n\r\n    private getPreviousNextInlineElement(isNext: boolean): InlineElement | null {\r\n        let current = this.currentInlineElement || this.currentInline;\r\n        let newInline: InlineElement | null;\r\n\r\n        if (!current) {\r\n            return null;\r\n        }\r\n\r\n        if (current instanceof EmptyInlineElement) {\r\n            newInline = getInlineElementBeforeAfter(\r\n                this.scoper.rootNode,\r\n                current.getStartPosition(),\r\n                isNext\r\n            );\r\n            if (newInline && !current.getParentBlock().contains(newInline.getContainerNode())) {\r\n                newInline = null;\r\n            }\r\n        } else {\r\n            newInline = getNextPreviousInlineElement(this.scoper.rootNode, current, isNext);\r\n            newInline =\r\n                newInline &&\r\n                current &&\r\n                ((isNext && newInline.isAfter(current)) || (!isNext && current.isAfter(newInline)))\r\n                    ? newInline\r\n                    : null;\r\n        }\r\n\r\n        // For inline, we need to make sure:\r\n        // 1) it is really next/previous to current\r\n        // 2) pass on the new inline to this.scoper to do the trimming and we still get back an inline\r\n        // Then\r\n        // 1) re-position current inline\r\n        if (newInline && (newInline = this.scoper.trimInlineElement(newInline))) {\r\n            this.currentInline = newInline;\r\n            return this.currentInline;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getNextPreviousInlineElement(\r\n    rootNode: Node,\r\n    current: InlineElement,\r\n    isNext: boolean\r\n): InlineElement | null {\r\n    if (!current) {\r\n        return null;\r\n    }\r\n    if (current instanceof PartialInlineElement) {\r\n        // if current is partial, get the other half of the inline unless it is no more\r\n        let result = isNext ? current.nextInlineElement : current.previousInlineElement;\r\n\r\n        if (result) {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    // Get a leaf node after startNode and use that base to find next inline\r\n    let startNode: Node | null = current.getContainerNode();\r\n    startNode = getLeafSibling(rootNode, startNode, isNext);\r\n    return getInlineElementAtNode(rootNode, startNode);\r\n}\r\n","import ContentTraverser from './ContentTraverser';\r\nimport createRange from '../selection/createRange';\r\nimport type {\r\n    IContentTraverser,\r\n    InlineElement,\r\n    IPositionContentSearcher,\r\n    NodePosition,\r\n} from 'roosterjs-editor-types';\r\n\r\n// White space matching regex. It matches following chars:\r\n// \\s: white space\r\n// \\u00A0: no-breaking white space\r\n// \\u200B: zero width space\r\n// \\u3000: full width space (which can come from JPN IME)\r\nconst WHITESPACE_REGEX = /[\\s\\u00A0\\u200B\\u3000]+([^\\s\\u00A0\\u200B\\u3000]*)$/i;\r\n\r\n/**\r\n * The class that helps search content around a position\r\n */\r\nexport default class PositionContentSearcher implements IPositionContentSearcher {\r\n    // The cached text before position that has been read so far\r\n    private text = '';\r\n\r\n    // The cached word before position\r\n    private word: string = '';\r\n\r\n    // The inline element before position\r\n    private inlineBefore: InlineElement | null = null;\r\n\r\n    // The inline element after position\r\n    private inlineAfter: InlineElement | null = null;\r\n\r\n    // The content traverser used to traverse backwards\r\n    private traverser: IContentTraverser | null = null;\r\n\r\n    // Backward parsing has completed\r\n    private traversingComplete: boolean = false;\r\n\r\n    // All inline elements before position that have been read so far\r\n    private inlineElements: InlineElement[] = [];\r\n\r\n    // First non-text inline before position\r\n    private nearestNonTextInlineElement: InlineElement | null = null;\r\n\r\n    /**\r\n     * Create a new CursorData instance\r\n     * @param rootNode Root node of the whole scope\r\n     * @param position Start position\r\n     */\r\n    constructor(private rootNode: Node, private position: NodePosition) {}\r\n\r\n    /**\r\n     * Get the word before position. The word is determined by scanning backwards till the first white space, the portion\r\n     * between position and the white space is the word before position\r\n     * @returns The word before position\r\n     */\r\n    public getWordBefore(): string {\r\n        if (!this.word) {\r\n            this.traverse(() => this.word);\r\n        }\r\n\r\n        return this.word || '';\r\n    }\r\n\r\n    /**\r\n     * Get the inline element before position\r\n     * @returns The inlineElement before position\r\n     */\r\n    public getInlineElementBefore(): InlineElement | null {\r\n        if (!this.inlineBefore) {\r\n            this.traverse(null);\r\n        }\r\n\r\n        return this.inlineBefore;\r\n    }\r\n\r\n    /**\r\n     * Get the inline element after position\r\n     * @returns The inline element after position\r\n     */\r\n    public getInlineElementAfter(): InlineElement | null {\r\n        if (!this.inlineAfter) {\r\n            this.inlineAfter = ContentTraverser.createBlockTraverser(\r\n                this.rootNode,\r\n                this.position\r\n            ).currentInlineElement;\r\n        }\r\n\r\n        return this.inlineAfter;\r\n    }\r\n\r\n    /**\r\n     * Get X number of chars before position\r\n     * The actual returned chars may be less than what is requested.\r\n     * @param length The length of string user want to get, the string always ends at the position,\r\n     * so this length determines the start position of the string\r\n     * @returns The actual string we get as a sub string, or the whole string before position when\r\n     * there is not enough chars in the string\r\n     */\r\n    public getSubStringBefore(length: number): string {\r\n        if (this.text.length < length) {\r\n            this.traverse(() => this.text.length >= length);\r\n        }\r\n\r\n        return this.text.substr(Math.max(0, this.text.length - length));\r\n    }\r\n\r\n    /**\r\n     * Try to get a range matches the given text before the position\r\n     * @param text The text to match against\r\n     * @param exactMatch Whether it is an exact match\r\n     * @returns The range for the matched text, null if unable to find a match\r\n     */\r\n    public getRangeFromText(text: string, exactMatch: boolean): Range | null {\r\n        if (!text) {\r\n            return null;\r\n        }\r\n\r\n        let startPosition: NodePosition | null = null;\r\n        let endPosition: NodePosition | null = null;\r\n        let textIndex = text.length - 1;\r\n\r\n        this.forEachTextInlineElement(textInline => {\r\n            let nodeContent = textInline.getTextContent() || '';\r\n            let nodeIndex = nodeContent.length - 1;\r\n            for (; nodeIndex >= 0 && textIndex >= 0; nodeIndex--) {\r\n                if (text.charCodeAt(textIndex) == nodeContent.charCodeAt(nodeIndex)) {\r\n                    textIndex--;\r\n\r\n                    // on first time when end is matched, set the end of range\r\n                    if (!endPosition) {\r\n                        endPosition = textInline.getStartPosition().move(nodeIndex + 1);\r\n                    }\r\n                } else if (exactMatch || endPosition) {\r\n                    // Mismatch found when exact match or end already match, so return since matching failed\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // when textIndex == -1, we have a successful complete match\r\n            if (textIndex == -1) {\r\n                startPosition = textInline.getStartPosition().move(nodeIndex + 1);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return startPosition && endPosition && createRange(startPosition, endPosition);\r\n    }\r\n\r\n    /**\r\n     * Get text section before position till stop condition is met.\r\n     * This offers consumers to retrieve text section by section\r\n     * The section essentially is just an inline element which has Container element\r\n     * so that the consumer can remember it for anchoring popup or verification purpose\r\n     * when position moves out of context etc.\r\n     * @param stopFunc The callback stop function\r\n     */\r\n    public forEachTextInlineElement(callback: (textInlineElement: InlineElement) => any) {\r\n        // We cache all text sections read so far\r\n        // Every time when you ask for textSection, we start with the cached first\r\n        // and resort to further reading once we exhausted with the cache\r\n        if (!this.inlineElements.some(callback)) {\r\n            this.traverse(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get first non textual inline element before position\r\n     * @returns First non textual inline element before position or null if no such element exists\r\n     */\r\n    public getNearestNonTextInlineElement(): InlineElement | null {\r\n        if (!this.nearestNonTextInlineElement) {\r\n            this.traverse(() => this.nearestNonTextInlineElement);\r\n        }\r\n\r\n        return this.nearestNonTextInlineElement;\r\n    }\r\n\r\n    /**\r\n     * Continue traversing backward till stop condition is met or begin of block is reached\r\n     */\r\n    private traverse(callback: null | ((inlineElement: InlineElement) => any)) {\r\n        this.traverser =\r\n            this.traverser || ContentTraverser.createBlockTraverser(this.rootNode, this.position);\r\n\r\n        if (!this.traverser || this.traversingComplete) {\r\n            return;\r\n        }\r\n\r\n        let previousInline = this.traverser.getPreviousInlineElement();\r\n        while (!this.traversingComplete) {\r\n            this.inlineBefore = this.inlineBefore || previousInline;\r\n\r\n            if (previousInline && previousInline.isTextualInlineElement()) {\r\n                let textContent = previousInline.getTextContent();\r\n\r\n                // build the word before position if it is not built yet\r\n                if (!this.word) {\r\n                    // Match on the white space, the portion after space is on the index of 1 of the matched result\r\n                    // (index at 0 is whole match result, index at 1 is the word)\r\n                    let matches = WHITESPACE_REGEX.exec(textContent);\r\n                    if (matches && matches.length == 2) {\r\n                        this.word = matches[1] + this.text;\r\n                    }\r\n                }\r\n\r\n                this.text = textContent + this.text;\r\n                this.inlineElements.push(previousInline);\r\n\r\n                // Check if stop condition is met\r\n                if (callback && callback(previousInline)) {\r\n                    break;\r\n                }\r\n            } else {\r\n                this.nearestNonTextInlineElement = previousInline;\r\n                this.traversingComplete = true;\r\n                if (!this.word) {\r\n                    // if parsing is done, whatever we get so far in this.cachedText should also be in this.cachedWordBeforeCursor\r\n                    this.word = this.text;\r\n                }\r\n\r\n                // When a non-textual inline element, or null is seen, we consider parsing complete\r\n                // TODO: we may need to change this if there is a future need to parse beyond text, i.e.\r\n                // we have aaa @someone bbb<position>, and we want to read the text before @someone\r\n                break;\r\n            }\r\n\r\n            previousInline = this.traverser.getPreviousInlineElement();\r\n        }\r\n    }\r\n}\r\n","import EmptyInlineElement from '../inlineElements/EmptyInlineElement';\r\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getInlineElementAtNode from '../inlineElements/getInlineElementAtNode';\r\nimport NodeBlockElement from '../blockElements/NodeBlockElement';\r\nimport Position from '../selection/Position';\r\nimport safeInstanceOf from '../utils/safeInstanceOf';\r\nimport { ContentPosition } from 'roosterjs-editor-types';\r\nimport { getInlineElementAfter } from '../inlineElements/getInlineElementBeforeAfter';\r\nimport type TraversingScoper from './TraversingScoper';\r\nimport type { BlockElement, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\nimport {\r\n    getFirstInlineElement,\r\n    getLastInlineElement,\r\n} from '../inlineElements/getFirstLastInlineElement';\r\nimport type { CompatibleContentPosition } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * @internal\r\n * This provides traversing content in a selection start block\r\n * This is commonly used for those cursor context sensitive plugin,\r\n * they want to know text being typed at cursor\r\n * This provides a scope for parsing from cursor position up to begin of the selection block\r\n */\r\nexport default class SelectionBlockScoper implements TraversingScoper {\r\n    private block: BlockElement | null;\r\n    private position: NodePosition;\r\n\r\n    /**\r\n     * Create a new instance of SelectionBlockScoper class\r\n     * @param rootNode The root node of the whole scope\r\n     * @param position Position of the selection start\r\n     * @param startFrom Where to start, can be Begin, End, SelectionStart\r\n     */\r\n    constructor(\r\n        public rootNode: Node,\r\n        position: NodePosition | Range,\r\n        private startFrom: ContentPosition | CompatibleContentPosition\r\n    ) {\r\n        if (safeInstanceOf(position, 'Range')) {\r\n            position = Position.getStart(position);\r\n        }\r\n\r\n        this.position = position.normalize();\r\n        this.block = getBlockElementAtNode(this.rootNode, this.position.node);\r\n    }\r\n\r\n    /**\r\n     * Get the start block element\r\n     */\r\n    public getStartBlockElement(): BlockElement | null {\r\n        return this.block;\r\n    }\r\n\r\n    /**\r\n     * Get the start inline element\r\n     * The start inline refers to inline before the selection start\r\n     *  The reason why we choose the one before rather after is, when cursor is at the end of a paragraph,\r\n     * the one after likely will point to inline in next paragraph which may be null if the cursor is at bottom of editor\r\n     */\r\n    public getStartInlineElement(): InlineElement | null {\r\n        if (this.block) {\r\n            switch (this.startFrom) {\r\n                case ContentPosition.Begin:\r\n                case ContentPosition.End:\r\n                case ContentPosition.DomEnd:\r\n                    return getFirstLastInlineElementFromBlockElement(\r\n                        this.block,\r\n                        this.startFrom == ContentPosition.Begin\r\n                    );\r\n                case ContentPosition.SelectionStart:\r\n                    // Get the inline before selection start point, and ensure it falls in the selection block\r\n                    let startInline = getInlineElementAfter(this.rootNode, this.position);\r\n                    return startInline && this.block.contains(startInline.getContainerNode())\r\n                        ? startInline\r\n                        : new EmptyInlineElement(this.position, this.block);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Check if the given block element is in current scope\r\n     * @param blockElement The block element to check\r\n     */\r\n    public isBlockInScope(blockElement: BlockElement): boolean {\r\n        return this.block && blockElement ? this.block.equals(blockElement) : false;\r\n    }\r\n\r\n    /**\r\n     * Trim the incoming inline element, and return an inline element\r\n     * This just tests and return the inline element if it is in block\r\n     * This is a block scoper, which is not like selection scoper where it may cut an inline element in half\r\n     * A block scoper does not cut an inline in half\r\n     */\r\n    public trimInlineElement(inlineElement: InlineElement): InlineElement | null {\r\n        return this.block && inlineElement && this.block.contains(inlineElement.getContainerNode())\r\n            ? inlineElement\r\n            : null;\r\n    }\r\n}\r\n\r\n/**\r\n * Get first/last InlineElement of the given BlockElement\r\n * @param block The BlockElement to get InlineElement from\r\n * @param isFirst True to get first InlineElement, false to get last InlineElement\r\n */\r\nfunction getFirstLastInlineElementFromBlockElement(\r\n    block: BlockElement,\r\n    isFirst: boolean\r\n): InlineElement | null {\r\n    if (block instanceof NodeBlockElement) {\r\n        let blockNode = block.getStartNode();\r\n        return isFirst ? getFirstInlineElement(blockNode) : getLastInlineElement(blockNode);\r\n    } else {\r\n        return getInlineElementAtNode(block, isFirst ? block.getStartNode() : block.getEndNode());\r\n    }\r\n}\r\n","import getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport PartialInlineElement from '../inlineElements/PartialInlineElement';\r\nimport Position from '../selection/Position';\r\nimport { getInlineElementAfter } from '../inlineElements/getInlineElementBeforeAfter';\r\nimport type TraversingScoper from './TraversingScoper';\r\nimport type { BlockElement, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * This is selection scoper that provide a start inline as the start of the selection\r\n * and checks if a block falls in the selection (isBlockInScope)\r\n * last trimInlineElement to trim any inline element to return a partial that falls in the selection\r\n */\r\nexport default class SelectionScoper implements TraversingScoper {\r\n    private start: NodePosition;\r\n    private end: NodePosition;\r\n    private startBlock: BlockElement | null = null;\r\n    private startInline: InlineElement | null = null;\r\n\r\n    /**\r\n     * Create a new instance of SelectionScoper class\r\n     * @param rootNode The root node of the content\r\n     * @param range The selection range to scope to\r\n     */\r\n    constructor(public rootNode: Node, range: Range) {\r\n        this.start = Position.getStart(range).normalize();\r\n        this.end = Position.getEnd(range).normalize();\r\n    }\r\n\r\n    /**\r\n     * Provide a start block as the first block after the cursor\r\n     */\r\n    public getStartBlockElement(): BlockElement | null {\r\n        if (!this.startBlock) {\r\n            this.startBlock = getBlockElementAtNode(this.rootNode, this.start.node);\r\n        }\r\n\r\n        return this.startBlock;\r\n    }\r\n\r\n    /**\r\n     * Provide a start inline as the first inline after the cursor\r\n     */\r\n    public getStartInlineElement(): InlineElement | null {\r\n        if (!this.startInline) {\r\n            this.startInline = this.trimInlineElement(\r\n                getInlineElementAfter(this.rootNode, this.start)\r\n            );\r\n        }\r\n\r\n        return this.startInline;\r\n    }\r\n\r\n    /**\r\n     * Checks if a block completely falls in the selection\r\n     * @param block The BlockElement to check\r\n     */\r\n    public isBlockInScope(block: BlockElement): boolean {\r\n        if (!block) {\r\n            return false;\r\n        }\r\n        let inScope = false;\r\n        let selStartBlock = this.getStartBlockElement();\r\n        if (this.start.equalTo(this.end)) {\r\n            inScope = !!selStartBlock && selStartBlock.equals(block);\r\n        } else {\r\n            let selEndBlock = getBlockElementAtNode(this.rootNode, this.end.node);\r\n\r\n            // There are three cases that are considered as \"block in scope\"\r\n            // 1) The start of selection falls on the block\r\n            // 2) The end of selection falls on the block\r\n            // 3) the block falls in-between selection start and end\r\n            inScope =\r\n                !!selStartBlock &&\r\n                !!selEndBlock &&\r\n                (block.equals(selStartBlock) ||\r\n                    block.equals(selEndBlock) ||\r\n                    (block.isAfter(selStartBlock) && selEndBlock.isAfter(block)));\r\n        }\r\n\r\n        return inScope;\r\n    }\r\n\r\n    /**\r\n     * Trim an incoming inline. If it falls completely outside selection, return null\r\n     * otherwise return a partial that represents the portion that falls in the selection\r\n     * @param inline The InlineElement to check\r\n     */\r\n    public trimInlineElement(inline: InlineElement | null): InlineElement | null {\r\n        if (!inline || this.start.equalTo(this.end)) {\r\n            return null;\r\n        }\r\n\r\n        // Temp code. Will be changed to using InlineElement.getStart/EndPosition() soon\r\n        let start = inline.getStartPosition();\r\n        let end = inline.getEndPosition();\r\n\r\n        if (start.isAfter(this.end) || this.start.isAfter(end)) {\r\n            return null;\r\n        }\r\n\r\n        let startPartial = false;\r\n        let endPartial = false;\r\n\r\n        if (this.start.isAfter(start)) {\r\n            start = this.start;\r\n            startPartial = true;\r\n        }\r\n\r\n        if (end.isAfter(this.end)) {\r\n            end = this.end;\r\n            endPartial = true;\r\n        }\r\n\r\n        return start.isAfter(end) || start.equalTo(end)\r\n            ? null\r\n            : startPartial || endPartial\r\n            ? new PartialInlineElement(\r\n                  inline,\r\n                  startPartial ? start : undefined,\r\n                  endPartial ? end : undefined\r\n              )\r\n            : inline;\r\n    }\r\n}\r\n","import createElement from '../utils/createElement';\nimport getDelimiterFromElement from './getDelimiterFromElement';\nimport { DelimiterClasses } from 'roosterjs-editor-types';\n\nconst ZERO_WIDTH_SPACE = '\\u200B';\n\n/**\n * Adds delimiters to the element provided. If the delimiters already exists, will not be added\n * @param node the node to add the delimiters\n */\nexport default function addDelimiters(node: Element): Element[] {\n    let [delimiterAfter, delimiterBefore] = getDelimiters(node);\n\n    if (!delimiterAfter) {\n        delimiterAfter = addDelimiterAfter(node);\n    }\n    if (!delimiterBefore) {\n        delimiterBefore = addDelimiterBefore(node);\n    }\n    return [delimiterAfter, delimiterBefore];\n}\n\n/**\n * Adds delimiter after the element provided.\n * @param element element to use\n */\nexport function addDelimiterAfter(element: Element) {\n    return insertDelimiter(element, DelimiterClasses.DELIMITER_AFTER);\n}\n\n/**\n * Adds delimiter before the element provided.\n * @param element element to use\n */\nexport function addDelimiterBefore(element: Element) {\n    return insertDelimiter(element, DelimiterClasses.DELIMITER_BEFORE);\n}\n\nfunction getDelimiters(entityWrapper: Element): (Element | undefined)[] {\n    const result: (Element | undefined)[] = [];\n    const { nextElementSibling, previousElementSibling } = entityWrapper;\n    result.push(\n        isDelimiter(nextElementSibling, DelimiterClasses.DELIMITER_AFTER),\n        isDelimiter(previousElementSibling, DelimiterClasses.DELIMITER_BEFORE)\n    );\n\n    return result;\n}\n\nfunction isDelimiter(el: Element | null, className: string): Element | undefined {\n    return el && getDelimiterFromElement(el) && el.classList.contains(className) ? el : undefined;\n}\n\nfunction insertDelimiter(element: Element, delimiterClass: DelimiterClasses) {\n    const span = createElement(\n        {\n            tag: 'span',\n            className: delimiterClass,\n            children: [ZERO_WIDTH_SPACE],\n        },\n        element.ownerDocument\n    ) as HTMLElement;\n    if (span) {\n        const insertPosition: InsertPosition =\n            delimiterClass == DelimiterClasses.DELIMITER_AFTER ? 'afterend' : 'beforebegin';\n        element.insertAdjacentElement(insertPosition, span);\n    }\n\n    return span;\n}\n","import safeInstanceOf from '../utils/safeInstanceOf';\nimport { DelimiterClasses } from 'roosterjs-editor-types';\n\nconst ZERO_WIDTH_SPACE = '\\u200B';\n\n/**\n * Retrieves Delimiter information from a provided element.\n * @param element element to try to retrieve a delimiter\n * @returns delimiter info if it is a Delimiter, else null\n */\nexport default function getDelimiterFromElement(element: Node | null | undefined): Element | null {\n    if (!element) {\n        return null;\n    }\n    if (\n        safeInstanceOf(element, 'HTMLSpanElement') &&\n        (element.classList.contains(DelimiterClasses.DELIMITER_AFTER) ||\n            element.classList.contains(DelimiterClasses.DELIMITER_BEFORE)) &&\n        element.textContent === ZERO_WIDTH_SPACE\n    ) {\n        return element;\n    }\n\n    return null;\n}\n","import changeElementTag from '../utils/changeElementTag';\nimport contains from '../utils/contains';\nimport ContentTraverser from '../contentTraverser/ContentTraverser';\nimport createRange from '../selection/createRange';\nimport findClosestElementAncestor from '../utils/findClosestElementAncestor';\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\nimport getTagOfNode from '../utils/getTagOfNode';\nimport isNodeEmpty from '../utils/isNodeEmpty';\nimport isPositionAtBeginningOf from '../selection/isPositionAtBeginningOf';\nimport isVoidHtmlElement from '../utils/isVoidHtmlElement';\nimport LinkInlineElement from '../inlineElements/LinkInlineElement';\nimport moveChildNodes from '../utils/moveChildNodes';\nimport pasteTable from '../table/pasteTable';\nimport Position from '../selection/Position';\nimport PositionContentSearcher from '../contentTraverser/PositionContentSearcher';\nimport queryElements from '../utils/queryElements';\nimport splitTextNode from '../utils/splitTextNode';\nimport toArray from '../jsUtils/toArray';\nimport unwrap from '../utils/unwrap';\nimport wrap from '../utils/wrap';\nimport { NodeType, PositionType, QueryScope } from 'roosterjs-editor-types';\nimport { splitBalancedNodeRange } from '../utils/splitParentNode';\nimport type { BlockElement, NodePosition } from 'roosterjs-editor-types';\n\nconst NOT_EDITABLE_SELECTOR = '[contenteditable=false]';\n\nconst adjustSteps: ((\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n) => NodePosition)[] = [\n    adjustInsertPositionForHyperLink,\n    adjustInsertPositionForStructuredNode,\n    adjustInsertPositionForParagraph,\n    adjustInsertPositionForVoidElement,\n    adjustInsertPositionForMoveCursorOutOfALink,\n    adjustInsertPositionForNotEditableNode,\n    adjustInsertPositionForTable,\n];\n\n/**\n * Adjust position for A tag don't be nested inside another A tag.\n */\nfunction adjustInsertPositionForHyperLink(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    let blockElement = getBlockElementAtNode(root, position.node);\n\n    if (blockElement) {\n        // Find the first <A> tag within current block which covers current selection\n        // If there are more than one nested, let's handle the first one only since that is not a common scenario.\n        let anchor: HTMLElement | null = queryElements(\n            root,\n            'a[href]',\n            null /*forEachCallback*/,\n            QueryScope.OnSelection,\n            createRange(position)\n        ).filter((a: HTMLElement) => blockElement!.contains(a))[0];\n\n        // If this is about to insert node to an empty A tag, clear the A tag and reset position\n        if (anchor && isNodeEmpty(anchor)) {\n            position = new Position(anchor, PositionType.Before);\n            safeRemove(anchor);\n            anchor = null;\n        }\n\n        // If this is about to insert nodes which contains A tag into another A tag, need to break current A tag\n        // otherwise we will have nested A tags which is a wrong HTML structure\n        if (\n            anchor &&\n            (<ParentNode>(nodeToInsert as HTMLElement))?.querySelector &&\n            (<ParentNode>(nodeToInsert as HTMLElement))?.querySelector('a[href]')\n        ) {\n            let normalizedPosition = position.normalize();\n            let parentNode = normalizedPosition.node.parentNode!;\n            let nextNode =\n                normalizedPosition.node.nodeType == NodeType.Text\n                    ? splitTextNode(\n                          <Text>normalizedPosition.node,\n                          normalizedPosition.offset,\n                          false /*returnFirstPart*/\n                      )\n                    : normalizedPosition.isAtEnd\n                    ? normalizedPosition.node.nextSibling\n                    : normalizedPosition.node;\n            let splitter: Node | null = root.ownerDocument.createTextNode('');\n            parentNode.insertBefore(splitter, nextNode);\n\n            while (splitter && contains(anchor, splitter)) {\n                splitter = splitBalancedNodeRange(splitter);\n            }\n\n            if (splitter) {\n                position = new Position(splitter, PositionType.Before);\n                safeRemove(splitter);\n            }\n        }\n    }\n\n    return position;\n}\n\n/**\n * Adjust position for a node don't be nested inside tags like BR, LI, TD.\n */\nfunction adjustInsertPositionForStructuredNode(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    let rootNodeToInsert: Node | null = nodeToInsert;\n    let isFragment: boolean = false;\n\n    if (rootNodeToInsert.nodeType == NodeType.DocumentFragment) {\n        isFragment = true;\n        let rootNodes = toArray(rootNodeToInsert.childNodes).filter(\n            (n: ChildNode) => getTagOfNode(n) != 'BR'\n        );\n        rootNodeToInsert = rootNodes.length == 1 ? rootNodes[0] : null;\n    }\n\n    let tag = getTagOfNode(rootNodeToInsert);\n    let hasBrNextToRoot =\n        tag && rootNodeToInsert && getTagOfNode(rootNodeToInsert.nextSibling) == 'BR';\n    let listItem = findClosestElementAncestor(position.node, root, 'LI');\n    let listNode = listItem && findClosestElementAncestor(listItem, root, 'OL,UL');\n    let tdNode = findClosestElementAncestor(position.node, root, 'TD,TH');\n\n    if (tag == 'LI') {\n        tag = listNode ? getTagOfNode(listNode) : 'UL';\n        rootNodeToInsert = wrap(rootNodeToInsert!, tag);\n    }\n\n    if (\n        (tag == 'OL' || tag == 'UL') &&\n        rootNodeToInsert &&\n        getTagOfNode(rootNodeToInsert.firstChild) == 'LI'\n    ) {\n        let shouldInsertListAsText = !rootNodeToInsert.firstChild!.nextSibling && !hasBrNextToRoot;\n\n        if (hasBrNextToRoot && rootNodeToInsert.parentNode) {\n            safeRemove(rootNodeToInsert.nextSibling!);\n        }\n\n        if (shouldInsertListAsText) {\n            unwrap(rootNodeToInsert.firstChild!);\n            unwrap(rootNodeToInsert);\n        } else if (getTagOfNode(listNode) == tag) {\n            unwrap(rootNodeToInsert);\n            position = new Position(\n                listItem!,\n                isPositionAtBeginningOf(position, listItem!)\n                    ? PositionType.Before\n                    : PositionType.After\n            );\n        }\n    }\n\n    if (isFragment && tag == 'TABLE' && tdNode) {\n        pasteTable(\n            <HTMLTableCellElement>tdNode,\n            <HTMLTableElement>rootNodeToInsert,\n            position,\n            range\n        );\n        position = new Position(rootNodeToInsert!, 0);\n        moveChildNodes(nodeToInsert);\n    }\n\n    return position;\n}\n\n/**\n * Change P tag to DIV, when a new node when insert node.\n */\n\nfunction adjustInsertPositionForParagraph(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    if (getTagOfNode(position.node) == 'P') {\n        // Insert into a P tag may cause issues when the inserted content contains any block element.\n        // Change P tag to DIV to make sure it works well\n        let pos = position.normalize();\n        let div = changeElementTag(<HTMLElement>position.node, 'div');\n        if (pos.node != div) {\n            position = pos;\n        }\n    }\n\n    return position;\n}\n\n/**\n * Adjust position for a node that can have children.\n */\n\nfunction adjustInsertPositionForVoidElement(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    if (isVoidHtmlElement(position.node)) {\n        position = new Position(\n            position.node,\n            position.isAtEnd ? PositionType.After : PositionType.Before\n        );\n    }\n    return position;\n}\n\n/**\n * Adjust the position cursor out of link when a new node is inserted.\n */\n\nfunction adjustInsertPositionForMoveCursorOutOfALink(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    if (range && range.collapsed) {\n        const searcher = new PositionContentSearcher(root, Position.getStart(range));\n        const inlineElementBefore = searcher.getInlineElementBefore();\n        const inlineElementAfter = searcher.getInlineElementAfter();\n        if (inlineElementBefore instanceof LinkInlineElement) {\n            position = new Position(inlineElementBefore.getContainerNode(), PositionType.After);\n        } else if (inlineElementAfter instanceof LinkInlineElement) {\n            position = new Position(inlineElementAfter.getContainerNode(), PositionType.Before);\n        }\n    }\n    return position;\n}\n\n/**\n * Adjust the position cursor out of a not contenteditable element.\n */\nfunction adjustInsertPositionForNotEditableNode(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    if (!position.element?.isContentEditable) {\n        let nonEditableElement: HTMLElement | undefined;\n        let lastNonEditableElement: HTMLElement | null = findClosestElementAncestor(\n            position.node,\n            root,\n            NOT_EDITABLE_SELECTOR\n        );\n\n        while (lastNonEditableElement) {\n            nonEditableElement = lastNonEditableElement;\n            lastNonEditableElement = nonEditableElement?.parentElement\n                ? findClosestElementAncestor(\n                      nonEditableElement.parentElement,\n                      root,\n                      NOT_EDITABLE_SELECTOR\n                  )\n                : null;\n        }\n\n        if (nonEditableElement) {\n            position = new Position(nonEditableElement, PositionType.After);\n            return adjustInsertPositionForNotEditableNode(root, nodeToInsert, position, range);\n        }\n    }\n\n    return position;\n}\n\n/**\n * Adjust the position of a table to be one line after another table.\n */\nfunction adjustInsertPositionForTable(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    if (\n        (nodeToInsert.childNodes.length == 1 &&\n            getTagOfNode(nodeToInsert.childNodes[0]) == 'TABLE') ||\n        getTagOfNode(nodeToInsert) == 'TABLE'\n    ) {\n        const { element } = position;\n\n        const posBefore = new Position(element, PositionType.Before);\n        const rangeToTraverse = createRange(posBefore, position);\n        const contentTraverser = ContentTraverser.createSelectionTraverser(root, rangeToTraverse);\n\n        let blockElement = contentTraverser && contentTraverser.currentBlockElement;\n\n        if (blockElement) {\n            let nextBlockElement: BlockElement | null = blockElement;\n\n            while (!nextBlockElement) {\n                nextBlockElement = contentTraverser.getNextBlockElement();\n                if (nextBlockElement) {\n                    blockElement = nextBlockElement;\n                }\n            }\n\n            const prevElement = blockElement?.getEndNode();\n\n            if (prevElement && findClosestElementAncestor(prevElement, root, 'TABLE')) {\n                let tempRange = createRange(position);\n                tempRange.collapse(false /* toStart */);\n                const br = root.ownerDocument.createElement('br');\n                tempRange.insertNode(br);\n\n                tempRange = createRange(br);\n                position = Position.getEnd(tempRange);\n            }\n        }\n    }\n    return position;\n}\n\n/**\n *\n * @param root the contentDiv of the ditor\n * @param nodeToInsert the node to be inserted\n * @param position the position of the node to be inserted\n * @param range the range current or cached range of the editor\n * @returns the adjusted position of the inserted node\n */\n\nexport default function adjustInsertPositionBySteps(\n    root: HTMLElement,\n    nodeToInsert: Node,\n    position: NodePosition,\n    range: Range\n): NodePosition {\n    adjustSteps.forEach(handler => {\n        position = handler(root, nodeToInsert, position, range);\n    });\n    return position;\n}\n\nfunction safeRemove(node: Node) {\n    node?.parentNode?.removeChild(node);\n}\n","import arrayPush from '../jsUtils/arrayPush';\nimport collapseNodesInRegion from '../region/collapseNodesInRegion';\nimport getRegionsFromRange from '../region/getRegionsFromRange';\nimport getSelectionRangeInRegion from '../region/getSelectionRangeInRegion';\nimport mergeBlocksInRegion from '../region/mergeBlocksInRegion';\nimport Position from '../selection/Position';\nimport queryElements from '../utils/queryElements';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport splitTextNode from '../utils/splitTextNode';\nimport { PositionType, QueryScope, RegionType } from 'roosterjs-editor-types';\nimport type { NodePosition } from 'roosterjs-editor-types';\n\n/**\n * Delete selected content, and return the new position to select\n * @param core The EditorCore object.\n * @param range The range to delete\n */\nexport default function deleteSelectedContent(\n    root: HTMLElement,\n    range: Range\n): NodePosition | null {\n    let nodeBefore: Node | null = null;\n\n    // 1. TABLE and TR node in selected should be deleted. It is possible we don't detect them from step 2\n    // since table cells will fall in to different regions\n    const nodesToDelete: Node[] = queryElements(\n        root,\n        'table,tr',\n        null /*callback*/,\n        QueryScope.InSelection,\n        range\n    );\n\n    // 2. Loop all selected regions, find out those nodes need to be deleted and merged.\n    // We don't delete them directly here because delete node from one region may cause selection range\n    // another region becomes invalid. So we delay the process of deletion.\n    const regions = getRegionsFromRange(root, range, RegionType.Table);\n    const nodesPairToMerge = regions\n        .map(region => {\n            const regionRange = getSelectionRangeInRegion(region);\n            if (!regionRange) {\n                return null;\n            }\n\n            const {\n                startContainer,\n                endContainer,\n                startOffset,\n                endOffset,\n                commonAncestorContainer,\n            } = regionRange;\n\n            // Disallow merging of readonly elements\n            if (\n                safeInstanceOf(commonAncestorContainer, 'HTMLElement') &&\n                !commonAncestorContainer.isContentEditable\n            ) {\n                return null;\n            }\n\n            // Make sure there are node before and after the merging point.\n            // This is required by mergeBlocksInRegion API.\n            // This may create some empty text node as anchor\n            let [beforeEnd, afterEnd] = ensureBeforeAndAfter(\n                endContainer,\n                endOffset,\n                false /*isStart*/\n            );\n            let [beforeStart, afterStart] = ensureBeforeAndAfter(\n                startContainer,\n                startOffset,\n                true /*isStart*/\n            );\n            nodeBefore = nodeBefore || beforeStart;\n\n            // Find out all nodes to be deleted\n            const nodes = collapseNodesInRegion(region, [afterStart, beforeEnd]);\n            arrayPush(nodesToDelete, nodes);\n            return { region, beforeStart, afterEnd };\n        })\n        .filter(x => !!x);\n\n    // 3. Delete all nodes that we found, whose parent is editable\n    nodesToDelete.forEach(\n        node => node.parentElement?.isContentEditable && node.parentElement.removeChild(node)\n    );\n\n    // 4. Merge lines for each region, so that after we don't see extra line breaks\n    nodesPairToMerge.forEach(nodes => {\n        if (nodes) {\n            mergeBlocksInRegion(nodes.region, nodes.beforeStart, nodes.afterEnd);\n        }\n    });\n\n    return nodeBefore && new Position(nodeBefore, PositionType.End);\n}\n\nfunction ensureBeforeAndAfter(node: Node, offset: number, isStart: boolean) {\n    if (safeInstanceOf(node, 'Text')) {\n        const newNode = splitTextNode(node, offset, isStart);\n        return isStart ? [newNode, node] : [node, newNode];\n    } else {\n        let nodeBefore: Node | null = node.childNodes[offset - 1];\n        let nodeAfter: Node | null = node.childNodes[offset];\n\n        // Condition 1: node child nodes\n        // (\"I\" means cursor; \"o\" means a DOM node, \"[ ]\" means a parent node)\n        // [ I ]\n        // need to use parent node instead to convert to condition 2\n        if (!nodeBefore && !nodeAfter) {\n            if (isStart) {\n                nodeAfter = node;\n                nodeBefore = nodeAfter.previousSibling;\n            } else {\n                nodeBefore = node;\n                nodeAfter = nodeBefore.nextSibling;\n            }\n        }\n\n        // Condition 2: Either nodeBefore or nodeAfter is null (XOR case)\n        // [ o I ]  or [ I o]\n        // need to add empty text node to convert to condition 3\n        if ((nodeBefore || nodeAfter) && (!nodeBefore || !nodeAfter)) {\n            const emptyNode = node.ownerDocument!.createTextNode('');\n            (nodeBefore || nodeAfter)?.parentNode?.insertBefore(emptyNode, nodeAfter);\n            if (nodeBefore) {\n                nodeAfter = emptyNode;\n            } else {\n                nodeBefore = emptyNode;\n            }\n        }\n\n        // Condition 3: Both nodeBefore and nodeAfter are not null\n        // [o I o]\n        // return the nodes\n        return [nodeBefore!, nodeAfter!];\n    }\n}\n","import ContentTraverser from '../contentTraverser/ContentTraverser';\n\n/**\n * get block element's text content.\n * @param rootNode Root node that the get the textContent of.\n * @returns text content of given text content.\n */\nexport default function getTextContent(rootNode: Node): string {\n    const traverser = ContentTraverser.createBodyTraverser(rootNode);\n    let block = traverser && traverser.currentBlockElement;\n    let textContent: string[] = [];\n\n    while (block) {\n        textContent.push(block.getTextContent());\n        block = traverser.getNextBlockElement();\n    }\n\n    return textContent.join('\\n');\n}\n","import { EntityClasses } from 'roosterjs-editor-types';\n\nconst CONTENT_EDITABLE = 'contenteditable';\n\n/**\n * Commit information of an entity (type, isReadonly, id) into the wrapper node as CSS Classes\n * @param wrapper The entity wrapper element\n * @param type Entity type\n * @param isReadonly Whether this is a readonly entity\n * @param id Optional Id of the entity\n */\nexport default function commitEntity(\n    wrapper: HTMLElement,\n    type: string,\n    isReadonly: boolean,\n    id?: string\n) {\n    if (wrapper) {\n        wrapper.className = `${EntityClasses.ENTITY_INFO_NAME} ${\n            EntityClasses.ENTITY_TYPE_PREFIX\n        }${type} ${id ? `${EntityClasses.ENTITY_ID_PREFIX}${id} ` : ''}${\n            EntityClasses.ENTITY_READONLY_PREFIX\n        }${isReadonly ? '1' : '0'}`;\n\n        if (isReadonly) {\n            wrapper.contentEditable = 'false';\n        } else if (wrapper.getAttribute(CONTENT_EDITABLE)) {\n            wrapper.removeAttribute(CONTENT_EDITABLE);\n        }\n    }\n}\n","import getEntityFromElement from './getEntityFromElement';\nimport getEntitySelector from './getEntitySelector';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport { EntityClasses } from 'roosterjs-editor-types';\nimport type { Entity, KnownEntityItem } from 'roosterjs-editor-types';\n\nconst EntityPlaceHolderTagName = 'ENTITY-PLACEHOLDER';\n\n/**\n * @deprecated\n * Create a placeholder comment node for entity\n * @param entity The entity to create placeholder from\n * @returns A placeholder comment node as\n */\nexport function createEntityPlaceholder(entity: Entity): HTMLElement {\n    const placeholder = entity.wrapper.ownerDocument.createElement(EntityPlaceHolderTagName);\n    placeholder.id = entity.id;\n\n    return placeholder;\n}\n\n/**\n * Move content from a container into a new Document fragment, and try keep entities to be reusable by creating placeholder\n * for them in the document fragment.\n * If an entity is directly under root container, the whole entity can be reused and no need to move it at all.\n * If an entity is not directly under root container, it is still reusable, but it may need some movement.\n * In any case, entities will be replaced with a placeholder in the target document fragment.\n * We will use an entity map (the \"entities\" parameter) to save the map from entity id to its wrapper element.\n * @param root The root element\n * @param entities A map from entity id to entity wrapper element\n * @returns A new document fragment contains all the content and entity placeholders\n */\nexport function moveContentWithEntityPlaceholders(\n    root: HTMLDivElement,\n    entities: Record<string, HTMLElement>\n) {\n    const entitySelector = getEntitySelector();\n    const fragment = root.ownerDocument.createDocumentFragment();\n    let next: Node | null = null;\n\n    for (let child: Node | null = root.firstChild; child; child = next) {\n        let entity: Entity | null;\n        let nodeToAppend = child;\n\n        next = child.nextSibling;\n\n        if (safeInstanceOf(child, 'HTMLElement')) {\n            if ((entity = getEntityFromElement(child))) {\n                nodeToAppend = getPlaceholder(entity, entities);\n            } else {\n                child.querySelectorAll<HTMLElement>(entitySelector).forEach(wrapper => {\n                    if ((entity = getEntityFromElement(wrapper))) {\n                        const placeholder = getPlaceholder(entity, entities);\n\n                        wrapper.parentNode?.replaceChild(placeholder, wrapper);\n                    }\n                });\n            }\n        }\n\n        fragment.appendChild(nodeToAppend);\n    }\n\n    fragment.normalize();\n\n    return fragment;\n}\n\n/**\n * Restore HTML content from a document fragment that may contain entity placeholders.\n * @param source Source document fragment that contains HTML content and entity placeholders\n * @param target Target container, usually to be editor root container\n * @param entities A map from entity id to entity wrapper, used for reusing existing DOM structure for entity\n * @param insertClonedNode When pass true, merge with a cloned copy of the nodes from source fragment rather than the nodes themselves @default false\n */\nexport function restoreContentWithEntityPlaceholder(\n    source: ParentNode,\n    target: HTMLElement,\n    entities: Record<string, HTMLElement | KnownEntityItem> | null,\n    insertClonedNode?: boolean\n) {\n    let anchor = target.firstChild;\n\n    const entitySelector = getEntitySelector();\n\n    for (let current = source.firstChild; current; ) {\n        const next = current.nextSibling;\n        const wrapper = tryGetWrapperFromEntityPlaceholder(entities, current);\n\n        if (wrapper) {\n            anchor = removeUntil(anchor, wrapper);\n\n            if (anchor) {\n                anchor = anchor.nextSibling;\n            } else {\n                target.appendChild(wrapper);\n            }\n        } else {\n            const nodeToInsert = insertClonedNode ? current.cloneNode(true /*deep*/) : current;\n            target.insertBefore(nodeToInsert, anchor);\n\n            if (safeInstanceOf(nodeToInsert, 'HTMLElement')) {\n                nodeToInsert.querySelectorAll(entitySelector).forEach(placeholder => {\n                    const wrapper = tryGetWrapperFromEntityPlaceholder(entities, placeholder);\n\n                    if (wrapper) {\n                        placeholder.parentNode?.replaceChild(wrapper, placeholder);\n                    }\n                });\n            }\n        }\n\n        current = next;\n    }\n\n    removeUntil(anchor);\n}\n\nfunction removeUntil(anchor: ChildNode | null, nodeToStop?: HTMLElement) {\n    while (anchor && (!nodeToStop || anchor != nodeToStop)) {\n        const nodeToRemove = anchor;\n        anchor = anchor.nextSibling;\n        nodeToRemove.parentNode?.removeChild(nodeToRemove);\n    }\n    return anchor;\n}\n\nfunction tryGetWrapperFromEntityPlaceholder(\n    entities: Record<string, HTMLElement | KnownEntityItem> | null,\n    node: Node\n): HTMLElement | null {\n    const id =\n        safeInstanceOf(node, 'HTMLElement') &&\n        node.classList.contains(EntityClasses.ENTITY_INFO_NAME) &&\n        getEntityFromElement(node as HTMLElement)?.id;\n    const item = id ? entities?.[id] : null;\n\n    return !item\n        ? null\n        : safeInstanceOf(item, 'HTMLElement')\n        ? item\n        : item?.canPersist\n        ? item.element\n        : null;\n}\n\nfunction getPlaceholder(entity: Entity, entities: Record<string, HTMLElement>) {\n    entities[entity.id] = entity.wrapper;\n\n    return entity.wrapper.cloneNode(true /*deep*/);\n}\n","import { EntityClasses } from 'roosterjs-editor-types';\nimport type { Entity } from 'roosterjs-editor-types';\n\n/**\n * Get Entity object from an entity root element\n * @param element The entity root element. If this element is not an entity root element,\n * it will return null\n */\nexport default function getEntityFromElement(element: HTMLElement): Entity | null {\n    let isEntity = false;\n    let type = '';\n    let id = '';\n    let isReadonly = false;\n\n    element?.className?.split(' ').forEach(name => {\n        if (name == EntityClasses.ENTITY_INFO_NAME) {\n            isEntity = true;\n        } else if (name.indexOf(EntityClasses.ENTITY_TYPE_PREFIX) == 0) {\n            type = name.substr(EntityClasses.ENTITY_TYPE_PREFIX.length);\n        } else if (name.indexOf(EntityClasses.ENTITY_ID_PREFIX) == 0) {\n            id = name.substr(EntityClasses.ENTITY_ID_PREFIX.length);\n        } else if (name.indexOf(EntityClasses.ENTITY_READONLY_PREFIX) == 0) {\n            isReadonly = name.substr(EntityClasses.ENTITY_READONLY_PREFIX.length) == '1';\n        }\n    });\n\n    return isEntity\n        ? {\n              wrapper: element,\n              id,\n              type,\n              isReadonly,\n          }\n        : null;\n}\n","import { EntityClasses } from 'roosterjs-editor-types';\n\n/**\n * Get a selector string for specified entity type and id\n * @param type (Optional) Type of entity\n * @param id (Optional) Id of entity\n */\nexport default function getEntitySelector(type?: string, id?: string): string {\n    const typeSelector = type ? `.${EntityClasses.ENTITY_TYPE_PREFIX}${type}` : '';\n    const idSelector = id ? `.${EntityClasses.ENTITY_ID_PREFIX}${id}` : '';\n    return '.' + EntityClasses.ENTITY_INFO_NAME + typeSelector + idSelector;\n}\n","import type { PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * Gets the cached event data by cache key from event object if there is already one.\n * Otherwise, call getter function to create one, and cache it.\n * @param event The event object\n * @param key Cache key string, need to be unique\n * @param getter Getter function to get the object when it is not in cache yet\n */\nexport default function cacheGetEventData<T>(\n    event: PluginEvent | null,\n    key: string,\n    getter: () => T\n): T {\n    let result =\n        event && event.eventDataCache && event.eventDataCache.hasOwnProperty(key)\n            ? <T>event.eventDataCache[key]\n            : getter();\n    if (event) {\n        event.eventDataCache = event.eventDataCache || {};\n        event.eventDataCache[key] = result;\n    }\n\n    return result;\n}\n","import type { PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * Clear a cached object by its key from an event object\n * @param event The event object\n * @param key The cache key\n */\nexport default function clearEventDataCache(event: PluginEvent, key?: string): void {\n    if (event && event.eventDataCache) {\n        if (key && event.eventDataCache.hasOwnProperty(key)) {\n            delete event.eventDataCache[key];\n        } else if (!key) {\n            event.eventDataCache = {};\n        }\n    }\n}\n","import isModifierKey from './isModifierKey';\n\n/**\n * Returns true when the event was fired from a key that produces a character value, otherwise false\n * This detection is not 100% accurate. event.key is not fully supported by all browsers, and in some browsers (e.g. IE),\n * event.key is longer than 1 for num pad input. But here we just want to improve performance as much as possible.\n * So if we missed some case here it is still acceptable.\n * @param event The keyboard event object\n */\nexport default function isCharacterValue(event: KeyboardEvent): boolean {\n    return !isModifierKey(event) && !!event.key && event.key.length == 1;\n}\n","import { Browser } from '../utils/Browser';\n\nconst isCtrlOrMetaPressedImpl: (event: KeyboardEvent | MouseEvent) => boolean = Browser.isMac\n    ? event => event.metaKey\n    : event => event.ctrlKey;\n\n/**\n * Check if Ctrl key (Windows) or Meta key (Mac) is pressed for the given Event\n * @param event A Keyboard event or Mouse event object\n * @returns True if Ctrl key is pressed on Windows or Meta key is pressed on Mac\n */\nexport default function isCtrlOrMetaPressed(event: KeyboardEvent | MouseEvent): boolean {\n    return isCtrlOrMetaPressedImpl(event);\n}\n","const CTRL_CHAR_CODE = 'Control';\nconst ALT_CHAR_CODE = 'Alt';\nconst META_CHAR_CODE = 'Meta';\n\n/**\n * Returns true when the event was fired from a modifier key, otherwise false\n * @param event The keyboard event object\n */\nexport default function isModifierKey(event: KeyboardEvent): boolean {\n    const isCtrlKey = event.ctrlKey || event.key === CTRL_CHAR_CODE;\n    const isAltKey = event.altKey || event.key === ALT_CHAR_CODE;\n    const isMetaKey = event.metaKey || event.key === META_CHAR_CODE;\n\n    return isCtrlKey || isAltKey || isMetaKey;\n}\n","import changeElementTag from '../utils/changeElementTag';\nimport getInheritableStyles from './getInheritableStyles';\nimport getObjectKeys from '../jsUtils/getObjectKeys';\nimport getPredefinedCssForElement from './getPredefinedCssForElement';\nimport getStyles from '../style/getStyles';\nimport getTagOfNode from '../utils/getTagOfNode';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport setStyles from '../style/setStyles';\nimport toArray from '../jsUtils/toArray';\nimport { cloneObject } from './cloneObject';\nimport { isCssVariable, processCssVariable } from './processCssVariable';\nimport { NodeType } from 'roosterjs-editor-types';\nimport {\n    getAllowedAttributes,\n    getAllowedCssClassesRegex,\n    getTagReplacement,\n    getDefaultStyleValues,\n    getStyleCallbacks,\n} from './getAllowedValues';\nimport type {\n    AttributeCallbackMap,\n    CssStyleCallbackMap,\n    ElementCallbackMap,\n    HtmlSanitizerOptions,\n    PredefinedCssMap,\n    SanitizeHtmlOptions,\n    StringMap,\n} from 'roosterjs-editor-types';\n\n/**\n * HTML sanitizer class provides two features:\n * 1. Convert global CSS to inline CSS\n * 2. Sanitize an HTML document, remove unnecessary/dangerous attribute/nodes\n */\nexport default class HtmlSanitizer {\n    /**\n     * @deprecated Use new HtmlSanitizer().convertGlobalCssToInlineCss() instead\n     * Convert global CSS to inline CSS if any\n     * @param html HTML source\n     * @param additionalStyleNodes (Optional) additional HTML STYLE elements used as global CSS\n     */\n    static convertInlineCss(html: string, additionalStyleNodes?: HTMLStyleElement[]) {\n        let sanitizer = new HtmlSanitizer({\n            additionalGlobalStyleNodes: additionalStyleNodes,\n        });\n        return sanitizer.exec(html, true /*convertCssOnly*/);\n    }\n\n    /**\n     * @deprecated Use new HtmlSanitizer().sanitize() instead\n     * Sanitize HTML string, remove any unused HTML node/attribute/CSS.\n     * @param html HTML source string\n     * @param options Options used for this sanitizing process\n     */\n    static sanitizeHtml(html: string, options?: SanitizeHtmlOptions) {\n        options = options || {};\n        let sanitizer = new HtmlSanitizer(options);\n        let currentStyles = safeInstanceOf(options.currentElementOrStyle, 'HTMLElement')\n            ? getInheritableStyles(options.currentElementOrStyle)\n            : options.currentElementOrStyle;\n        return sanitizer.exec(html, options.convertCssOnly, currentStyles);\n    }\n\n    private elementCallbacks: ElementCallbackMap;\n    private styleCallbacks: CssStyleCallbackMap;\n    private attributeCallbacks: AttributeCallbackMap;\n    private tagReplacements: Record<string, string | null>;\n    private allowedAttributes: string[];\n    private allowedCssClassesRegex: RegExp | null;\n    private defaultStyleValues: StringMap;\n    private additionalPredefinedCssForElement: PredefinedCssMap | null;\n    private additionalGlobalStyleNodes: HTMLStyleElement[];\n    private preserveHtmlComments: boolean;\n    private unknownTagReplacement: string | null;\n\n    /**\n     * Construct a new instance of HtmlSanitizer\n     * @param options Options for HtmlSanitizer\n     */\n    constructor(options?: HtmlSanitizerOptions) {\n        options = options || {};\n        this.elementCallbacks = cloneObject(options.elementCallbacks);\n        this.styleCallbacks = getStyleCallbacks(options.cssStyleCallbacks);\n        this.attributeCallbacks = cloneObject(options.attributeCallbacks);\n        this.tagReplacements = getTagReplacement(options.additionalTagReplacements);\n        this.allowedAttributes = getAllowedAttributes(options.additionalAllowedAttributes);\n        this.allowedCssClassesRegex = getAllowedCssClassesRegex(\n            options.additionalAllowedCssClasses\n        );\n        this.defaultStyleValues = getDefaultStyleValues(options.additionalDefaultStyleValues);\n        this.additionalPredefinedCssForElement = options.additionalPredefinedCssForElement || null;\n        this.additionalGlobalStyleNodes = options.additionalGlobalStyleNodes || [];\n        this.preserveHtmlComments = options.preserveHtmlComments || false;\n        this.unknownTagReplacement = options.unknownTagReplacement || null;\n    }\n\n    /**\n     * @deprecated Use HtmlSanitizer.convertGlobalCssToInlineCss() and HtmlSanitizer.sanitize() instead\n     * Sanitize HTML string\n     * This function will do the following work:\n     * 1. Convert global CSS into inline CSS\n     * 2. Remove dangerous HTML tags and attributes\n     * 3. Remove useless CSS properties\n     * @param html The input HTML\n     * @param convertInlineCssOnly Whether only convert inline css and skip html content sanitizing\n     * @param currentStyles Current inheritable CSS styles\n     */\n    exec(html: string, convertCssOnly?: boolean, currentStyles?: StringMap): string {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(html || '', 'text/html');\n\n        if (doc && doc.body && doc.body.firstChild) {\n            this.convertGlobalCssToInlineCss(doc);\n            if (!convertCssOnly) {\n                this.sanitize(doc.body, currentStyles);\n            }\n        }\n        return (doc && doc.body && doc.body.innerHTML) || '';\n    }\n\n    /**\n     * Sanitize an HTML element, remove unnecessary or dangerous elements/attribute/CSS rules\n     * @param rootNode Root node to sanitize\n     * @param currentStyles Current CSS styles. Inheritable styles in the given node which has\n     * the same value with current styles will be ignored.\n     */\n    sanitize(rootNode: Node, currentStyles?: StringMap) {\n        if (!rootNode) {\n            return '';\n        }\n        currentStyles = cloneObject(currentStyles, getInheritableStyles(null));\n        this.processNode(rootNode, currentStyles, {});\n    }\n\n    /**\n     * Convert global CSS into inline CSS\n     * @param rootNode The HTML Document\n     */\n    convertGlobalCssToInlineCss(rootNode: ParentNode) {\n        let styleNodes = toArray(rootNode.querySelectorAll('style'));\n        let styleSheets = this.additionalGlobalStyleNodes\n            .reverse()\n            .map(node => node.sheet as CSSStyleSheet)\n            .concat(styleNodes.map(node => node.sheet as CSSStyleSheet).reverse())\n            .filter(sheet => sheet);\n        for (let styleSheet of styleSheets) {\n            for (let j = styleSheet.cssRules.length - 1; j >= 0; j--) {\n                // Skip any none-style rule, i.e. @page\n                let styleRule = styleSheet.cssRules[j] as CSSStyleRule;\n                let text = styleRule && styleRule.style ? styleRule.style.cssText : null;\n                if (styleRule.type != CSSRule.STYLE_RULE || !text || !styleRule.selectorText) {\n                    continue;\n                }\n                // Make sure the selector is not empty\n                for (let selector of styleRule.selectorText.split(',')) {\n                    if (!selector || !selector.trim() || selector.indexOf(':') >= 0) {\n                        continue;\n                    }\n                    let nodes = toArray(rootNode.querySelectorAll(selector));\n                    // Always put existing styles after so that they have higher priority\n                    // Which means if both global style and inline style apply to the same element,\n                    // inline style will have higher priority\n                    nodes.forEach(node =>\n                        node.setAttribute('style', text + (node.getAttribute('style') || ''))\n                    );\n                }\n            }\n        }\n\n        styleNodes.forEach(node => {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        });\n    }\n\n    private processNode(node: Node, currentStyle: StringMap, context: Object) {\n        const nodeType = node.nodeType;\n        const isElement = nodeType == NodeType.Element;\n        const isText = nodeType == NodeType.Text;\n        const isFragment = nodeType == NodeType.DocumentFragment;\n        const isComment = nodeType == NodeType.Comment;\n\n        let shouldKeep = false;\n\n        if (isElement) {\n            const tag = getTagOfNode(node);\n            const callback = this.elementCallbacks[tag];\n            let replacement: string | null | undefined = this.tagReplacements[tag.toLowerCase()];\n\n            if (replacement === undefined) {\n                replacement = this.unknownTagReplacement;\n            }\n\n            if (callback) {\n                shouldKeep = callback(node as HTMLElement, context);\n            } else if (tag.indexOf(':') > 0) {\n                shouldKeep = true;\n            } else if (tag == replacement || replacement == '*') {\n                shouldKeep = true;\n            } else if (replacement && /^[a-zA-Z][\\w\\-]*$/.test(replacement)) {\n                node = changeElementTag(node as HTMLElement, replacement)!;\n                shouldKeep = true;\n            }\n        } else if (isText) {\n            const whiteSpace = currentStyle['white-space'];\n            shouldKeep =\n                whiteSpace == 'pre' ||\n                whiteSpace == 'pre-line' ||\n                whiteSpace == 'pre-wrap' ||\n                !/^[\\r\\n]*$/g.test(node.nodeValue || '');\n        } else if (isFragment) {\n            shouldKeep = true;\n        } else if (isComment) {\n            shouldKeep = this.preserveHtmlComments;\n        } else {\n            shouldKeep = false;\n        }\n\n        if (!shouldKeep) {\n            node.parentNode?.removeChild(node);\n        } else if (\n            isText &&\n            (currentStyle['white-space'] == 'pre' || currentStyle['white-space'] == 'pre-wrap')\n        ) {\n            node.nodeValue = (node.nodeValue || '')\n                .replace(/^ /gm, '\\u00A0')\n                .replace(/ {2}/g, ' \\u00A0');\n        } else if (isElement || isFragment) {\n            let thisStyle = cloneObject(currentStyle);\n            let element = <HTMLElement>node;\n            if (isElement) {\n                this.processAttributes(element, context);\n                this.preprocessCss(element, thisStyle);\n                this.processCss(element, thisStyle, context);\n            }\n\n            let child: Node | null = element.firstChild;\n            let next: Node | null;\n            for (; child; child = next) {\n                next = child.nextSibling;\n                this.processNode(child, thisStyle, context);\n            }\n        }\n    }\n\n    private preprocessCss(element: HTMLElement, thisStyle: StringMap) {\n        const predefinedStyles = getPredefinedCssForElement(\n            element,\n            this.additionalPredefinedCssForElement\n        );\n        if (predefinedStyles) {\n            getObjectKeys(predefinedStyles).forEach(name => {\n                thisStyle[name] = predefinedStyles[name];\n            });\n        }\n    }\n\n    private processCss(element: HTMLElement, thisStyle: StringMap, context: Object) {\n        const styles = getStyles(element);\n        getObjectKeys(styles).forEach(name => {\n            let value = styles[name];\n            let callback = this.styleCallbacks[name];\n            let isInheritable = thisStyle[name] != undefined;\n            let keep = true;\n\n            if (keep && !!callback) {\n                keep = callback(value, element, thisStyle, context);\n            }\n\n            if (keep && isCssVariable(value)) {\n                value = processCssVariable(value);\n                keep = !!value;\n            }\n\n            keep =\n                keep &&\n                value != 'inherit' &&\n                value.indexOf('expression') < 0 &&\n                name.substr(0, 1) != '-' &&\n                this.defaultStyleValues[name] != value &&\n                ((isInheritable && value != thisStyle[name]) ||\n                    (!isInheritable && value != 'initial' && value != 'normal'));\n            if (keep && isInheritable) {\n                thisStyle[name] = value;\n            }\n\n            if (keep) {\n                styles[name] = value;\n            } else {\n                delete styles[name];\n            }\n        });\n\n        setStyles(element, styles);\n    }\n\n    private processAttributes(element: HTMLElement, context: Object) {\n        for (let i = element.attributes.length - 1; i >= 0; i--) {\n            let attribute = element.attributes[i];\n            let name = attribute.name.toLowerCase().trim();\n            let value = attribute.value;\n            let callback = this.attributeCallbacks[name];\n\n            let newValue = callback\n                ? callback(value, element, context)\n                : this.allowedAttributes.indexOf(name) >= 0 || name.indexOf('data-') == 0\n                ? value\n                : null;\n\n            if (name == 'class' && this.allowedCssClassesRegex) {\n                newValue = this.processCssClass(value, newValue);\n            }\n\n            if (\n                newValue === null ||\n                newValue === undefined ||\n                newValue.match(/s\\n*c\\n*r\\n*i\\n*p\\n*t\\n*:/i) // match script: with any NewLine inside. Browser will ignore those NewLine char and still treat it as script prefix\n            ) {\n                element.removeAttribute(name);\n            } else {\n                attribute.value = newValue;\n            }\n        }\n    }\n\n    private processCssClass(originalValue: string, calculatedValue: string | null): string | null {\n        const originalClasses = originalValue ? originalValue.split(' ') : [];\n        const calculatedClasses = calculatedValue ? calculatedValue.split(' ') : [];\n\n        originalClasses.forEach(className => {\n            if (\n                this.allowedCssClassesRegex?.test(className) &&\n                calculatedClasses.indexOf(className) < 0\n            ) {\n                calculatedClasses.push(className);\n            }\n        });\n\n        return calculatedClasses?.length > 0 ? calculatedClasses.join(' ') : null;\n    }\n}\n","/**\n * Chain all callback for an attribute together\n * @param map The source callback map\n * @param name Name of the property to chain\n * @param newCallback A new callback to process the given name on the given map.\n * If the same property got multiple callbacks, the final return value will be the return\n * value of the latest callback\n */\nexport default function chainSanitizerCallback<TOriginalArgs extends any[], TChainedFn extends (...args: TOriginalArgs) => R,  R>(\n    map: Record<string, (...args: TOriginalArgs) => R>,\n    name: string,\n    newCallback: TChainedFn\n) {\n    if (!map[name]) {\n        map[name] = newCallback;\n    } else {\n        const originalCallback = map[name];\n        map[name] = (...args: TOriginalArgs) => {\n            originalCallback(...args);\n            return newCallback(...args);\n        };\n    }\n}\n","import getObjectKeys from '../jsUtils/getObjectKeys';\n\nfunction nativeClone<T>(\n    source: Record<string, T> | null | undefined,\n    existingObj?: Record<string, T>\n): Record<string, T> {\n    return Object.assign(existingObj || {}, source);\n}\n\nfunction customClone<T>(\n    source: Record<string, T> | null | undefined,\n    existingObj?: Record<string, T>\n): Record<string, T> {\n    let result: Record<string, T> = existingObj || {};\n    if (source) {\n        for (let key of getObjectKeys(source)) {\n            result[key] = source[key];\n        }\n    }\n    return result;\n}\n\n// @ts-ignore Ignore this error for IE compatibility\nconst cloneObjectImpl = Object.assign ? nativeClone : customClone;\n\n/**\n * @internal\n */\nexport function cloneObject<T>(\n    source: Record<string, T> | null | undefined,\n    existingObj?: Record<string, T>\n): Record<string, T> {\n    return cloneObjectImpl(source, existingObj);\n}\n","import type { HtmlSanitizerOptions } from 'roosterjs-editor-types';\n\n/**\n * Create default value of HtmlSanitizerOptions with every property set\n */\nexport default function createDefaultHtmlSanitizerOptions(): Required<HtmlSanitizerOptions> {\n    return {\n        elementCallbacks: {},\n        attributeCallbacks: {},\n        cssStyleCallbacks: {},\n        additionalTagReplacements: {},\n        additionalAllowedAttributes: [],\n        additionalAllowedCssClasses: [],\n        additionalDefaultStyleValues: {},\n        additionalGlobalStyleNodes: [],\n        additionalPredefinedCssForElement: {},\n        preserveHtmlComments: false,\n        unknownTagReplacement: null,\n    };\n}\n","import getObjectKeys from '../jsUtils/getObjectKeys';\nimport { cloneObject } from './cloneObject';\nimport type { CssStyleCallbackMap, StringMap } from 'roosterjs-editor-types';\n\nconst HTML_TAG_REPLACEMENT: Record<string, string | null> = {\n    // Allowed tags\n    a: '*',\n    abbr: '*',\n    address: '*',\n    area: '*',\n    article: '*',\n    aside: '*',\n    b: '*',\n    bdi: '*',\n    bdo: '*',\n    blockquote: '*',\n    body: '*',\n    br: '*',\n    button: '*',\n    canvas: '*',\n    caption: '*',\n    center: '*',\n    cite: '*',\n    code: '*',\n    col: '*',\n    colgroup: '*',\n    data: '*',\n    datalist: '*',\n    dd: '*',\n    del: '*',\n    details: '*',\n    dfn: '*',\n    dialog: '*',\n    dir: '*',\n    div: '*',\n    dl: '*',\n    dt: '*',\n    em: '*',\n    fieldset: '*',\n    figcaption: '*',\n    figure: '*',\n    font: '*',\n    footer: '*',\n    h1: '*',\n    h2: '*',\n    h3: '*',\n    h4: '*',\n    h5: '*',\n    h6: '*',\n    head: '*',\n    header: '*',\n    hgroup: '*',\n    hr: '*',\n    html: '*',\n    i: '*',\n    img: '*',\n    input: '*',\n    ins: '*',\n    kbd: '*',\n    label: '*',\n    legend: '*',\n    li: '*',\n    main: '*',\n    map: '*',\n    mark: '*',\n    menu: '*',\n    menuitem: '*',\n    meter: '*',\n    nav: '*',\n    ol: '*',\n    optgroup: '*',\n    option: '*',\n    output: '*',\n    p: '*',\n    picture: '*',\n    pre: '*',\n    progress: '*',\n    q: '*',\n    rp: '*',\n    rt: '*',\n    ruby: '*',\n    s: '*',\n    samp: '*',\n    section: '*',\n    select: '*',\n    small: '*',\n    span: '*',\n    strike: '*',\n    strong: '*',\n    sub: '*',\n    summary: '*',\n    sup: '*',\n    table: '*',\n    tbody: '*',\n    td: '*',\n    textarea: '*',\n    tfoot: '*',\n    th: '*',\n    thead: '*',\n    time: '*',\n    tr: '*',\n    tt: '*',\n    u: '*',\n    ul: '*',\n    var: '*',\n    wbr: '*',\n    xmp: '*',\n\n    // Replaced tags:\n    form: 'SPAN',\n\n    // Disallowed tags\n    applet: null,\n    audio: null,\n    base: null,\n    basefont: null,\n    embed: null,\n    frame: null,\n    frameset: null,\n    iframe: null,\n    link: null,\n    meta: null,\n    noscript: null,\n    object: null,\n    param: null,\n    script: null,\n    slot: null,\n    source: null,\n    style: null,\n    template: null,\n    title: null,\n    track: null,\n    video: null,\n};\n\nconst ALLOWED_HTML_ATTRIBUTES = (\n    'accept,align,alt,checked,cite,color,cols,colspan,contextmenu,' +\n    'coords,datetime,default,dir,dirname,disabled,download,face,headers,height,hidden,high,href,' +\n    'hreflang,ismap,kind,label,lang,list,low,max,maxlength,media,min,multiple,open,optimum,pattern,' +\n    'placeholder,readonly,rel,required,reversed,rows,rowspan,scope,selected,shape,size,sizes,span,' +\n    'spellcheck,src,srclang,srcset,start,step,style,tabindex,target,title,translate,type,usemap,valign,value,' +\n    'width,wrap,bgColor'\n).split(',');\n\nconst DEFAULT_STYLE_VALUES: { [name: string]: string } = {\n    'background-color': 'transparent',\n    'border-bottom-color': 'rgb(0, 0, 0)',\n    'border-bottom-style': 'none',\n    'border-bottom-width': '0px',\n    'border-image-outset': '0',\n    'border-image-repeat': 'stretch',\n    'border-image-slice': '100%',\n    'border-image-source': 'none',\n    'border-image-width': '1',\n    'border-left-color': 'rgb(0, 0, 0)',\n    'border-left-style': 'none',\n    'border-left-width': '0px',\n    'border-right-color': 'rgb(0, 0, 0)',\n    'border-right-style': 'none',\n    'border-right-width': '0px',\n    'border-top-color': 'rgb(0, 0, 0)',\n    'border-top-style': 'none',\n    'border-top-width': '0px',\n    'outline-color': 'transparent',\n    'outline-style': 'none',\n    'outline-width': '0px',\n    overflow: 'visible',\n    '-webkit-text-stroke-width': '0px',\n    'word-wrap': 'break-word',\n    'margin-left': '0px',\n    'margin-right': '0px',\n    padding: '0px',\n    'padding-top': '0px',\n    'padding-left': '0px',\n    'padding-right': '0px',\n    'padding-bottom': '0px',\n    border: '0px',\n    'border-top': '0px',\n    'border-left': '0px',\n    'border-right': '0px',\n    'border-bottom': '0px',\n    'vertical-align': 'baseline',\n    float: 'none',\n};\n\n// This is to preserve entity related CSS classes when paste.\nconst ALLOWED_CSS_CLASSES: string[] = [];\n\n/**\n * @internal\n */\nexport function getTagReplacement(\n    additionalReplacements: Record<string, string | null> | undefined\n): Record<string, string | null> {\n    const result = { ...HTML_TAG_REPLACEMENT };\n    const replacements = additionalReplacements || {};\n    getObjectKeys(replacements).forEach(key => {\n        if (key) {\n            result[key.toLowerCase()] = replacements[key];\n        }\n    });\n\n    return result;\n}\n\n/**\n * @internal\n */\nexport function getAllowedAttributes(additionalAttributes: string[] | undefined): string[] {\n    return unique(ALLOWED_HTML_ATTRIBUTES.concat(additionalAttributes || [])).map(attr =>\n        attr.toLocaleLowerCase()\n    );\n}\n\n/**\n * @internal\n */\nexport function getAllowedCssClassesRegex(\n    additionalCssClasses: string[] | undefined\n): RegExp | null {\n    const patterns = ALLOWED_CSS_CLASSES.concat(additionalCssClasses || []);\n    return patterns.length > 0 ? new RegExp(patterns.join('|')) : null;\n}\n\n/**\n * @internal\n */\nexport function getDefaultStyleValues(additionalDefaultStyles: StringMap | undefined): StringMap {\n    let result = cloneObject(DEFAULT_STYLE_VALUES);\n    if (additionalDefaultStyles) {\n        Object.keys(additionalDefaultStyles).forEach(name => {\n            let value = additionalDefaultStyles[name];\n            if (value !== null && value !== undefined) {\n                result[name] = value;\n            } else {\n                delete result[name];\n            }\n        });\n    }\n\n    return result;\n}\n\n/**\n * @internal\n */\nexport function getStyleCallbacks(\n    callbacks: CssStyleCallbackMap | null | undefined\n): CssStyleCallbackMap {\n    let result = cloneObject(callbacks);\n    result.position = result.position || removeValue;\n    result.width = result.width || removeWidthForLiAndDiv;\n    return result;\n}\n\nfunction removeValue(): null {\n    return null;\n}\n\nfunction removeWidthForLiAndDiv(value: string, element: HTMLElement) {\n    let tag = element.tagName;\n    return !(tag == 'LI' || tag == 'DIV');\n}\n\nfunction unique<T>(array: T[]): T[] {\n    return array.filter((value, index, self) => self.indexOf(value) == index);\n}\n","import type { StringMap } from 'roosterjs-editor-types';\n\n// Inheritable CSS properties\n// Ref: https://www.w3.org/TR/CSS21/propidx.html\nconst INHERITABLE_PROPERTIES = (\n    'border-spacing,caption-side,color,' +\n    'cursor,direction,empty-cells,font-family,font-size,font-style,font-variant,font-weight,' +\n    'font,letter-spacing,line-height,list-style-image,list-style-position,list-style-type,' +\n    'list-style,orphans,quotes,text-align,text-indent,text-transform,visibility,white-space,' +\n    'widows,word-spacing'\n).split(',');\n\n/**\n * Get inheritable CSS style values from the given element\n * @param element The element to get style from\n */\nexport default function getInheritableStyles(element: HTMLElement | null): StringMap {\n    let win = element && element.ownerDocument && element.ownerDocument.defaultView;\n    let styles = win && element && win.getComputedStyle(element);\n    let result: StringMap = {};\n    INHERITABLE_PROPERTIES.forEach(\n        name => (result[name] = (styles && styles.getPropertyValue(name)) || '')\n    );\n    return result;\n}\n","import getTagOfNode from '../utils/getTagOfNode';\nimport type { PredefinedCssMap, StringMap } from 'roosterjs-editor-types';\n\nconst PREDEFINED_CSS_FOR_ELEMENT: PredefinedCssMap = {\n    B: {\n        'font-weight': 'bold',\n    },\n    EM: {\n        'font-style': 'italic',\n    },\n    I: {\n        'font-style': 'italic',\n    },\n    U: {\n        'text-decoration': 'underline',\n    },\n    P: {\n        'margin-top': '1em',\n        'margin-bottom': '1em',\n    },\n    PRE: {\n        'white-space': 'pre',\n    },\n    S: {\n        'text-decoration': 'line-through',\n    },\n    STRIKE: {\n        'text-decoration': 'line-through',\n    },\n    SUB: {\n        'vertical-align': 'sub',\n        'font-size': 'smaller',\n    },\n    SUP: {\n        'vertical-align': 'super',\n        'font-size': 'smaller',\n    },\n};\n\n/**\n * @internal\n * Get a map for browser built-in CSS definitions of elements\n */\nexport default function getPredefinedCssForElement(\n    element: HTMLElement,\n    additionalPredefinedCssForElement?: PredefinedCssMap | null\n): StringMap {\n    const tag = getTagOfNode(element);\n    return PREDEFINED_CSS_FOR_ELEMENT[tag] || (additionalPredefinedCssForElement || {})[tag];\n}\n","const VARIABLE_REGEX = /^\\s*var\\(\\s*[a-zA-Z0-9-_]+\\s*(,\\s*(.*))?\\)\\s*$/;\nconst VARIABLE_PREFIX = 'var(';\n\n/**\n * @internal\n * Handle CSS variable format. e.g.: var(--name, fallbackValue)\n */\nexport function processCssVariable(value: string): string {\n    const match = VARIABLE_REGEX.exec(value);\n    return match?.[2] || ''; // Without fallback value, we don't know what does the original value mean, so ignore it\n}\n\n/**\n * @internal\n */\nexport function isCssVariable(value: string): boolean {\n    return value.indexOf(VARIABLE_PREFIX) == 0;\n}\n","export { default as getBlockElementAtNode } from './blockElements/getBlockElementAtNode';\nexport { default as getFirstLastBlockElement } from './blockElements/getFirstLastBlockElement';\n\nexport { default as ContentTraverser } from './contentTraverser/ContentTraverser';\nexport { default as PositionContentSearcher } from './contentTraverser/PositionContentSearcher';\n\nexport {\n    default as addDelimiters,\n    addDelimiterAfter,\n    addDelimiterBefore,\n} from './delimiter/addDelimiters';\nexport { default as getDelimiterFromElement } from './delimiter/getDelimiterFromElement';\n\nexport { default as getInlineElementAtNode } from './inlineElements/getInlineElementAtNode';\nexport { default as ImageInlineElement } from './inlineElements/ImageInlineElement';\nexport { default as LinkInlineElement } from './inlineElements/LinkInlineElement';\nexport { default as NodeInlineElement } from './inlineElements/NodeInlineElement';\nexport { default as PartialInlineElement } from './inlineElements/PartialInlineElement';\nexport { default as applyTextStyle } from './inlineElements/applyTextStyle';\n\nexport { default as extractClipboardEvent } from './clipboard/extractClipboardEvent';\nexport { default as extractClipboardItems } from './clipboard/extractClipboardItems';\nexport { default as extractClipboardItemsForIE } from './clipboard/extractClipboardItemsForIE';\nexport { default as handleImagePaste } from './clipboard/handleImagePaste';\nexport { default as handleTextPaste } from './clipboard/handleTextPaste';\nexport { default as retrieveMetadataFromClipboard } from './clipboard/retrieveMetadataFromClipboard';\nexport { default as sanitizePasteContent } from './clipboard/sanitizePasteContent';\nexport { default as getPasteType } from './clipboard/getPasteType';\n\nexport { Browser, getBrowserInfo } from './utils/Browser';\nexport { default as applyFormat } from './utils/applyFormat';\nexport { default as changeElementTag } from './utils/changeElementTag';\nexport { default as collapseNodes } from './utils/collapseNodes';\nexport { default as contains } from './utils/contains';\nexport { default as findClosestElementAncestor } from './utils/findClosestElementAncestor';\nexport { default as fromHtml } from './utils/fromHtml';\nexport { default as getComputedStyles, getComputedStyle } from './utils/getComputedStyles';\nexport {\n    default as getPendableFormatState,\n    PendableFormatCommandMap,\n    PendableFormatNames,\n} from './utils/getPendableFormatState';\nexport { default as getTagOfNode } from './utils/getTagOfNode';\nexport { default as isBlockElement } from './utils/isBlockElement';\nexport { default as isNodeEmpty } from './utils/isNodeEmpty';\nexport { default as isVoidHtmlElement } from './utils/isVoidHtmlElement';\nexport { default as matchLink } from './utils/matchLink';\nexport { default as queryElements } from './utils/queryElements';\nexport { default as splitParentNode, splitBalancedNodeRange } from './utils/splitParentNode';\nexport { default as unwrap } from './utils/unwrap';\nexport { default as wrap } from './utils/wrap';\nexport { getNextLeafSibling, getPreviousLeafSibling } from './utils/getLeafSibling';\nexport { getFirstLeafNode, getLastLeafNode } from './utils/getLeafNode';\nexport { default as splitTextNode } from './utils/splitTextNode';\nexport { default as normalizeRect } from './utils/normalizeRect';\nexport { default as safeInstanceOf } from './utils/safeInstanceOf';\nexport { default as readFile } from './utils/readFile';\nexport { default as getInnerHTML } from './utils/getInnerHTML';\nexport { default as setColor } from './utils/setColor';\nexport { default as matchesSelector } from './utils/matchesSelector';\nexport { default as createElement, KnownCreateElementData } from './utils/createElement';\nexport { default as moveChildNodes } from './utils/moveChildNodes';\nexport { default as getIntersectedRect } from './utils/getIntersectedRect';\nexport { default as isNodeAfter } from './utils/isNodeAfter';\nexport { default as parseColor } from './utils/parseColor';\n\nexport { default as VTable } from './table/VTable';\nexport { default as isWholeTableSelected } from './table/isWholeTableSelected';\n\nexport { default as VList } from './list/VList';\nexport { default as VListItem } from './list/VListItem';\nexport { default as createVListFromRegion } from './list/createVListFromRegion';\nexport { default as VListChain } from './list/VListChain';\nexport { default as convertDecimalsToAlpha } from './list/convertDecimalsToAlpha';\nexport { default as convertDecimalsToRoman } from './list/convertDecimalsToRomans';\nexport { default as setListItemStyle } from './list/setListItemStyle';\nexport { getTableFormatInfo } from './table/tableFormatInfo';\nexport { saveTableCellMetadata } from './table/tableCellInfo';\nexport { getTableCellMetadata } from './table/tableCellInfo';\n\nexport { default as getRegionsFromRange } from './region/getRegionsFromRange';\nexport { default as getSelectedBlockElementsInRegion } from './region/getSelectedBlockElementsInRegion';\nexport { default as collapseNodesInRegion } from './region/collapseNodesInRegion';\nexport { default as isNodeInRegion } from './region/isNodeInRegion';\nexport { default as getSelectionRangeInRegion } from './region/getSelectionRangeInRegion';\nexport { default as mergeBlocksInRegion } from './region/mergeBlocksInRegion';\n\nexport { default as Position } from './selection/Position';\nexport { default as createRange } from './selection/createRange';\nexport { default as getPositionRect } from './selection/getPositionRect';\nexport { default as isPositionAtBeginningOf } from './selection/isPositionAtBeginningOf';\nexport { default as getSelectionPath } from './selection/getSelectionPath';\nexport { default as getHtmlWithSelectionPath } from './selection/getHtmlWithSelectionPath';\nexport {\n    default as setHtmlWithSelectionPath,\n    setHtmlWithMetadata,\n    extractContentMetadata,\n} from './selection/setHtmlWithSelectionPath';\nexport { default as addRangeToSelection } from './selection/addRangeToSelection';\n\nexport { default as addSnapshot, addSnapshotV2 } from './snapshots/addSnapshot';\nexport { default as canMoveCurrentSnapshot } from './snapshots/canMoveCurrentSnapshot';\nexport {\n    default as clearProceedingSnapshots,\n    clearProceedingSnapshotsV2,\n} from './snapshots/clearProceedingSnapshots';\nexport {\n    default as moveCurrentSnapshot,\n    moveCurrentSnapsnot,\n} from './snapshots/moveCurrentSnapshot';\nexport { default as createSnapshots } from './snapshots/createSnapshots';\nexport { default as canUndoAutoComplete } from './snapshots/canUndoAutoComplete';\n\nexport { default as HtmlSanitizer } from './htmlSanitizer/HtmlSanitizer';\nexport { default as getInheritableStyles } from './htmlSanitizer/getInheritableStyles';\nexport { default as createDefaultHtmlSanitizerOptions } from './htmlSanitizer/createDefaultHtmlSanitizerOptions';\nexport { default as chainSanitizerCallback } from './htmlSanitizer/chainSanitizerCallback';\n\nexport { default as commitEntity } from './entity/commitEntity';\nexport { default as getEntityFromElement } from './entity/getEntityFromElement';\nexport { default as getEntitySelector } from './entity/getEntitySelector';\nexport {\n    createEntityPlaceholder,\n    moveContentWithEntityPlaceholders,\n    restoreContentWithEntityPlaceholder,\n} from './entity/entityPlaceholderUtils';\n\nexport { default as cacheGetEventData } from './event/cacheGetEventData';\nexport { default as clearEventDataCache } from './event/clearEventDataCache';\nexport { default as isModifierKey } from './event/isModifierKey';\nexport { default as isCharacterValue } from './event/isCharacterValue';\nexport { default as isCtrlOrMetaPressed } from './event/isCtrlOrMetaPressed';\n\nexport { default as getStyles } from './style/getStyles';\nexport { default as setStyles } from './style/setStyles';\nexport { default as removeImportantStyleRule } from './style/removeImportantStyleRule';\nexport { default as setGlobalCssStyles } from './style/setGlobalCssStyles';\nexport { default as removeGlobalCssStyle } from './style/removeGlobalCssStyle';\n\nexport { default as adjustInsertPosition } from './edit/adjustInsertPosition';\nexport { default as deleteSelectedContent } from './edit/deleteSelectedContent';\nexport { default as getTextContent } from './edit/getTextContent';\n\nexport { default as validate } from './metadata/validate';\nexport {\n    createNumberDefinition,\n    createBooleanDefinition,\n    createStringDefinition,\n    createArrayDefinition,\n    createObjectDefinition,\n} from './metadata/definitionCreators';\nexport { getMetadata, setMetadata, removeMetadata } from './metadata/metadata';\n\nexport { default as arrayPush } from './jsUtils/arrayPush';\nexport { default as getObjectKeys } from './jsUtils/getObjectKeys';\nexport { default as toArray } from './jsUtils/toArray';\n\nexport { default as getPasteSource } from './pasteSourceValidations/getPasteSource';\n","import type { BlockElement, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * Represents an empty InlineElement.\r\n * This is used for ContentTraverser internally only.\r\n * An empty InlineElement means current position is at the end of a tag so nothing is included inside this element\r\n */\r\nexport default class EmptyInlineElement implements InlineElement {\r\n    constructor(private position: NodePosition, private parentBlock: BlockElement) {}\r\n\r\n    /**\r\n     * Get the text content of this inline element\r\n     */\r\n    getTextContent(): string {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Get the container node of this inline element\r\n     */\r\n    getContainerNode(): Node {\r\n        return this.position.node;\r\n    }\r\n\r\n    /**\r\n     * Get the parent block element of this inline element\r\n     */\r\n    getParentBlock(): BlockElement {\r\n        return this.parentBlock;\r\n    }\r\n\r\n    /**\r\n     * Get the start position of this inline element\r\n     */\r\n    getStartPosition(): NodePosition {\r\n        return this.position;\r\n    }\r\n\r\n    /**\r\n     * Get the end position of this inline element\r\n     */\r\n    getEndPosition(): NodePosition {\r\n        return this.position;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given inline element is after this inline element\r\n     */\r\n    isAfter(inlineElement: InlineElement): boolean {\r\n        return inlineElement && this.position.isAfter(inlineElement.getEndPosition());\r\n    }\r\n\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    isTextualInlineElement(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given editor position is contained in this inline element\r\n     */\r\n    contains(position: NodePosition): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Apply inline style to a region of an inline element.\r\n     */\r\n    applyStyle(styler: (element: HTMLElement) => any): void {}\r\n}\r\n","import NodeInlineElement from './NodeInlineElement';\r\nimport type { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This is an inline element representing an Html image\r\n */\r\nexport default class ImageInlineElement extends NodeInlineElement {\r\n    constructor(containerNode: Node, parentBlock: BlockElement) {\r\n        super(containerNode, parentBlock);\r\n    }\r\n}\r\n","import NodeInlineElement from './NodeInlineElement';\r\nimport type { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This is inline element presenting an html hyperlink\r\n */\r\nexport default class LinkInlineElement extends NodeInlineElement {\r\n    constructor(containerNode: Node, parentBlock: BlockElement) {\r\n        super(containerNode, parentBlock);\r\n    }\r\n}\r\n","import applyTextStyle from './applyTextStyle';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport Position from '../selection/Position';\r\nimport { NodeType, PositionType } from 'roosterjs-editor-types';\r\nimport type { BlockElement, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This presents an inline element that can be represented by a single html node.\r\n * This serves as base for most inline element as it contains most implementation\r\n * of all operations that can happen on an inline element. Other sub inline elements mostly\r\n * just identify themselves for a certain type\r\n */\r\nexport default class NodeInlineElement implements InlineElement {\r\n    constructor(private containerNode: Node, private parentBlock: BlockElement) {}\r\n\r\n    /**\r\n     * The text content for this inline element\r\n     */\r\n    public getTextContent(): string {\r\n        // nodeValue is better way to retrieve content for a text. Others, just use textContent\r\n        return (\r\n            (this.containerNode.nodeType == NodeType.Text\r\n                ? this.containerNode.nodeValue\r\n                : this.containerNode.textContent) || ''\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get the container node\r\n     */\r\n    public getContainerNode(): Node {\r\n        return this.containerNode;\r\n    }\r\n\r\n    // Get the parent block\r\n    public getParentBlock(): BlockElement {\r\n        return this.parentBlock;\r\n    }\r\n\r\n    /**\r\n     * Get the start position of the inline element\r\n     */\r\n    public getStartPosition(): NodePosition {\r\n        // For a position, we always want it to point to a leaf node\r\n        // We should try to go get the lowest first child node from the container\r\n        return new Position(this.containerNode, 0).normalize();\r\n    }\r\n\r\n    /**\r\n     * Get the end position of the inline element\r\n     */\r\n    public getEndPosition(): NodePosition {\r\n        // For a position, we always want it to point to a leaf node\r\n        // We should try to go get the lowest last child node from the container\r\n        return new Position(this.containerNode, PositionType.End).normalize();\r\n    }\r\n\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    public isTextualInlineElement(): boolean {\r\n        return this.containerNode && this.containerNode.nodeType == NodeType.Text;\r\n    }\r\n\r\n    /**\r\n     * Checks if an inline element is after the current inline element\r\n     */\r\n    public isAfter(inlineElement: InlineElement): boolean {\r\n        return inlineElement && isNodeAfter(this.containerNode, inlineElement.getContainerNode());\r\n    }\r\n\r\n    /**\r\n     * Checks if the given position is contained in the inline element\r\n     */\r\n    public contains(pos: NodePosition): boolean {\r\n        let start = this.getStartPosition();\r\n        let end = this.getEndPosition();\r\n        return pos && pos.isAfter(start) && end.isAfter(pos);\r\n    }\r\n\r\n    /**\r\n     * Apply inline style to an inline element\r\n     */\r\n    public applyStyle(styler: (element: HTMLElement, isInnerNode?: boolean) => any): void {\r\n        applyTextStyle(this.containerNode, styler);\r\n    }\r\n}\r\n","import applyTextStyle from './applyTextStyle';\r\nimport createRange from '../selection/createRange';\r\nimport Position from '../selection/Position';\r\nimport { getNextLeafSibling, getPreviousLeafSibling } from '../utils/getLeafSibling';\r\nimport { PositionType } from 'roosterjs-editor-types';\r\nimport type { BlockElement, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This is a special version of inline element that identifies a section of an inline element\r\n * We often have the need to cut an inline element in half and perform some operation only on half of an inline element\r\n * i.e. users select only some text of a text node and apply format, in that case, format has to happen on partial of an inline element\r\n * PartialInlineElement is implemented in a way that decorate another full inline element with its own override on methods like isAfter\r\n * It also offers some special methods that others don't have, i.e. nextInlineElement etc.\r\n */\r\nexport default class PartialInlineElement implements InlineElement {\r\n    constructor(\r\n        private inlineElement: InlineElement,\r\n        private start: NodePosition | null = null,\r\n        private end: NodePosition | null = null\r\n    ) {}\r\n\r\n    /**\r\n     * Get the full inline element that this partial inline decorates\r\n     */\r\n    public getDecoratedInline(): InlineElement {\r\n        return this.inlineElement;\r\n    }\r\n\r\n    /**\r\n     * Gets the container node\r\n     */\r\n    public getContainerNode(): Node {\r\n        return this.inlineElement.getContainerNode();\r\n    }\r\n\r\n    /**\r\n     * Gets the parent block\r\n     */\r\n    public getParentBlock(): BlockElement {\r\n        return this.inlineElement.getParentBlock();\r\n    }\r\n\r\n    /**\r\n     * Gets the text content\r\n     */\r\n    public getTextContent(): string {\r\n        let range = createRange(this.getStartPosition(), this.getEndPosition());\r\n\r\n        return range.toString();\r\n    }\r\n\r\n    /**\r\n     * Get start position of this inline element.\r\n     */\r\n    public getStartPosition(): NodePosition {\r\n        return this.start || this.inlineElement.getStartPosition();\r\n    }\r\n\r\n    /**\r\n     * Get end position of this inline element.\r\n     */\r\n    public getEndPosition(): NodePosition {\r\n        return this.end || this.inlineElement.getEndPosition();\r\n    }\r\n\r\n    /**\r\n     * Get next partial inline element if it is not at the end boundary yet\r\n     */\r\n    public get nextInlineElement(): PartialInlineElement | null {\r\n        return this.end ? new PartialInlineElement(this.inlineElement, this.end) : null;\r\n    }\r\n\r\n    /**\r\n     * Get previous partial inline element if it is not at the begin boundary yet\r\n     */\r\n    public get previousInlineElement(): PartialInlineElement | null {\r\n        return this.start\r\n            ? new PartialInlineElement(this.inlineElement, undefined, this.start)\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * Checks if it contains a position\r\n     */\r\n    public contains(pos: NodePosition): boolean {\r\n        return pos && pos.isAfter(this.getStartPosition()) && this.getEndPosition().isAfter(pos);\r\n    }\r\n\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    public isTextualInlineElement(): boolean {\r\n        return this.inlineElement && this.inlineElement.isTextualInlineElement();\r\n    }\r\n\r\n    /**\r\n     * Check if this inline element is after the other inline element\r\n     */\r\n    public isAfter(inlineElement: InlineElement): boolean {\r\n        let thisStart = this.getStartPosition();\r\n        let otherEnd = inlineElement && inlineElement.getEndPosition();\r\n        return otherEnd && (thisStart.isAfter(otherEnd) || thisStart.equalTo(otherEnd));\r\n    }\r\n\r\n    /**\r\n     * apply style\r\n     */\r\n    public applyStyle(styler: (element: HTMLElement, isInnerNode?: boolean) => any) {\r\n        let from: NodePosition | null = this.getStartPosition().normalize();\r\n        let to: NodePosition | null = this.getEndPosition().normalize();\r\n        let container = this.getContainerNode();\r\n\r\n        if (from.isAtEnd) {\r\n            let nextNode = getNextLeafSibling(container, from.node);\r\n            from = nextNode ? new Position(nextNode, PositionType.Begin) : null;\r\n        }\r\n        if (to.offset == 0) {\r\n            let previousNode = getPreviousLeafSibling(container, to.node);\r\n            to = previousNode ? new Position(previousNode, PositionType.End) : null;\r\n        }\r\n\r\n        applyTextStyle(container, styler, from || undefined, to || undefined);\r\n    }\r\n}\r\n","import getTagOfNode from '../utils/getTagOfNode';\nimport Position from '../selection/Position';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport splitTextNode from '../utils/splitTextNode';\nimport wrap from '../utils/wrap';\nimport { getNextLeafSibling } from '../utils/getLeafSibling';\nimport { NodeType, PositionType } from 'roosterjs-editor-types';\nimport { splitBalancedNodeRange } from '../utils/splitParentNode';\nimport type { NodePosition } from 'roosterjs-editor-types';\n\nconst STYLET_AGS = 'SPAN,B,I,U,EM,STRONG,STRIKE,S,SMALL,SUP,SUB'.split(',');\n\n/**\n * Apply style using a styler function to the given container node in the given range\n * @param container The container node to apply style to\n * @param styler The styler function\n * @param fromPosition From position\n * @param toPosition To position\n */\nexport default function applyTextStyle(\n    container: Node,\n    styler: (node: HTMLElement, isInnerNode?: boolean) => any,\n    from: NodePosition = new Position(container, PositionType.Begin).normalize(),\n    to: NodePosition = new Position(container, PositionType.End).normalize()\n) {\n    let formatNodes: Node[] = [];\n    let fromPosition: NodePosition | null = from;\n    let toPosition: NodePosition | null = to;\n\n    while (fromPosition && toPosition && toPosition.isAfter(fromPosition)) {\n        let formatNode = fromPosition.node;\n        let parentTag = getTagOfNode(formatNode.parentNode);\n\n        // The code below modifies DOM. Need to get the next sibling first otherwise you won't be able to reliably get a good next sibling node\n        let nextNode = getNextLeafSibling(container, formatNode);\n\n        if (formatNode.nodeType == NodeType.Text && ['TR', 'TABLE'].indexOf(parentTag) < 0) {\n            if (formatNode == toPosition.node && !toPosition.isAtEnd) {\n                formatNode = splitTextNode(\n                    <Text>formatNode,\n                    toPosition.offset,\n                    true /*returnFirstPart*/\n                );\n            }\n\n            if (fromPosition.offset > 0) {\n                formatNode = splitTextNode(\n                    <Text>formatNode,\n                    fromPosition.offset,\n                    false /*returnFirstPart*/\n                );\n            }\n\n            formatNodes.push(formatNode);\n        }\n\n        fromPosition = nextNode && new Position(nextNode, PositionType.Begin);\n    }\n\n    if (formatNodes.length > 0) {\n        if (formatNodes.every(node => node.parentNode == formatNodes[0].parentNode)) {\n            let newNode = formatNodes.shift()!;\n            formatNodes.forEach(node => {\n                const newNodeValue = (newNode.nodeValue || '') + (node.nodeValue || '');\n                newNode.nodeValue = newNodeValue;\n                node.parentNode?.removeChild(node);\n            });\n            formatNodes = [newNode];\n        }\n\n        formatNodes.forEach(startingNode => {\n            // When apply style within style tags like B/I/U/..., we split the tag and apply outside them\n            // So that the inner style tag such as U, STRIKE can inherit the style we added\n            let node: Node | null = startingNode;\n            while (\n                node &&\n                getTagOfNode(node) != 'SPAN' &&\n                STYLET_AGS.indexOf(getTagOfNode(node.parentNode)) >= 0\n            ) {\n                callStylerWithInnerNode(node, styler);\n                node = splitBalancedNodeRange(node);\n            }\n\n            if (node && getTagOfNode(node) != 'SPAN') {\n                callStylerWithInnerNode(node, styler);\n                node = wrap(node, 'SPAN');\n            }\n\n            if (safeInstanceOf(node, 'HTMLElement')) {\n                styler(node);\n            }\n        });\n    }\n}\n\nfunction callStylerWithInnerNode(\n    node: Node,\n    styler: (node: HTMLElement, isInnerNode?: boolean) => any\n) {\n    if (node && node.nodeType == NodeType.Element) {\n        styler(node as HTMLElement, true /*isInnerNode*/);\n    }\n}\n","import getInlineElementAtNode from './getInlineElementAtNode';\r\nimport { getFirstLeafNode, getLastLeafNode } from '../utils/getLeafNode';\r\nimport type { InlineElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * Get the first inline element inside the given node\r\n */\r\nexport function getFirstInlineElement(rootNode: Node): InlineElement | null {\r\n    // getFirstLeafNode can return null for empty container\r\n    // do check null before passing on to get inline from the node\r\n    let node = getFirstLeafNode(rootNode);\r\n    return node ? getInlineElementAtNode(rootNode, node) : null;\r\n}\r\n\r\n/**\r\n * @internal\r\n * Get the last inline element inside the given node\r\n */\r\nexport function getLastInlineElement(rootNode: Node): InlineElement | null {\r\n    // getLastLeafNode can return null for empty container\r\n    // do check null before passing on to get inline from the node\r\n    let node = getLastLeafNode(rootNode);\r\n    return node ? getInlineElementAtNode(rootNode, node) : null;\r\n}\r\n","import getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport ImageInlineElement from './ImageInlineElement';\r\nimport LinkInlineElement from './LinkInlineElement';\r\nimport NodeInlineElement from './NodeInlineElement';\r\nimport safeInstanceOf from '../utils/safeInstanceOf';\r\nimport type { BlockElement, InlineElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get the inline element at a node\r\n * @param rootNode The root node of current scope\r\n * @param node The node to get InlineElement from\r\n */\r\nexport default function getInlineElementAtNode(rootNode: Node, node: Node | null): InlineElement;\r\n\r\n/**\r\n * Get the inline element at a node\r\n * @param parentBlock Parent BlockElement of this node\r\n * @param node The node to get InlineElement from\r\n */\r\nexport default function getInlineElementAtNode(\r\n    parentBlock: BlockElement,\r\n    node: Node | null\r\n): InlineElement;\r\n\r\nexport default function getInlineElementAtNode(\r\n    parent: Node | BlockElement,\r\n    node: Node | null\r\n): InlineElement | null {\r\n    // An inline element has to be in a block element, get the block first and then resolve through the factory\r\n    let parentBlock = safeInstanceOf(parent, 'Node') ? getBlockElementAtNode(parent, node) : parent;\r\n    return node && parentBlock && resolveInlineElement(node, parentBlock);\r\n}\r\n\r\n/**\r\n * Resolve an inline element by a leaf node\r\n * @param node The node to resolve from\r\n * @param parentBlock The parent block element\r\n */\r\nfunction resolveInlineElement(node: Node, parentBlock: BlockElement): InlineElement {\r\n    let nodeChain = [node];\r\n    for (\r\n        let parent = node.parentNode;\r\n        parent && parentBlock.contains(parent);\r\n        parent = parent.parentNode\r\n    ) {\r\n        nodeChain.push(parent);\r\n    }\r\n\r\n    let inlineElement: InlineElement | undefined;\r\n\r\n    for (let i = nodeChain.length - 1; i >= 0 && !inlineElement; i--) {\r\n        let currentNode = nodeChain[i];\r\n        let tag = getTagOfNode(currentNode);\r\n        if (tag == 'A') {\r\n            inlineElement = new LinkInlineElement(currentNode, parentBlock);\r\n        } else if (tag == 'IMG') {\r\n            inlineElement = new ImageInlineElement(currentNode, parentBlock);\r\n        }\r\n    }\r\n\r\n    return inlineElement || new NodeInlineElement(node, parentBlock);\r\n}\r\n","import getInlineElementAtNode from './getInlineElementAtNode';\r\nimport PartialInlineElement from './PartialInlineElement';\r\nimport shouldSkipNode from '../utils/shouldSkipNode';\r\nimport { getLeafSibling } from '../utils/getLeafSibling';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\nimport type { InlineElement, NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * @internal\r\n * Get inline element before a position\r\n * This is mostly used when we want to get the inline element before selection/cursor\r\n * There is a possible that the cursor is in middle of an inline element (i.e. mid of a text node)\r\n * in this case, we only want to return what is before cursor (a partial of an inline) to indicate\r\n * that we're in middle.\r\n * @param root Root node of current scope, use for create InlineElement\r\n * @param position The position to get InlineElement before\r\n */\r\nexport function getInlineElementBefore(root: Node, position: NodePosition): InlineElement | null {\r\n    return getInlineElementBeforeAfter(root, position, false /*isAfter*/);\r\n}\r\n\r\n/**\r\n * @internal\r\n * Get inline element after a position\r\n * This is mostly used when we want to get the inline element after selection/cursor\r\n * There is a possible that the cursor is in middle of an inline element (i.e. mid of a text node)\r\n * in this case, we only want to return what is before cursor (a partial of an inline) to indicate\r\n * that we're in middle.\r\n * @param root Root node of current scope, use for create InlineElement\r\n * @param position The position to get InlineElement after\r\n */\r\nexport function getInlineElementAfter(root: Node, position: NodePosition): InlineElement | null {\r\n    return getInlineElementBeforeAfter(root, position, true /*isAfter*/);\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function getInlineElementBeforeAfter(root: Node, position: NodePosition, isAfter: boolean) {\r\n    if (!root || !position || !position.node) {\r\n        return null;\r\n    }\r\n\r\n    position = position.normalize();\r\n    let { offset, isAtEnd } = position;\r\n    let node: Node | null = position.node;\r\n    let isPartial = false;\r\n\r\n    if ((!isAfter && offset == 0 && !isAtEnd) || (isAfter && isAtEnd)) {\r\n        node = getLeafSibling(root, node, isAfter);\r\n    } else if (\r\n        node.nodeType == NodeType.Text &&\r\n        ((!isAfter && !isAtEnd) || (isAfter && offset > 0))\r\n    ) {\r\n        isPartial = true;\r\n    }\r\n\r\n    if (node && shouldSkipNode(node)) {\r\n        node = getLeafSibling(root, node, isAfter);\r\n    }\r\n\r\n    let inlineElement = getInlineElementAtNode(root, node);\r\n\r\n    if (inlineElement && (isPartial || inlineElement.contains(position))) {\r\n        inlineElement = isAfter\r\n            ? new PartialInlineElement(inlineElement, position, undefined)\r\n            : new PartialInlineElement(inlineElement, undefined, position);\r\n    }\r\n\r\n    return inlineElement;\r\n}\r\n","/**\n * A type-safe wrapper for Array.prototype.push.apply()\n * @param mainArray The main array to push items into\n * @param itemsArray The items to push to main array\n */\nexport default function arrayPush<T>(mainArray: T[], itemsArray: T[]) {\n    Array.prototype.push.apply(mainArray, itemsArray);\n}\n","/**\n * Provide a strong-typed version of Object.keys()\n * @param obj The source object\n * @returns Array of keys\n */\nexport default function getObjectKeys<T extends string | number | symbol>(\n    obj: Record<T, any> | Partial<Record<T, any>>\n): T[] {\n    return Object.keys(obj) as T[];\n}\n","/**\n * Convert a named node map to an array\n * @param collection The map to convert\n */\nexport default function toArray(collection: NamedNodeMap): Attr[];\n\n/**\n * Convert a named node map to an array\n * @param collection The map to convert\n */\nexport default function toArray(collection: DataTransferItemList): DataTransferItem[];\n\n/**\n * Convert a collection to an array\n * @param collection The collection to convert\n */\nexport default function toArray<T extends Node>(collection: NodeListOf<T>): T[];\n\n/**\n * Convert a collection to an array\n * @param collection The collection to convert\n */\nexport default function toArray<T extends Element>(collection: HTMLCollectionOf<T>): T[];\n\n/**\n * Convert an array to an array.\n * This is to satisfy typescript compiler. For some cases the object can be a collection at runtime,\n * but the declaration is an array. e.g. ClipboardData.types\n * @param array The array to convert\n */\nexport default function toArray<T>(array: readonly T[]): T[];\n\nexport default function toArray(collection: any): any[] {\n    return [].slice.call(collection);\n}\n","import changeElementTag from '../utils/changeElementTag';\nimport getListTypeFromNode, { isListElement } from './getListTypeFromNode';\nimport getTagOfNode from '../utils/getTagOfNode';\nimport isBlockElement from '../utils/isBlockElement';\nimport isNodeEmpty from '../utils/isNodeEmpty';\nimport Position from '../selection/Position';\nimport queryElements from '../utils/queryElements';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport splitParentNode from '../utils/splitParentNode';\nimport toArray from '../jsUtils/toArray';\nimport unwrap from '../utils/unwrap';\nimport VListItem, { ListStyleDefinitionMetadata } from './VListItem';\nimport wrap from '../utils/wrap';\nimport { getMetadata, setMetadata } from '../metadata/metadata';\nimport type { ListStyleMetadata } from './VListItem';\nimport type { NodePosition } from 'roosterjs-editor-types';\nimport {\n    Indentation,\n    ListType,\n    PositionType,\n    NodeType,\n    Alignment,\n    NumberingListType,\n    BulletListType,\n} from 'roosterjs-editor-types';\nimport type {\n    CompatibleAlignment,\n    CompatibleBulletListType,\n    CompatibleIndentation,\n    CompatibleListType,\n    CompatibleNumberingListType,\n} from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * Represent a bullet or a numbering list\n *\n * @example\n * A VList is a logical representation of list items, it contains an item array with node and list type stack.\n * e.g. We have a list like this\n * ```html\n * <ol>\n *   <li>item 1</li>\n *   <li>item 2</li>\n *   <ul>\n *     <li>item 2.1</li>\n *     <li>item 2.2</li>\n *   <ul>\n * </ol>\n * ```\n *\n * A VList of this list will be like this:\n * ```javascript\n * {\n *   rootList: (OL node),\n *   items: [{\n *       node: (LI node with 'item 1'),\n *       listTypes: [null, OL],\n *     }, {\n *       node: (LI node with 'item 2'),\n *       listTypes: [null, OL],\n *     }, {\n *       node: (LI node with 'item 2.1),\n *       listTypes: [null, OL, UL],\n *     }, {\n *       node: (LI node with 'item 2.2'),\n *       listTypes: [null, OL, UL],\n *     }\n *   ]\n * }\n * ```\n *\n * When we want to outdent item 2.1, we just need to remove the last \"UL\" from listTypes of item 2.1, then\n * the writeBack() function will handle everything related to DOM change\n */\nexport default class VList {\n    public readonly items: VListItem[] = [];\n\n    /**\n     * Create a new instance of VList class\n     * @param rootList The root list element, can be either OL or UL tag\n     */\n    constructor(public rootList: HTMLOListElement | HTMLUListElement) {\n        if (!rootList) {\n            throw new Error('rootList must not be null');\n        }\n\n        // Before populate items, we need to normalize the list to make sure it is in a correct format\n        // otherwise further action may mass thing up.\n        //\n        // There are two kinds of normalization to perform.\n        // 1. Move nodes directly under OL/UL into a LI node, unless it is an orphan node\n        // Please see comment for VListItem.isOrphanItem() for more information about orphan node\n        // e.g.:\n        // ```HTML\n        // <ol>\n        //   <li>item 1</li>\n        //   <div>item 2</div>\n        // </ol>\n        // ```\n        // After this step, it should become:\n        // ```html\n        // <ol>\n        //   <li>item 1\n        //     <div>item 2</div>\n        //   <li>\n        // </ol>\n        // ```\n        moveChildNodesToLi(this.rootList);\n        queryElements(this.rootList, 'ol,ul', moveChildNodesToLi);\n\n        // 2. Move LI node embedded into another LI node out to directly under OL/UL node\n        // Ideally browser we do this for us automatically when out the HTML into DOM. However after\n        // step 1, it is possible that we move some LI node into another one. e.g:\n        // ```HTML\n        // <ol>\n        //   <li>item 1</li>\n        //   <div>\n        //     item 1.1\n        //     <li>item 3</li>\n        //   </div>\n        // </ol>\n        // ```\n        // See that the second LI tag is not directly under OL, so after step 1, this will become:\n        // ```html\n        // <ol>\n        //   <li>item 1\n        //     <div>\n        //       item 1.1\n        //       <li>item 2</li>\n        //     </div>\n        //   <li>\n        // </ol>\n        // ```\n        // Now we have a LI tag embedded into another LI tag. So we need step 2 to move the inner LI tag out to be:\n        // ```html\n        // <ol>\n        //   <li>item1\n        //     <div>item 1.1</div>\n        //   </li>\n        //   <li><div>item2</div></li>\n        // </ol>\n        // ```\n        queryElements(this.rootList, 'li', moveLiToList);\n\n        this.populateItems(this.rootList);\n    }\n\n    /**\n     * Check if this list contains the given node\n     * @param node The node to check\n     */\n    contains(node: Node) {\n        // We don't check if the node is contained by this.rootList here, because after some operation,\n        // it is possible a node is logically contained by this list but the container list item hasn't\n        // been put under this.rootList in DOM tree yet.\n        return this.items.some(item => item.contains(node));\n    }\n\n    /**\n     * Get list number of the last item in this VList.\n     * If there is no order list item, result will be undefined\n     */\n    getLastItemNumber(): number | undefined {\n        const start = this.getStart();\n\n        return start === undefined\n            ? start\n            : start -\n                  1 +\n                  this.items.filter(\n                      item =>\n                          item.getListType() == ListType.Ordered &&\n                          item.getLevel() == 1 &&\n                          !item.isDummy()\n                  ).length;\n    }\n\n    /**\n     * Write the result back into DOM tree\n     * After that, this VList becomes unavailable because we set this.rootList to null\n     *\n     * @param shouldReuseAllAncestorListElements Optional - defaults to false.\n     * @param disableListChain Whether we want to disable list chain functionality. @default false\n     */\n    writeBack(shouldReuseAllAncestorListElements?: boolean, disableListChain?: boolean) {\n        if (!this.rootList) {\n            throw new Error('rootList must not be null');\n        }\n\n        const doc = this.rootList.ownerDocument;\n        const listStack: Node[] = [doc.createDocumentFragment()];\n        const placeholder = doc.createTextNode('');\n        let start = this.getStart() || 1;\n        let lastList: Node;\n\n        // Use a placeholder to hold the position since the root list may be moved into document fragment later\n        this.rootList.parentNode!.replaceChild(placeholder, this.rootList);\n\n        this.items.forEach(item => {\n            const newListStart = item.getNewListStart();\n\n            if (newListStart && newListStart != start) {\n                listStack.splice(1, listStack.length - 1);\n                start = newListStart;\n            }\n\n            item.writeBack(listStack, this.rootList, shouldReuseAllAncestorListElements);\n            const topList = listStack[1];\n\n            item.applyListStyle(this.rootList, start);\n\n            if (safeInstanceOf(topList, 'HTMLOListElement')) {\n                if (lastList != topList) {\n                    if (start == 1) {\n                        topList.removeAttribute('start');\n                    } else {\n                        topList.start = start;\n                    }\n                }\n\n                if (item.getLevel() == 1 && !item.isDummy() && !disableListChain) {\n                    start++;\n                }\n            }\n\n            lastList = topList;\n        });\n\n        // Restore the content to the position of placeholder\n        placeholder.parentNode!.replaceChild(listStack[0], placeholder);\n    }\n\n    /**\n     * Sets the New List Start Property, that is going to be used to create a new List in the WriteBack function\n     * @param separator The HTML element that indicates when to split the VList\n     * @param startNumber The start number of the new List\n     */\n    split(separator: HTMLElement, startNumber: number) {\n        if (!this.rootList) {\n            throw new Error('rootList must not be null');\n        }\n\n        //Traverse the items of the VList, when the separator is found, set the New List Start Property\n        for (let index = 0; index < this.items.length; index++) {\n            if (this.items[index].getNode() == separator) {\n                this.items[index].setNewListStart(startNumber);\n                return;\n            }\n        }\n    }\n\n    /**\n     * Set indentation of the given range of this list\n     * @param start Start position to operate from\n     * @param end End position to operate to\n     * @param indentation Indent or outdent\n     */\n    setIndentation(\n        start: NodePosition,\n        end: NodePosition,\n        indentation: Indentation | CompatibleIndentation\n    ): void;\n\n    /**\n     * Outdent the give range of this list\n     * @param start Start position to operate from\n     * @param end End position to operate to\n     * @param indentation Specify to outdent\n     * @param softOutdent (Optional) True to make the item to by dummy (no bullet or number) if the item is not dummy,\n     * otherwise outdent the item\n     * @param preventItemRemoval (Optional) True to prevent the indentation to remove the bullet when outdenting a first\n     * level list item, by default is false\n     */\n    setIndentation(\n        start: NodePosition,\n        end: NodePosition,\n        indentation: Indentation.Decrease | CompatibleIndentation.Decrease,\n        softOutdent?: boolean,\n        preventItemRemoval?: boolean\n    ): void;\n\n    setIndentation(\n        start: NodePosition,\n        end: NodePosition,\n        indentation: Indentation | CompatibleIndentation,\n        softOutdent?: boolean,\n        preventItemRemoval: boolean = false\n    ) {\n        let shouldAddMargin = false;\n        this.findListItems(start, end, item => {\n            shouldAddMargin = shouldAddMargin || this.items.indexOf(item) == 0;\n            indentation == Indentation.Decrease\n                ? softOutdent && !item.isDummy()\n                    ? item.setIsDummy(true /*isDummy*/)\n                    : item.outdent(preventItemRemoval)\n                : item.indent();\n        });\n\n        if (shouldAddMargin && preventItemRemoval) {\n            for (let index = 0; index < this.items.length; index++) {\n                this.items[index].addNegativeMargins();\n            }\n        }\n    }\n\n    /**\n     * Set alignment of the given range of this list\n     * @param start Start position to operate from\n     * @param end End position to operate to\n     * @param alignment Align items left, center or right\n     */\n\n    setAlignment(\n        start: NodePosition,\n        end: NodePosition,\n        alignment: Alignment | CompatibleAlignment\n    ) {\n        this.rootList.style.display = 'flex';\n        this.rootList.style.flexDirection = 'column';\n        this.findListItems(start, end, item => {\n            let align = 'start';\n            if (alignment == Alignment.Center) {\n                align = 'center';\n            } else if (alignment == Alignment.Right) {\n                align = 'end';\n            }\n            item.getNode().style.alignSelf = align;\n        });\n    }\n\n    /**\n     * Change list type of the given range of this list.\n     * If some of the items are not real list item yet, this will make them to be list item with given type\n     * If all items in the given range are already in the type to change to, this becomes an outdent operation\n     * @param start Start position to operate from\n     * @param end End position to operate to\n     * @param targetType Target list type\n     */\n    changeListType(\n        start: NodePosition,\n        end: NodePosition,\n        targetType: ListType | CompatibleListType\n    ) {\n        let needChangeType = false;\n\n        this.findListItems(start, end, item => {\n            needChangeType = needChangeType || item.getListType() != targetType;\n        });\n        this.findListItems(start, end, item =>\n            needChangeType ? item.changeListType(targetType) : item.outdent()\n        );\n    }\n\n    /**\n     * Change list style of the given range of this list.\n     * If some of the items are not real list item yet, this will make them to be list item with given style\n     * @param orderedStyle The style of ordered list\n     * @param unorderedStyle The style of unordered list\n     */\n    setListStyleType(\n        orderedStyle?: NumberingListType | CompatibleNumberingListType,\n        unorderedStyle?: BulletListType | CompatibleBulletListType\n    ) {\n        const style = getMetadata<ListStyleMetadata>(this.rootList, ListStyleDefinitionMetadata);\n        const styleMetadata = createListStyleMetadata(\n            style,\n            orderedStyle as NumberingListType,\n            unorderedStyle as BulletListType\n        );\n        setMetadata(this.rootList, styleMetadata, ListStyleDefinitionMetadata);\n    }\n\n    /**\n     * Append a new item to this VList\n     * @param node node of the item to append. If it is not wrapped with LI tag, it will be wrapped\n     * @param type Type of this list item, can be ListType.None\n     */\n    appendItem(node: Node, type: ListType | CompatibleListType) {\n        const nodeTag = getTagOfNode(node);\n\n        // Change DIV tag to SPAN. Otherwise we cannot create new list item by Enter key in Safari\n        if (nodeTag == 'DIV') {\n            node = changeElementTag(<HTMLElement>node, 'LI')!;\n        } else if (nodeTag != 'LI') {\n            node = wrap(node, 'LI');\n        }\n\n        this.items.push(\n            type == ListType.None\n                ? new VListItem(node)\n                : new VListItem(node, <ListType.Ordered | ListType.Unordered>(<any>type))\n        );\n    }\n\n    /**\n     * Merge the given VList into current VList.\n     * - All list items will be removed from the given VList and added into this list.\n     * - The root node of the given VList will be removed from DOM tree\n     * - If there are orphan items in the given VList, they will be merged into the last item\n     *   of this list if any.\n     * @param list The vList to merge from\n     */\n    mergeVList(list: VList) {\n        if (list && list != this) {\n            list.items.forEach(item => this.items.push(item));\n            list.items.splice(0, list.items.length);\n            list.rootList.parentNode?.removeChild(list.rootList);\n        }\n    }\n\n    /**\n     * Get the index of the List Item in the current List\n     * If the root list is:\n     * Ordered list, the listIndex start count is going to be the start property of the OL - 1,\n     * @example For example if we want to find the index of Item 2 in the list below, the returned index is going to be 6\n     *  * ```html\n     * <ol start=\"5\">\n     *   <li>item 1</li>\n     *   <li>item 2</li> <!-- Node to find -->\n     *   <li>item 3</li>\n     * </ol>\n     * ```\n     * Unordered list, the listIndex start count starts from 0\n     * @example For example if we want to find the index of Item 2 in the list below, the returned index is going to be 2\n     * ```html\n     * <ul>\n     *   <li>item 1</li>\n     *   <li>item 2</li> <!-- Node to find -->\n     *   <li>item 3</li>\n     * </ul>\n     * ```\n     * @param input List item to find in the root list\n     */\n    getListItemIndex(input: Node) {\n        if (this.items) {\n            let listIndex = (this.getStart() || 1) - 1;\n\n            for (let index = 0; index < this.items.length; index++) {\n                const child = this.items[index];\n                if (child.getLevel() == 1 && !child.isDummy()) {\n                    listIndex++;\n                }\n\n                if (child.getNode() == input) {\n                    return listIndex;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Get the Start property of the root list of this VList\n     * @returns Start number of the list\n     */\n    getStart(): number | undefined {\n        return safeInstanceOf(this.rootList, 'HTMLOListElement') ? this.rootList.start : undefined;\n    }\n\n    private findListItems(\n        start: NodePosition,\n        end: NodePosition,\n        callback?: (item: VListItem) => any\n    ): VListItem[] {\n        if (this.items.length == 0) {\n            return [];\n        }\n\n        const listStartPos = new Position(this.items[0].getNode(), PositionType.Begin);\n        const listEndPos = new Position(\n            this.items[this.items.length - 1].getNode(),\n            PositionType.End\n        );\n\n        let startIndex = listStartPos.isAfter(start) ? 0 : -1;\n        let endIndex = this.items.length - (end.isAfter(listEndPos) ? 1 : 0);\n\n        this.items.forEach((item, index) => {\n            startIndex = item.contains(start.node) ? index : startIndex;\n            endIndex = item.contains(end.node) ? index : endIndex;\n        });\n\n        startIndex = endIndex < this.items.length ? Math.max(0, startIndex) : startIndex;\n        endIndex = startIndex >= 0 ? Math.min(this.items.length - 1, endIndex) : endIndex;\n\n        const result = startIndex <= endIndex ? this.items.slice(startIndex, endIndex + 1) : [];\n\n        if (callback) {\n            result.forEach(callback);\n        }\n\n        return result;\n    }\n\n    private populateItems(\n        list: HTMLOListElement | HTMLUListElement,\n        listTypes: (\n            | ListType.Ordered\n            | ListType.Unordered\n            | CompatibleListType.Ordered\n            | CompatibleListType.Unordered\n        )[] = []\n    ) {\n        const type = getListTypeFromNode(list);\n        const items = toArray(list.childNodes);\n\n        items.forEach(item => {\n            const newListTypes = [...listTypes, type];\n\n            if (isListElement(item)) {\n                this.populateItems(item, newListTypes);\n            } else if (item.nodeType != NodeType.Text || (item.nodeValue || '').trim() != '') {\n                this.items.push(new VListItem(item, ...newListTypes));\n            }\n        });\n    }\n}\n\n//Normalization\n\n// Step 1: Move all non-LI direct children under list into LI\n// e.g.\n// From: <ul><li>line 1</li>line 2</ul>\n// To:   <ul><li>line 1<div>line 2</div></li></ul>\nfunction moveChildNodesToLi(list: HTMLElement) {\n    let currentItem: HTMLLIElement | null = null;\n\n    toArray(list.childNodes).forEach(child => {\n        if (getTagOfNode(child) == 'LI') {\n            currentItem = child as HTMLLIElement;\n        } else if (isListElement(child)) {\n            currentItem = null;\n        } else if (currentItem && !isNodeEmpty(child, true /*trimContent*/)) {\n            currentItem.appendChild(isBlockElement(child) ? child : wrap(child));\n        }\n    });\n}\n\n// Step 2: Move nested LI up to under list directly\n// e.g.\n// From: <ul><li>line 1<li>line 2</li>line 3</li></ul>\n// To:   <ul><li>line 1</li><li>line 2<div>line 3</div></li></ul>\nfunction moveLiToList(li: HTMLElement) {\n    while (!isListElement(li.parentNode)) {\n        splitParentNode(li, true /*splitBefore*/);\n        let furtherNodes: Node[] = toArray(li.parentNode!.childNodes).slice(1);\n\n        if (furtherNodes.length > 0) {\n            if (!isBlockElement(furtherNodes[0])) {\n                furtherNodes = [wrap(furtherNodes)];\n            }\n            furtherNodes.forEach(node => li.appendChild(node));\n        }\n\n        unwrap(li.parentNode!);\n    }\n}\n\nfunction getValidValue<T>(...values: (T | undefined)[]): T | undefined {\n    return values.filter(x => x !== undefined)[0];\n}\n\nfunction createListStyleMetadata(\n    style: ListStyleMetadata | null,\n    orderedStyle?: NumberingListType | CompatibleNumberingListType,\n    unorderedStyle?: BulletListType | CompatibleBulletListType\n): ListStyleMetadata {\n    return {\n        orderedStyleType: getValidValue(\n            orderedStyle,\n            style?.orderedStyleType,\n            NumberingListType.Decimal\n        ),\n        unorderedStyleType: getValidValue(\n            unorderedStyle,\n            style?.unorderedStyleType,\n            BulletListType.Disc\n        ),\n    };\n}\n","import arrayPush from '../jsUtils/arrayPush';\nimport getRootListNode from './getRootListNode';\nimport isNodeAfter from '../utils/isNodeAfter';\nimport isNodeInRegion from '../region/isNodeInRegion';\nimport queryElements from '../utils/queryElements';\nimport VList from './VList';\nimport { ListType } from 'roosterjs-editor-types';\nimport type { RegionBase } from 'roosterjs-editor-types';\n\nconst CHAIN_NAME_PREFIX = '__List_Chain_';\nconst CHAIN_DATASET_NAME = 'listchain';\nconst AFTER_CURSOR_DATASET_NAME = 'listchainafter';\nlet lastChainIndex = 0;\n\n/**\n * Represent a chain of list nodes.\n * A chain of lists is a virtual link of lists that have continuous numbers, when editor one of them,\n * all others should also be updated in order to main the list number to be continuous.\n */\nexport default class VListChain {\n    private lastNumber = 0;\n    private lastNumberBeforeCursor = 0;\n\n    /**\n     * Create an array of VListChain from current region in editor\n     * @param region The region to create VListChain from\n     * @param currentNode Optional current node, used for mark lists that are after this node\n     * @param nameGenerator Used by test code only\n     */\n    static createListChains(\n        region: RegionBase | RegionBase[],\n        currentNode?: Node,\n        nameGenerator?: () => string\n    ): VListChain[] {\n        const regions = Array.isArray(region) ? region : region ? [region] : [];\n        const result: VListChain[] = [];\n        regions.forEach(region => {\n            const chains: VListChain[] = [];\n            let lastList: HTMLOListElement;\n\n            queryElements(region.rootNode, 'ol', ol => {\n                const list = getRootListNode(region, 'ol', ol);\n\n                if (lastList != list) {\n                    const chain =\n                        chains.filter(c => c.canAppendToTail(list))[0] ||\n                        new VListChain(region, (nameGenerator || createListChainName)());\n                    const index = chains.indexOf(chain);\n                    const afterCurrentNode = !!currentNode && isNodeAfter(list, currentNode);\n\n                    if (!afterCurrentNode) {\n                        // Make sure current one is at the front if current block has not been met, so that\n                        // the first chain is always the nearest one from current node\n                        if (index >= 0) {\n                            chains.splice(index, 1);\n                        }\n\n                        chains.unshift(chain);\n                    } else if (index < 0) {\n                        chains.push(chain);\n                    }\n\n                    chain.append(list, afterCurrentNode);\n                    lastList = list;\n                }\n            });\n\n            arrayPush(result, chains);\n        });\n\n        return result;\n    }\n\n    /**\n     * Check if a list with the given start number can be appended next to the last list before cursor\n     * @param startNumber The start number of the new list\n     */\n    canAppendAtCursor(startNumber: number): boolean {\n        return startNumber > 1 && this.lastNumberBeforeCursor + 1 == startNumber;\n    }\n\n    /**\n     * Create a VList to wrap the block of the given node, and append to current chain\n     * @param container The container node to create list at\n     * @param startNumber Start number of the new list\n     */\n    createVListAtBlock(container: Node, startNumber: number): VList | null {\n        if (container && container.parentNode) {\n            const list = container.ownerDocument!.createElement('ol');\n\n            list.start = startNumber;\n            this.applyChainName(list);\n            container.parentNode.insertBefore(list, container);\n\n            const vList = new VList(list);\n\n            vList.appendItem(container, ListType.None);\n            return vList;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * After change the lists, commit the change to all lists in this chain to update the list number,\n     * and clear the temporary dataset values added to list node\n     * @param shouldReuseAllAncestorListElements Whether we can parent list item (OL/UL) even if its list type does not match the previous one. @default false\n     * @param disableListChain Whether we want to disable list chain functionality, so splitted list will always restart its number from 1 @default false\n     */\n    commit(shouldReuseAllAncestorListElements?: boolean, disableListChain?: boolean) {\n        const lists = this.getLists();\n        let lastNumber = 0;\n\n        for (let i = 0; i < lists.length; i++) {\n            const list = lists[i];\n\n            if (!disableListChain) {\n                //If there is a list chain sequence, ensure the list chain keep increasing correctly\n                if (list.start > 1) {\n                    list.start = list.start === lastNumber ? lastNumber + 1 : list.start;\n                } else {\n                    list.start = lastNumber + 1;\n                }\n            }\n\n            const vlist = new VList(list);\n            lastNumber = vlist.getLastItemNumber() || 0;\n\n            delete list.dataset[CHAIN_DATASET_NAME];\n            delete list.dataset[AFTER_CURSOR_DATASET_NAME];\n\n            vlist.writeBack(shouldReuseAllAncestorListElements);\n        }\n    }\n\n    /**\n     * Construct a new instance of VListChain class\n     * @param editor Editor object\n     */\n    private constructor(private region: RegionBase, private name: string) {}\n\n    /**\n     * Check if the given list node is can be appended into current list chain\n     * @param list The list node to check\n     */\n    private canAppendToTail(list: HTMLOListElement) {\n        return this.lastNumber + 1 == list.start;\n    }\n\n    /**\n     * Append the given list node into this VListChain\n     * @param list The list node to append\n     * @param isAfterCurrentNode Whether this list is after current node\n     */\n    private append(list: HTMLOListElement, isAfterCurrentNode: boolean) {\n        this.applyChainName(list);\n        this.lastNumber = new VList(list).getLastItemNumber() || 0;\n\n        if (isAfterCurrentNode) {\n            list.dataset[AFTER_CURSOR_DATASET_NAME] = 'true';\n        } else {\n            this.lastNumberBeforeCursor = this.lastNumber;\n        }\n    }\n\n    private applyChainName(list: HTMLOListElement) {\n        list.dataset[CHAIN_DATASET_NAME] = this.name;\n    }\n\n    private getLists() {\n        return queryElements(\n            this.region.rootNode,\n            `ol[data-${CHAIN_DATASET_NAME}=${this.name}]`\n        ).filter(node => isNodeInRegion(this.region, node)) as HTMLOListElement[];\n    }\n}\n\nfunction createListChainName() {\n    return CHAIN_NAME_PREFIX + lastChainIndex++;\n}\n","import contains from '../utils/contains';\nimport getListTypeFromNode from './getListTypeFromNode';\nimport getStyles from '../style/getStyles';\nimport getTagOfNode from '../utils/getTagOfNode';\nimport isBlockElement from '../utils/isBlockElement';\nimport moveChildNodes from '../utils/moveChildNodes';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport setBulletListMarkers from './setBulletListMarkers';\nimport setListItemStyle from './setListItemStyle';\nimport setNumberingListMarkers from './setNumberingListMarkers';\nimport setStyles from '../style/setStyles';\nimport toArray from '../jsUtils/toArray';\nimport unwrap from '../utils/unwrap';\nimport wrap from '../utils/wrap';\nimport { createNumberDefinition, createObjectDefinition } from '../metadata/definitionCreators';\nimport { getMetadata, setMetadata } from '../metadata/metadata';\nimport {\n    BulletListType,\n    KnownCreateElementDataIndex,\n    ListType,\n    NumberingListType,\n} from 'roosterjs-editor-types';\nimport type {\n    CompatibleBulletListType,\n    CompatibleListType,\n    CompatibleNumberingListType,\n} from 'roosterjs-editor-types/lib/compatibleTypes';\n\nconst orderListStyles = [null, 'lower-alpha', 'lower-roman'];\nconst unorderedListStyles = ['disc', 'circle', 'square'];\n\nconst MARGIN_BASE = '0in 0in 0in 0.5in';\nconst NEGATIVE_MARGIN = '-.25in';\n\nconst stylesToInherit = ['font-size', 'font-family', 'color'];\nconst attrsToInherit = ['data-ogsc', 'data-ogsb', 'data-ogac', 'data-ogab'];\n\n/**\n * @internal\n * The definition for the number of BulletListType or NumberingListType\n */\nexport const ListStyleDefinitionMetadata = createObjectDefinition<ListStyleMetadata>(\n    {\n        orderedStyleType: createNumberDefinition(\n            true /** isOptional */,\n            undefined /** value **/,\n            NumberingListType.Min,\n            NumberingListType.Max\n        ),\n        unorderedStyleType: createNumberDefinition(\n            true /** isOptional */,\n            undefined /** value **/,\n            BulletListType.Min,\n            BulletListType.Max\n        ),\n    },\n    true /** isOptional */,\n    true /** allowNull */\n);\n\n/**\n * @internal\n * Represents the metadata of the style of a list element\n */\nexport interface ListStyleMetadata {\n    orderedStyleType?: NumberingListType | CompatibleNumberingListType;\n    unorderedStyleType?: BulletListType | CompatibleBulletListType;\n}\n\n/**\n * !!! Never directly create instance of this class. It should be created within VList class !!!\n *\n * Represent a list item.\n *\n * A list item is normally wrapped using a LI tag. But this class is only a logical item,\n * it can be a LI tag, or another other type of node which means it is actually not a list item.\n * That can happen after we do \"outdent\" on a 1-level list item, then it becomes not a list item.\n */\nexport default class VListItem {\n    private listTypes: (ListType | CompatibleListType)[];\n    private node: HTMLLIElement;\n    private dummy: boolean;\n    private newListStart: number | undefined = undefined;\n\n    /**\n     * Construct a new instance of VListItem class\n     * @param node The DOM node for this item\n     * @param listTypes An array represents list types of all parent and current level.\n     * Skip this parameter for a non-list item.\n     */\n    constructor(\n        node: Node,\n        ...listTypes: (\n            | ListType.Ordered\n            | ListType.Unordered\n            | CompatibleListType.Ordered\n            | CompatibleListType.Unordered\n        )[]\n    ) {\n        if (!node) {\n            throw new Error('node must not be null');\n        }\n\n        this.node = safeInstanceOf(node, 'HTMLLIElement')\n            ? node\n            : (wrap(node, KnownCreateElementDataIndex.BlockListItem) as HTMLLIElement);\n        const display = this.node.style.display;\n\n        this.dummy = display != 'list-item' && display != '';\n\n        // Always add a None list type in front of all other types to represent non-list scenario.\n        this.listTypes = [ListType.None, ...listTypes];\n    }\n\n    /**\n     * Get type of current list item\n     */\n    getListType(): ListType | CompatibleListType {\n        return this.listTypes[this.listTypes.length - 1];\n    }\n\n    /**\n     * Get the levels of this list item.\n     */\n    getLevel(): number {\n        return this.listTypes.length - 1;\n    }\n\n    /**\n     * Get DOM node of this list item\n     */\n    getNode(): HTMLLIElement {\n        return this.node;\n    }\n\n    /**\n     * Get the Start Number of the new List\n     */\n    getNewListStart(): number | undefined {\n        return this.newListStart;\n    }\n\n    /**\n     * Check if a given node is contained by this list item\n     * @param node The node to check\n     */\n    contains(node: Node): boolean {\n        return contains(this.node, node, true /*treatSameNodeAsContain*/);\n    }\n\n    /**\n     * Check if this item is a dummy item.\n     * A dummy item is also represented by LI tag, but it won't render a bullet (for Unordered list) or a number (for Ordered list)\n     * normally it has CSS style display set to a value other than \"list-item\"\n     */\n    isDummy() {\n        return this.dummy;\n    }\n\n    /**\n     * @deprecated Always return false\n     */\n    isOrphanItem(): boolean {\n        return false;\n    }\n\n    /**\n     * @deprecated\n     */\n    canMerge(item: VListItem): boolean {\n        if (!item?.isOrphanItem() || this.listTypes.length != item.listTypes.length) {\n            return false;\n        }\n\n        return this.listTypes.every((type, index) => item.listTypes[index] == type);\n    }\n\n    /**\n     * @deprecated\n     */\n    mergeItems(items: VListItem[]) {\n        const nodesToWrap = items?.map(item => item.node) || [];\n        const targetNodes = wrapIfNotBlockNode(\n            nodesToWrap,\n            true /*checkFirst*/,\n            false /*checkLast*/\n        );\n        targetNodes.forEach(node => this.node.appendChild(node));\n    }\n\n    /**\n     * Indent this item\n     * If this is not an list item, it will be no op\n     */\n    indent() {\n        if (this.node.style.marginLeft == NEGATIVE_MARGIN) {\n            this.node.style.margin = '';\n            this.node.style.marginLeft = '';\n            return;\n        }\n\n        const listType = this.getListType();\n        if (listType != ListType.None) {\n            this.listTypes.push(listType);\n        }\n    }\n\n    /**\n     * Outdent this item\n     * If this item is already not an list item, it will be no op\n     * @param preventItemRemoval Whether prevent the list item to be removed for the listItem by default false\n     */\n    outdent(preventItemRemoval: boolean = false) {\n        const expectedLength = preventItemRemoval ? 2 : 1;\n        if (this.listTypes.length > expectedLength) {\n            this.listTypes.pop();\n        }\n    }\n\n    /**\n     * Add negative margin to the List item\n     */\n    addNegativeMargins() {\n        this.node.style.margin = MARGIN_BASE;\n        this.node.style.marginLeft = NEGATIVE_MARGIN;\n    }\n\n    /**\n     * Change list type of this item\n     * @param targetType The target list type to change to\n     */\n    changeListType(targetType: ListType | CompatibleListType) {\n        if (targetType == ListType.None) {\n            this.listTypes = [targetType];\n        } else {\n            this.outdent();\n            this.listTypes.push(targetType);\n        }\n    }\n\n    /**\n     * Set whether the item is a dummy item\n     * @param isDummy Whether the item is a dummy item\n     */\n    setIsDummy(isDummy: boolean) {\n        this.dummy = isDummy;\n    }\n\n    /**\n     * Set the start Number of the new list\n     * @param isDummy Whether the item is a dummy item\n     */\n    setNewListStart(startNumber: number) {\n        this.newListStart = startNumber;\n    }\n\n    /**\n     * Apply the list style type\n     * @param rootList the vList that receives the style\n     * @param index the list item index\n     */\n    applyListStyle(rootList: HTMLOListElement | HTMLUListElement, index: number) {\n        const style = getMetadata<ListStyleMetadata>(rootList, ListStyleDefinitionMetadata);\n        // The list just need to be styled if it is at top level, so the listType length for this Vlist must be 2.\n        const isFirstLevel = this.listTypes.length < 3;\n        if (style) {\n            if (\n                isFirstLevel &&\n                this.listTypes[1] === ListType.Unordered &&\n                style.unorderedStyleType\n            ) {\n                setBulletListMarkers(this.node, style.unorderedStyleType);\n            } else if (\n                isFirstLevel &&\n                this.listTypes[1] === ListType.Ordered &&\n                style.orderedStyleType\n            ) {\n                setNumberingListMarkers(this.node, style.orderedStyleType, index);\n            } else {\n                this.node.style.removeProperty('list-style-type');\n            }\n        }\n    }\n\n    /**\n     * Write the change result back into DOM\n     * @param listStack current stack of list elements\n     * @param originalRoot Original list root element. It will be reused when write back if possible\n     * @param shouldReuseAllAncestorListElements Optional - defaults to false. If true, only make\n     *              sure the direct parent of this list matches the list types when writing back.\n     */\n    writeBack(\n        listStack: Node[],\n        originalRoot?: HTMLOListElement | HTMLUListElement,\n        shouldReuseAllAncestorListElements: boolean = false\n    ) {\n        let nextLevel = 1;\n\n        if (shouldReuseAllAncestorListElements) {\n            // Remove any un-needed lists from the stack.\n            if (listStack.length > this.listTypes.length) {\n                listStack.splice(this.listTypes.length);\n            }\n\n            // 1. If the listStack is the same length as the listTypes for this item, check\n            // if the last item needs to change, and remove it if needed. We can always re-use\n            // the other lists even if the type doesn't match - since the display is the same\n            // as long as the list immediately surrounding the item is correct.\n            const listStackEndIndex = listStack.length - 1;\n            if (\n                listStackEndIndex === this.listTypes.length - 1 && // they are the same length\n                getListTypeFromNode(listStack[listStackEndIndex]) !==\n                    this.listTypes[listStackEndIndex]\n            ) {\n                listStack.splice(listStackEndIndex);\n            }\n\n            nextLevel = listStack.length;\n        } else {\n            // 1. Determine list elements that we can reuse\n            // e.g.:\n            //    passed in listStack: Fragment > OL > UL > OL\n            //    local listTypes:     null     > OL > UL > UL > OL\n            //    then Fragment > OL > UL can be reused\n            for (; nextLevel < listStack.length; nextLevel++) {\n                if (getListTypeFromNode(listStack[nextLevel]) !== this.listTypes[nextLevel]) {\n                    listStack.splice(nextLevel);\n                    break;\n                }\n            }\n        }\n\n        // 2. Add new list elements\n        // e.g.:\n        //    passed in listStack: Fragment > OL > UL\n        //    local listTypes:     null     > OL > UL > UL > OL\n        //    then we need to create a UL and a OL tag\n        for (; nextLevel < this.listTypes.length; nextLevel++) {\n            const stackLength = listStack.length - 1;\n            const newList = createListElement(\n                listStack[0],\n                this.listTypes[nextLevel],\n                nextLevel,\n                originalRoot\n            );\n\n            listStack[stackLength].appendChild(newList);\n            listStack.push(newList);\n\n            //If the current node parent is in the same deep child index,\n            //apply the styles of the current parent list to the new list\n            if (this.getDeepChildIndex(originalRoot) == stackLength) {\n                const listStyleType = this.node.parentElement?.style.listStyleType;\n                if (\n                    listStyleType &&\n                    getTagOfNode(this.node.parentElement) === getTagOfNode(newList)\n                ) {\n                    newList.style.listStyleType = listStyleType;\n                }\n            }\n        }\n        // 3. Add current node into deepest list element\n        listStack[listStack.length - 1].appendChild(this.node);\n        this.node.style.setProperty('display', this.dummy ? 'block' : null);\n\n        // 4. Inherit styles of the child element to the li, so we are able to apply the styles to the ::marker\n        if (this.listTypes.length > 1) {\n            setListItemStyle(this.node, stylesToInherit, true /*isCssStyle*/);\n            setListItemStyle(this.node, attrsToInherit, false /*isCssStyle*/);\n        }\n\n        // 5. If this is not a list item now, need to unwrap the LI node and do proper handling\n        if (this.listTypes.length <= 1) {\n            // If original <LI> node has styles for font and color, we need to apply it to new parent\n            const isLi = getTagOfNode(this.node) == 'LI';\n            const stylesToApply = isLi\n                ? {\n                      'font-family': this.node.style.fontFamily,\n                      'font-size': this.node.style.fontSize,\n                      color: this.node.style.color,\n                  }\n                : undefined;\n\n            const childNodes = isLi ? getChildrenAndUnwrap(this.node) : [this.node];\n\n            if (stylesToApply) {\n                for (let i = 0; i < childNodes.length; i++) {\n                    if (safeInstanceOf(childNodes[i], 'Text')) {\n                        childNodes[i] = wrap(childNodes[i], 'span');\n                    }\n\n                    const node = childNodes[i];\n\n                    if (safeInstanceOf(node, 'HTMLElement')) {\n                        const styles = {\n                            ...stylesToApply,\n                            ...getStyles(node),\n                        };\n                        setStyles(node, styles);\n\n                        attrsToInherit.forEach(attr => {\n                            const attrValue = this.node.getAttribute(attr);\n\n                            if (attrValue) {\n                                node.setAttribute(attr, attrValue);\n                            }\n                        });\n                    }\n                }\n            }\n\n            wrapIfNotBlockNode(childNodes, true /*checkFirst*/, true /*checkLast*/);\n        }\n    }\n\n    /**\n     * Get the index of how deep is the current node parent list inside of the original root list.\n     * @example In the following structure this function would return 2\n     * ```html\n     *  <ol> <!-- original Root -->\n     *      <ol>\n     *          <ol>\n     *              <li></li> <!-- this.node  -->\n     *          </ol>\n     *      </ol>\n     *  </ol>\n     * ```\n     * @param originalRoot The root list\n     * @returns -1  if the node does not have parent element or if original root was not provided,\n     *              else, how deep is the parent element inside of the original root.\n     */\n    private getDeepChildIndex(originalRoot: HTMLOListElement | HTMLUListElement | undefined) {\n        let parentElement = this.node.parentElement;\n        if (originalRoot && parentElement) {\n            let deepIndex = 0;\n            while (parentElement && parentElement != originalRoot) {\n                deepIndex++;\n                parentElement = parentElement?.parentElement || null;\n            }\n            return deepIndex;\n        }\n        return -1;\n    }\n}\n\nfunction createListElement(\n    newRoot: Node,\n    listType: ListType | CompatibleListType,\n    nextLevel: number,\n    originalRoot?: HTMLOListElement | HTMLUListElement\n): HTMLOListElement | HTMLUListElement {\n    const doc = newRoot.ownerDocument!;\n    let result: HTMLOListElement | HTMLUListElement;\n\n    // Try to reuse the existing root element\n    // It can be reused when\n    // 1. Current list item is level 1 (top level), AND\n    // 2. Original root exists, AND\n    // 3. They have the same list type AND\n    // 4. The original root is not used yet\n    if (nextLevel == 1 && originalRoot && listType == getListTypeFromNode(originalRoot)) {\n        if (contains(newRoot, originalRoot)) {\n            // If it is already used, let's clone one and remove ID to avoid duplicating ID\n            result = originalRoot.cloneNode(false /*deep*/) as HTMLOListElement | HTMLUListElement;\n            (<HTMLOListElement>result).removeAttribute('id');\n        } else {\n            // Remove all child nodes, they will be added back later when write back other items\n            moveChildNodes(originalRoot);\n            result = originalRoot;\n        }\n    } else {\n        // Can't be reused, can't clone, let's create a new one\n        result = doc.createElement(listType == ListType.Ordered ? 'ol' : 'ul');\n    }\n\n    // Always maintain the metadata saved in the list\n    if (originalRoot && nextLevel == 1 && listType != getListTypeFromNode(originalRoot)) {\n        const style = getMetadata<ListStyleMetadata>(originalRoot, ListStyleDefinitionMetadata);\n        if (style) {\n            setMetadata(result, style, ListStyleDefinitionMetadata);\n        }\n    }\n\n    if (listType == ListType.Ordered && nextLevel > 1) {\n        result.style.setProperty(\n            'list-style-type',\n            orderListStyles[(nextLevel - 1) % orderListStyles.length]\n        );\n    }\n\n    if (listType == ListType.Unordered && nextLevel > 1) {\n        result.style.setProperty(\n            'list-style-type',\n            unorderedListStyles[(nextLevel - 1) % unorderedListStyles.length]\n        );\n    }\n\n    return result;\n}\n\nfunction wrapIfNotBlockNode(nodes: Node[], checkFirst: boolean, checkLast: boolean): Node[] {\n    if (\n        nodes.length > 0 &&\n        (!checkFirst || !isBlockElement(nodes[0])) &&\n        (!checkLast || !isBlockElement(nodes[nodes.length]))\n    ) {\n        nodes = [wrap(nodes)];\n    }\n\n    return nodes;\n}\n\nfunction getChildrenAndUnwrap(node: Node): Node[] {\n    const result = toArray(node.childNodes);\n    unwrap(node);\n    return result;\n}\n","const ALPHABET: Record<number, string> = {\n    0: 'A',\n    1: 'B',\n    2: 'C',\n    3: 'D',\n    4: 'E',\n    5: 'F',\n    6: 'G',\n    7: 'H',\n    8: 'I',\n    9: 'J',\n    10: 'K',\n    11: 'L',\n    12: 'M',\n    13: 'N',\n    14: 'O',\n    15: 'P',\n    16: 'Q',\n    17: 'R',\n    18: 'S',\n    19: 'T',\n    20: 'U',\n    21: 'V',\n    22: 'W',\n    23: 'X',\n    24: 'Y',\n    25: 'Z',\n};\n\n/**\n * Convert decimal numbers into english alphabet letters\n * @param decimal The decimal number that needs to be converted\n * @param isLowerCase if true the roman value will appear in lower case\n * @returns\n */\nexport default function convertDecimalsToAlpha(decimal: number, isLowerCase?: boolean): string {\n    let alpha = '';\n    while (decimal >= 0) {\n        alpha = ALPHABET[decimal % 26] + alpha;\n        decimal = Math.floor(decimal / 26) - 1;\n    }\n    return isLowerCase ? alpha.toLowerCase() : alpha;\n}\n","import getObjectKeys from '../jsUtils/getObjectKeys';\n\nconst RomanValues: Record<string, number> = {\n    M: 1000,\n    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1,\n};\n\n/**\n * Convert decimal numbers into roman numbers\n * @param decimal The decimal number that needs to be converted\n * @param isLowerCase if true the roman value will appear in lower case\n * @returns\n */\nexport default function convertDecimalsToRoman(decimal: number, isLowerCase?: boolean) {\n    let romanValue = '';\n    for (let i of getObjectKeys(RomanValues)) {\n        let timesRomanCharAppear = Math.floor(decimal / RomanValues[i]);\n        decimal = decimal - timesRomanCharAppear * RomanValues[i];\n        romanValue = romanValue + i.repeat(timesRomanCharAppear);\n    }\n    return isLowerCase ? romanValue.toLocaleLowerCase() : romanValue;\n}\n","import createElement from '../utils/createElement';\nimport getRootListNode from './getRootListNode';\nimport getSelectedBlockElementsInRegion from '../region/getSelectedBlockElementsInRegion';\nimport isNodeInRegion from '../region/isNodeInRegion';\nimport Position from '../selection/Position';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport shouldSkipNode from '../utils/shouldSkipNode';\nimport toArray from '../jsUtils/toArray';\nimport VList from './VList';\nimport wrap from '../utils/wrap';\nimport { getLeafSibling } from '../utils/getLeafSibling';\nimport { isListElement } from './getListTypeFromNode';\nimport { KnownCreateElementDataIndex, ListType, PositionType } from 'roosterjs-editor-types';\nimport type { Region } from 'roosterjs-editor-types';\n\nconst ListSelector = 'ol,ul';\n\n/**\n * Create a VList object from the given region.\n * @param region The region to get VList from\n * @param includeSiblingLists True to also try get lists before and after the selection and merge them together,\n * false to only include the list for the selected blocks\n * @param startNode (Optional) When specified, try get VList which will contain this node.\n * If not specified, get VList from selection of this region\n */\nexport default function createVListFromRegion(\n    region: Region,\n    includeSiblingLists?: boolean,\n    startNode?: Node\n): VList | null {\n    if (!region) {\n        return null;\n    }\n\n    let nodes: Node[] = [];\n\n    if (startNode) {\n        const list = getRootListNode(region, ListSelector, startNode);\n        if (list) {\n            nodes.push(list);\n        }\n    } else {\n        const blocks = getSelectedBlockElementsInRegion(\n            region,\n            undefined,\n            true /* shouldApplyFormatToSpan */\n        );\n        blocks.forEach(block => {\n            const list = getRootListNode(region, ListSelector, block.getStartNode());\n\n            if (list) {\n                if (nodes[nodes.length - 1] != list) {\n                    nodes.push(list);\n                }\n                if (\n                    nodes.length == 1 &&\n                    safeInstanceOf(list, 'HTMLOListElement') &&\n                    list.start > 1\n                ) {\n                    // Do not include sibling lists if this list is not start from 1\n                    includeSiblingLists = false;\n                }\n            } else {\n                nodes.push(block.collapseToSingleElement());\n            }\n        });\n\n        if (nodes.length == 0 && !region.rootNode.firstChild) {\n            const newNode = createElement(\n                KnownCreateElementDataIndex.EmptyLine,\n                region.rootNode.ownerDocument\n            )!;\n            region.rootNode.appendChild(newNode);\n            nodes.push(newNode);\n            region.fullSelectionStart = new Position(newNode, PositionType.Begin);\n            region.fullSelectionEnd = new Position(newNode, PositionType.End);\n        }\n\n        if (includeSiblingLists) {\n            tryIncludeSiblingNode(region, nodes, false /*isNext*/);\n            tryIncludeSiblingNode(region, nodes, true /*isNext*/);\n        }\n\n        nodes = nodes.filter(node => !shouldSkipNode(node, true /*ignoreSpace*/));\n    }\n\n    let vList: VList | null = null;\n\n    if (nodes.length > 0) {\n        const firstNode = nodes.shift() || null;\n        vList = isListElement(firstNode)\n            ? new VList(firstNode)\n            : firstNode\n            ? createVListFromItemNode(firstNode)\n            : null;\n\n        if (vList) {\n            nodes.forEach(node => {\n                if (isListElement(node)) {\n                    vList!.mergeVList(new VList(node));\n                } else {\n                    vList!.appendItem(node, ListType.None);\n                }\n            });\n        }\n    }\n\n    return vList;\n}\n\nfunction tryIncludeSiblingNode(region: Region, nodes: Node[], isNext: boolean) {\n    let node: Node | null = nodes[isNext ? nodes.length - 1 : 0];\n    node = getLeafSibling(region.rootNode, node, isNext, region.skipTags, true /*ignoreSpace*/);\n    node = getRootListNode(region, ListSelector, node);\n    if (isNodeInRegion(region, node) && isListElement(node)) {\n        if (isNext) {\n            if (!safeInstanceOf(node, 'HTMLOListElement') || node.start == 1) {\n                // Only include sibling list when\n                // 1. This is a unordered list, OR\n                // 2. This list starts from 1\n                nodes.push(node);\n            }\n        } else {\n            nodes.unshift(node);\n        }\n    }\n}\n\nfunction createVListFromItemNode(node: Node): VList {\n    // Wrap all child nodes under a single one, and put the new list under original root node\n    // so that the list can carry over styles under the root node.\n    const childNodes = toArray(node.childNodes);\n    const nodeForItem = childNodes.length == 1 ? childNodes[0] : wrap(childNodes, 'SPAN');\n\n    // Create a temporary OL root element for this list.\n    const listNode = node.ownerDocument!.createElement('ol'); // Either OL or UL is ok here\n    node.appendChild(listNode);\n\n    // Create the VList and append items\n    const vList = new VList(listNode);\n    vList.appendItem(nodeForItem, ListType.None);\n\n    return vList;\n}\n","import getTagOfNode from '../utils/getTagOfNode';\nimport { ListType } from 'roosterjs-editor-types';\nimport type { CompatibleListType } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * @internal\n * Get list type from a list element. The result will be either Ordered or Unordered ListType\n * @param listElement the element to get list type from\n */\nexport default function getListTypeFromNode(\n    listElement: HTMLOListElement | HTMLUListElement\n):\n    | ListType.Ordered\n    | ListType.Unordered\n    | CompatibleListType.Ordered\n    | CompatibleListType.Unordered;\n\n/**\n * @internal\n * Get list type from a DOM node. It is possible to return ListType.None\n * @param node the node to get list type from\n */\nexport default function getListTypeFromNode(node: Node | null): ListType | CompatibleListType;\n\nexport default function getListTypeFromNode(node: Node | null): ListType | CompatibleListType {\n    switch (getTagOfNode(node)) {\n        case 'OL':\n            return ListType.Ordered;\n        case 'UL':\n            return ListType.Unordered;\n        default:\n            return ListType.None;\n    }\n}\n\n/**\n * @internal\n * Check if the given DOM node is a list element (OL or UL)\n * @param node The node to check\n */\nexport function isListElement(node: Node | null): node is HTMLUListElement | HTMLOListElement {\n    return getListTypeFromNode(node) != ListType.None;\n}\n","import findClosestElementAncestor from '../utils/findClosestElementAncestor';\nimport type { RegionBase } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * A type map from selector string to HTML element type\n */\nexport interface SelectorToTypeMap {\n    ol: HTMLOListElement;\n    ul: HTMLUListElement;\n    'ol,ul': HTMLOListElement | HTMLUListElement;\n}\n\n/**\n * @internal\n * Get Root list node from the given node within the given region\n * @param region Region to scope the search into\n * @param selector The selector to search\n * @param node The start node\n */\nexport default function getRootListNode<TSelector extends keyof SelectorToTypeMap>(\n    region: RegionBase,\n    selector: TSelector,\n    node: Node | null\n): SelectorToTypeMap[TSelector] {\n    let list =\n        region &&\n        (findClosestElementAncestor(\n            node,\n            region.rootNode,\n            selector\n        ) as SelectorToTypeMap[TSelector]);\n\n    if (list) {\n        let ancestor: SelectorToTypeMap[TSelector];\n        while (\n            (ancestor = findClosestElementAncestor(\n                list.parentNode,\n                region.rootNode,\n                selector\n            ) as SelectorToTypeMap[TSelector])\n        ) {\n            list = ancestor;\n        }\n    }\n\n    return list;\n}\n","import { BulletListType } from 'roosterjs-editor-types';\nimport type { CompatibleBulletListType } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * @internal\n * Set the marker of a bullet list\n * @param li\n * @param listStyleType\n */\nexport default function setBulletListMarkers(\n    li: HTMLLIElement,\n    listStyleType: BulletListType | CompatibleBulletListType\n) {\n    const marker = bulletListStyle[listStyleType];\n    const isDisc = listStyleType === BulletListType.Disc;\n    li.style.listStyleType = isDisc ? marker : `\"${marker}\"`;\n}\n\nconst bulletListStyle: Record<string, string> = {\n    [BulletListType.Disc]: 'disc',\n    [BulletListType.Square]: '∎ ',\n    [BulletListType.Dash]: '- ',\n    [BulletListType.LongArrow]: '➔ ',\n    [BulletListType.DoubleLongArrow]: '➔ ',\n    [BulletListType.ShortArrow]: '➢ ',\n    [BulletListType.UnfilledArrow]: '➪ ',\n    [BulletListType.Hyphen]: '— ',\n};\n","import ContentTraverser from '../contentTraverser/ContentTraverser';\nimport findClosestElementAncestor from '../utils/findClosestElementAncestor';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport type { InlineElement } from 'roosterjs-editor-types';\n\n/**\n * Set the Style of a List Item provided, with the styles that the inline child elements have\n * If the child inline elements have different styles, it will not modify the styles of the list item\n * @param element the LI Element to set the styles\n * @param styles The styles that should be applied to the element.\n * @param isCssStyle True means the given styles are CSS style names, false means they are HTML attributes @default true\n */\nexport default function setListItemStyle(\n    element: HTMLLIElement,\n    styles: string[],\n    isCssStyle: boolean = true\n) {\n    const elementsStyles = getInlineChildElementsStyle(element, styles, isCssStyle);\n\n    styles.forEach(styleName => {\n        const styleValues = elementsStyles.map(style =>\n            style[styleName] !== undefined ? style[styleName] : ''\n        );\n\n        if (\n            styleValues &&\n            (styleValues.length == 1 || new Set(styleValues).size == 1) &&\n            styleValues[0]\n        ) {\n            if (isCssStyle) {\n                element.style.setProperty(styleName, styleValues[0]);\n            } else {\n                element.setAttribute(styleName, styleValues[0]);\n            }\n        }\n    });\n}\n\nfunction getInlineChildElementsStyle(element: HTMLElement, styles: string[], isCssStyle: boolean) {\n    const result: Record<string, string>[] = [];\n    const contentTraverser = ContentTraverser.createBodyTraverser(element);\n    let currentInlineElement: InlineElement | null = null;\n\n    while (contentTraverser.currentInlineElement != currentInlineElement) {\n        currentInlineElement = contentTraverser.currentInlineElement;\n        let currentNode = currentInlineElement?.getContainerNode() || null;\n        let currentStyle: Record<string, string> | null = null;\n\n        currentNode = currentNode ? findClosestElementAncestor(currentNode) : null;\n\n        // we should consider of when it is the single child node of element, the parentNode's style should add\n        // such as the \"i\", \"b\", \"span\" node in <li><span><b><i>aa</i></b></span></li>\n        while (\n            currentNode &&\n            currentNode !== element &&\n            safeInstanceOf(currentNode, 'HTMLElement') &&\n            (result.length == 0 || (currentNode.textContent?.trim().length || 0) > 0)\n        ) {\n            const element: HTMLElement = currentNode;\n\n            styles.forEach(styleName => {\n                const styleValue = isCssStyle\n                    ? element.style.getPropertyValue(styleName)\n                    : element.getAttribute(styleName);\n\n                if (!currentStyle) {\n                    currentStyle = {};\n                }\n\n                if (styleValue && !currentStyle[styleName]) {\n                    currentStyle[styleName] = styleValue;\n                }\n            });\n\n            if (currentNode?.parentNode?.childNodes.length === 1) {\n                currentNode = currentNode.parentNode;\n            } else {\n                currentNode = null;\n            }\n        }\n\n        if (currentStyle) {\n            result.push(currentStyle);\n        }\n\n        contentTraverser.getNextInlineElement();\n    }\n\n    return result;\n}\n","import convertDecimalsToAlpha from './convertDecimalsToAlpha';\nimport convertDecimalsToRoman from './convertDecimalsToRomans';\nimport { NumberingListType } from 'roosterjs-editor-types';\nimport type { CompatibleNumberingListType } from 'roosterjs-editor-types/lib/compatibleTypes';\n\ninterface MarkerStyle {\n    markerType: number;\n    markerSeparator: string;\n    markerSecondSeparator?: string;\n    lowerCase?: boolean;\n}\n\nenum MarkerTypes {\n    Decimal,\n    Roman,\n    Alpha,\n}\n\n/**\n * @internal\n * Set marker style of a numbering list\n * @param listStyleType\n * @param li\n */\nexport default function setNumberingListMarkers(\n    li: HTMLLIElement,\n    listStyleType: NumberingListType | CompatibleNumberingListType,\n    level: number\n) {\n    const { markerSeparator, markerSecondSeparator, markerType, lowerCase } = numberingListStyle[\n        listStyleType\n    ];\n\n    let markerNumber = level.toString();\n    if (markerType === MarkerTypes.Roman) {\n        markerNumber = convertDecimalsToRoman(level, lowerCase);\n    } else if (markerType === MarkerTypes.Alpha) {\n        markerNumber = convertDecimalsToAlpha(level - 1, lowerCase);\n    }\n\n    const marker = markerSecondSeparator\n        ? markerSecondSeparator + markerNumber + markerSeparator\n        : markerNumber + markerSeparator;\n\n    li.style.listStyleType = `\"${marker}\"`;\n}\n\nconst numberingListStyle: Record<string, MarkerStyle> = {\n    [NumberingListType.Decimal]: {\n        markerType: MarkerTypes.Decimal,\n        markerSeparator: '. ',\n    },\n    [NumberingListType.DecimalDash]: {\n        markerType: MarkerTypes.Decimal,\n        markerSeparator: '- ',\n    },\n    [NumberingListType.DecimalParenthesis]: {\n        markerType: MarkerTypes.Decimal,\n        markerSeparator: ') ',\n    },\n    [NumberingListType.DecimalDoubleParenthesis]: {\n        markerType: MarkerTypes.Decimal,\n        markerSeparator: ') ',\n        markerSecondSeparator: '(',\n    },\n    [NumberingListType.LowerAlpha]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: '. ',\n        lowerCase: true,\n    },\n    [NumberingListType.LowerAlphaDash]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: '- ',\n        lowerCase: true,\n    },\n    [NumberingListType.LowerAlphaParenthesis]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: ') ',\n        lowerCase: true,\n    },\n    [NumberingListType.LowerAlphaDoubleParenthesis]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: ') ',\n        markerSecondSeparator: '(',\n        lowerCase: true,\n    },\n    [NumberingListType.UpperAlpha]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: '. ',\n    },\n    [NumberingListType.UpperAlphaDash]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: '- ',\n    },\n    [NumberingListType.UpperAlphaParenthesis]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: ') ',\n    },\n    [NumberingListType.UpperAlphaDoubleParenthesis]: {\n        markerType: MarkerTypes.Alpha,\n        markerSeparator: ') ',\n        markerSecondSeparator: '(',\n    },\n    [NumberingListType.LowerRoman]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: '. ',\n        lowerCase: true,\n    },\n    [NumberingListType.LowerRomanDash]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: '- ',\n        lowerCase: true,\n    },\n    [NumberingListType.LowerRomanParenthesis]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: ') ',\n        lowerCase: true,\n    },\n    [NumberingListType.LowerRomanDoubleParenthesis]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: ') ',\n        markerSecondSeparator: '(',\n        lowerCase: true,\n    },\n    [NumberingListType.UpperRoman]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: '. ',\n    },\n    [NumberingListType.UpperRomanDash]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: '- ',\n    },\n    [NumberingListType.UpperRomanParenthesis]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: ') ',\n    },\n    [NumberingListType.UpperRomanDoubleParenthesis]: {\n        markerType: MarkerTypes.Roman,\n        markerSeparator: ') ',\n        markerSecondSeparator: '(',\n    },\n};\n","import { DefinitionType } from 'roosterjs-editor-types';\nimport type {\n    Definition,\n    NumberDefinition,\n    ArrayDefinition,\n    BooleanDefinition,\n    StringDefinition,\n    ObjectDefinition,\n    ObjectPropertyDefinition,\n} from 'roosterjs-editor-types';\n\n/**\n * Create a number definition\n * @param isOptional Whether this property is optional\n * @param value Optional value of the number\n * @param minValue Optional minimum value\n * @param maxValue Optional maximum value\n * @param allowNull Allow the property to be null\n * @returns The number definition object\n */\nexport function createNumberDefinition(\n    isOptional?: boolean,\n    value?: number,\n    minValue?: number,\n    maxValue?: number,\n    allowNull?: boolean\n): NumberDefinition {\n    return {\n        type: DefinitionType.Number,\n        isOptional,\n        value,\n        maxValue,\n        minValue,\n        allowNull,\n    };\n}\n\n/**\n * Create a boolean definition\n * @param isOptional  Whether this property is optional\n * @param value Optional expected boolean value\n * @param allowNull Allow the property to be null\n * @returns  The boolean definition object\n */\nexport function createBooleanDefinition(\n    isOptional?: boolean,\n    value?: boolean,\n    allowNull?: boolean\n): BooleanDefinition {\n    return {\n        type: DefinitionType.Boolean,\n        isOptional,\n        value,\n        allowNull,\n    };\n}\n\n/**\n * Create a string definition\n * @param isOptional  Whether this property is optional\n * @param value Optional expected string value\n * @param allowNull Allow the property to be null\n * @returns  The string definition object\n */\nexport function createStringDefinition(\n    isOptional?: boolean,\n    value?: string,\n    allowNull?: boolean\n): StringDefinition {\n    return {\n        type: DefinitionType.String,\n        isOptional,\n        value,\n        allowNull,\n    };\n}\n\n/**\n * Create an array definition\n * @param itemDef Definition of each item of the related array\n * @param isOptional  Whether this property is optional\n * @param allowNull Allow the property to be null\n * @returns  The array definition object\n */\nexport function createArrayDefinition<T>(\n    itemDef: Definition<T>,\n    isOptional?: boolean,\n    minLength?: number,\n    maxLength?: number,\n    allowNull?: boolean\n): ArrayDefinition<T[]> {\n    return {\n        type: DefinitionType.Array,\n        isOptional,\n        itemDef,\n        minLength,\n        maxLength,\n        allowNull,\n    };\n}\n\n/**\n * Create an object definition\n * @param propertyDef Definition of each property of the related object\n * @param isOptional  Whether this property is optional\n * @param allowNull Allow the property to be null\n * @returns  The object definition object\n */\nexport function createObjectDefinition<T extends Object>(\n    propertyDef: ObjectPropertyDefinition<T>,\n    isOptional?: boolean,\n    allowNull?: boolean\n): ObjectDefinition<T> {\n    return {\n        type: DefinitionType.Object,\n        isOptional,\n        propertyDef,\n        allowNull,\n    };\n}\n","import validate from './validate';\nimport type { Definition } from 'roosterjs-editor-types';\n\nconst MetadataDataSetName = 'editingInfo';\n\n/**\n * Get metadata object from an HTML element\n * @param element The HTML element to get metadata object from\n * @param definition The type definition of this metadata used for validate this metadata object.\n * If not specified, no validation will be performed and always return whatever we get from the element\n * @param defaultValue The default value to return if the retrieved object cannot pass the validation,\n * or there is no metadata object at all\n * @returns The strong-type metadata object if it can be validated, or null\n */\nexport function getMetadata<T>(\n    element: HTMLElement,\n    definition?: Definition<T>,\n    defaultValue?: T\n): T | null {\n    const str = element.dataset[MetadataDataSetName];\n    let obj: any;\n\n    try {\n        obj = str ? JSON.parse(str) : null;\n    } catch {}\n\n    if (typeof obj !== 'undefined') {\n        if (!definition) {\n            return obj as T;\n        } else if (validate(obj, definition)) {\n            return obj;\n        }\n    }\n\n    if (defaultValue) {\n        return defaultValue;\n    } else {\n        return null;\n    }\n}\n\n/**\n * Set metadata object into an HTML element\n * @param element The HTML element to set metadata object to\n * @param metadata The metadata object to set\n * @param def An optional type definition object used for validate this metadata object.\n * If not specified, metadata will be set without validation\n * @returns True if metadata is set, otherwise false\n */\nexport function setMetadata<T>(element: HTMLElement, metadata: T, def?: Definition<T>): boolean {\n    if (!def || validate(metadata, def)) {\n        element.dataset[MetadataDataSetName] = JSON.stringify(metadata);\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Remove metadata from the given element if any\n * @param element The element to remove metadata from\n * @param metadataKey The metadata key to remove, if none provided it will delete all metadata\n */\nexport function removeMetadata<T>(element: HTMLElement, metadataKey?: string) {\n    if (metadataKey) {\n        const currentMetadata: any = getMetadata<T>(element);\n        if (currentMetadata) {\n            delete currentMetadata[metadataKey];\n            element.dataset[MetadataDataSetName] = JSON.stringify(currentMetadata);\n        }\n    } else {\n        delete element.dataset[MetadataDataSetName];\n    }\n}\n","import getObjectKeys from '../jsUtils/getObjectKeys';\nimport { DefinitionType } from 'roosterjs-editor-types';\nimport type { Definition } from 'roosterjs-editor-types';\n\n/**\n * Validate the given object with a type definition object\n * @param input The object to validate\n * @param def The type definition object used for validation\n * @returns True if the object passed the validation, otherwise false\n */\nexport default function validate<T>(input: any, def: Definition<T>): input is T {\n    let result = false;\n    if ((def.isOptional && typeof input === 'undefined') || (def.allowNull && input === null)) {\n        result = true;\n    } else if (\n        (!def.isOptional && typeof input === 'undefined') ||\n        (!def.allowNull && input === null)\n    ) {\n        return false;\n    } else {\n        switch (def.type) {\n            case DefinitionType.String:\n                result =\n                    typeof input === 'string' &&\n                    (typeof def.value === 'undefined' || input === def.value);\n                break;\n\n            case DefinitionType.Number:\n                result =\n                    typeof input === 'number' &&\n                    (typeof def.value === 'undefined' || areSameNumbers(def.value, input)) &&\n                    (typeof def.minValue === 'undefined' || input >= def.minValue) &&\n                    (typeof def.maxValue === 'undefined' || input <= def.maxValue);\n                break;\n\n            case DefinitionType.Boolean:\n                result =\n                    typeof input === 'boolean' &&\n                    (typeof def.value === 'undefined' || input === def.value);\n                break;\n\n            case DefinitionType.Array:\n                result =\n                    Array.isArray(input) &&\n                    (typeof def.minLength === 'undefined' || input.length >= def.minLength) &&\n                    (typeof def.maxLength === 'undefined' || input.length <= def.maxLength) &&\n                    input.every(x => validate(x, def.itemDef));\n                break;\n\n            case DefinitionType.Object:\n                result =\n                    typeof input === 'object' &&\n                    getObjectKeys(def.propertyDef).every(x =>\n                        validate(input[x], def.propertyDef[x])\n                    );\n                break;\n\n            case DefinitionType.Customize:\n                result = def.validator(input);\n                break;\n        }\n    }\n\n    return result;\n}\n\nfunction areSameNumbers(n1: number, n2: number) {\n    return Math.abs(n1 - n2) < 1e-3;\n}\n","/**\n * @internal\n * Node attribute used to identify if the content is from Google Sheets.\n */\nexport const GOOGLE_SHEET_NODE_NAME = 'google-sheets-html-origin';\n/**\n * @internal\n * Name of the HTMLMeta Property that provides the Office App Source of the pasted content\n */\nexport const PROG_ID_NAME = 'ProgId';\n/**\n * @internal\n * Name of the HTMLMeta Property that identifies pated content as from Excel Desktop\n */\nexport const EXCEL_DESKTOP_ATTRIBUTE_NAME = 'xmlns:x';\n","import type { getSourceFunction, getSourceInputParams } from './getPasteSource';\n\nconst WORD_ONLINE_TABLE_TEMP_ELEMENT_CLASSES = [\n    'TableInsertRowGapBlank',\n    'TableColumnResizeHandle',\n    'TableCellTopBorderHandle',\n    'TableCellLeftBorderHandle',\n    'TableHoverColumnHandle',\n    'TableHoverRowHandle',\n];\n\nconst WAC_IDENTIFY_SELECTOR =\n    'ul[class^=\"BulletListStyle\"]>.OutlineElement,ol[class^=\"NumberListStyle\"]>.OutlineElement,span.WACImageContainer,' +\n    WORD_ONLINE_TABLE_TEMP_ELEMENT_CLASSES.map(c => `table div[class^=\"${c}\"]`).join(',');\n\n/**\n * @internal\n * Check whether the fragment provided contain Wac Elements\n * @param props Properties related to the PasteEvent\n * @returns\n */\nconst documentContainWacElements: getSourceFunction = (props: getSourceInputParams) => {\n    const { fragment } = props;\n    return !!fragment.querySelector(WAC_IDENTIFY_SELECTOR);\n};\nexport default documentContainWacElements;\n","import documentContainWacElements from './documentContainWacElements';\nimport isExcelDesktopDocument from './isExcelDesktopDocument';\nimport isExcelOnlineDocument from './isExcelOnlineDocument';\nimport isGoogleSheetDocument from './isGoogleSheetDocument';\nimport isPowerPointDesktopDocument from './isPowerPointDesktopDocument';\nimport isWordDesktopDocument from './isWordDesktopDocument';\nimport shouldConvertToSingleImage from './shouldConvertToSingleImage';\nimport { KnownPasteSourceType } from 'roosterjs-editor-types';\nimport type { BeforePasteEvent, ClipboardData } from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport type getSourceInputParams = {\n    htmlAttributes: Record<string, string>;\n    fragment: DocumentFragment;\n    shouldConvertSingleImage: boolean;\n    clipboardData: ClipboardData;\n};\n\n/**\n * @internal\n */\nexport type getSourceFunction = (props: getSourceInputParams) => boolean;\n\nconst getSourceFunctions = new Map<KnownPasteSourceType, getSourceFunction>([\n    [KnownPasteSourceType.WordDesktop, isWordDesktopDocument],\n    [KnownPasteSourceType.ExcelDesktop, isExcelDesktopDocument],\n    [KnownPasteSourceType.ExcelOnline, isExcelOnlineDocument],\n    [KnownPasteSourceType.PowerPointDesktop, isPowerPointDesktopDocument],\n    [KnownPasteSourceType.WacComponents, documentContainWacElements],\n    [KnownPasteSourceType.GoogleSheets, isGoogleSheetDocument],\n    [KnownPasteSourceType.SingleImage, shouldConvertToSingleImage],\n]);\n\n/**\n * This function tries to get the source of the Pasted content\n * @param event the before paste event\n * @param shouldConvertSingleImage Whether convert single image is enabled.\n * @returns The Type of pasted content, if no type found will return {KnownSourceType.Default}\n */\nexport default function getPasteSource(\n    event: BeforePasteEvent,\n    shouldConvertSingleImage: boolean\n): KnownPasteSourceType {\n    const { htmlAttributes, clipboardData, fragment } = event;\n\n    let result: KnownPasteSourceType | null = null;\n    const param: getSourceInputParams = {\n        htmlAttributes,\n        fragment,\n        shouldConvertSingleImage,\n        clipboardData,\n    };\n\n    getSourceFunctions.forEach((func, key) => {\n        if (!result && func(param)) {\n            result = key;\n        }\n    });\n\n    return result ?? KnownPasteSourceType.Default;\n}\n","import { EXCEL_DESKTOP_ATTRIBUTE_NAME } from './constants';\nimport type { getSourceFunction, getSourceInputParams } from './getPasteSource';\n\nconst EXCEL_ATTRIBUTE_VALUE = 'urn:schemas-microsoft-com:office:excel';\n\n/**\n * @internal\n * Checks whether the Array provided contains strings that identify Excel Desktop documents\n * @param props Properties related to the PasteEvent\n * @returns\n */\nconst isExcelDesktopDocument: getSourceFunction = (props: getSourceInputParams) => {\n    const { htmlAttributes } = props;\n    // The presence of this attribute confirms its origin from Excel Desktop\n    return htmlAttributes[EXCEL_DESKTOP_ATTRIBUTE_NAME] == EXCEL_ATTRIBUTE_VALUE;\n};\nexport default isExcelDesktopDocument;\n","import { EXCEL_DESKTOP_ATTRIBUTE_NAME, PROG_ID_NAME } from './constants';\nimport type { getSourceFunction, getSourceInputParams } from './getPasteSource';\n\n// Excel Desktop also has this attribute\nconst EXCEL_ONLINE_ATTRIBUTE_VALUE = 'Excel.Sheet';\n\n/**\n * @internal\n * Checks whether the Array provided contains strings that identify Excel Online documents\n * @param props Properties related to the PasteEvent\n * @returns\n */\nconst isExcelOnlineDocument: getSourceFunction = (props: getSourceInputParams) => {\n    const { htmlAttributes } = props;\n    // The presence of Excel.Sheet confirms its origin from Excel, the absence of EXCEL_DESKTOP_ATTRIBUTE_NAME confirms it is from the Online version\n    return (\n        htmlAttributes[PROG_ID_NAME] == EXCEL_ONLINE_ATTRIBUTE_VALUE &&\n        htmlAttributes[EXCEL_DESKTOP_ATTRIBUTE_NAME] == undefined\n    );\n};\nexport default isExcelOnlineDocument;\n","import { GOOGLE_SHEET_NODE_NAME } from './constants';\nimport type { getSourceFunction, getSourceInputParams } from './getPasteSource';\n\n/**\n * @internal\n * Checks whether the fragment provided contain elements from Google sheets\n * @param props Properties related to the PasteEvent\n * @returns\n */\nconst isGoogleSheetDocument: getSourceFunction = (props: getSourceInputParams) => {\n    const { fragment } = props;\n    return !!fragment.querySelector(GOOGLE_SHEET_NODE_NAME);\n};\n\nexport default isGoogleSheetDocument;\n","import { PROG_ID_NAME } from './constants';\nimport type { getSourceFunction, getSourceInputParams } from './getPasteSource';\n\nconst POWERPOINT_ATTRIBUTE_VALUE = 'PowerPoint.Slide';\n\n/**\n * @internal\n * Checks whether the Array provided contains strings that identify Power Point Desktop documents\n * @param props Properties related to the PasteEvent\n * @returns\n */\nconst isPowerPointDesktopDocument: getSourceFunction = (props: getSourceInputParams) => {\n    return props.htmlAttributes[PROG_ID_NAME] == POWERPOINT_ATTRIBUTE_VALUE;\n};\nexport default isPowerPointDesktopDocument;\n","import { PROG_ID_NAME } from './constants';\nimport type { getSourceFunction, getSourceInputParams } from './getPasteSource';\n\nconst WORD_ATTRIBUTE_NAME = 'xmlns:w';\nconst WORD_ATTRIBUTE_VALUE = 'urn:schemas-microsoft-com:office:word';\nconst WORD_PROG_ID = 'Word.Document';\n\n/**\n * @internal\n * Checks whether the Array provided contains strings that identify Word Desktop documents\n * @param props Properties related to the PasteEvent\n * @returns\n */\nconst isWordDesktopDocument: getSourceFunction = (props: getSourceInputParams) => {\n    const { htmlAttributes } = props;\n    return (\n        htmlAttributes[WORD_ATTRIBUTE_NAME] == WORD_ATTRIBUTE_VALUE ||\n        htmlAttributes[PROG_ID_NAME] == WORD_PROG_ID\n    );\n};\n\nexport default isWordDesktopDocument;\n","import type { getSourceFunction, getSourceInputParams } from './getPasteSource';\n\n/**\n * @internal\n * Checks whether the fragment only contains a single image to paste\n * and the editor have the ConvertSingleImageBody Experimental feature\n * @param props Properties related to the PasteEvent\n * @returns\n */\nconst shouldConvertToSingleImage: getSourceFunction = (props: getSourceInputParams) => {\n    const { shouldConvertSingleImage, clipboardData } = props;\n    return (\n        shouldConvertSingleImage &&\n        clipboardData.htmlFirstLevelChildTags?.length == 1 &&\n        clipboardData.htmlFirstLevelChildTags[0] == 'IMG'\n    );\n};\n\nexport default shouldConvertToSingleImage;\n","import collapseNode from '../utils/collapseNodes';\nimport isNodeInRegion from './isNodeInRegion';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport type { BlockElement, RegionBase } from 'roosterjs-editor-types';\n\n/**\n * Collapse nodes within this region to their common ancestor node under this region\n * @param region The region to collapse nodes in.\n * @param nodesOrBlockElements Nodes or block elements to collapse. When take BlockElement[] as input,\n * start node of the first BlockElement and end node of the last BlockElement will be used as the nodes.\n * All nodes not contained by the given region will be ignored.\n */\nexport default function collapseNodesInRegion(\n    region: RegionBase,\n    nodesOrBlockElements: Node[] | BlockElement[]\n): Node[] {\n    if (!nodesOrBlockElements || nodesOrBlockElements.length == 0) {\n        return [];\n    }\n\n    let nodes = safeInstanceOf(nodesOrBlockElements[0], 'Node')\n        ? <Node[]>nodesOrBlockElements\n        : [\n              nodesOrBlockElements[0].getStartNode(),\n              (<BlockElement>nodesOrBlockElements[nodesOrBlockElements.length - 1]).getEndNode(),\n          ];\n\n    nodes = nodes && nodes.filter(node => isNodeInRegion(region, node));\n\n    const firstNode = nodes[0];\n    const lastNode = nodes[nodes.length - 1];\n\n    if (isNodeInRegion(region, firstNode) && isNodeInRegion(region, lastNode)) {\n        return collapseNode(region.rootNode, firstNode, lastNode, true /*canSplitParent*/);\n    } else {\n        return [];\n    }\n}\n","import contains from '../utils/contains';\nimport findClosestElementAncestor from '../utils/findClosestElementAncestor';\nimport Position from '../selection/Position';\nimport queryElements from '../utils/queryElements';\nimport { getNextLeafSibling, getPreviousLeafSibling } from '../utils/getLeafSibling';\nimport { QueryScope, RegionType } from 'roosterjs-editor-types';\nimport type { Region } from 'roosterjs-editor-types';\nimport type { CompatibleRegionType } from 'roosterjs-editor-types/lib/compatibleTypes';\n\ninterface RegionTypeData {\n    /**\n     * Tags that child elements will be skipped\n     */\n    skipTags: string[];\n\n    /**\n     * Selector of outer node of a region\n     */\n    outerSelector: string;\n\n    /**\n     * Selector of inner node of a region\n     */\n    innerSelector: string;\n}\n\nconst regionTypeData: Record<RegionType, RegionTypeData> = {\n    [RegionType.Table]: {\n        skipTags: ['TABLE'],\n        outerSelector: 'table',\n        innerSelector: 'td,th',\n    },\n};\n\n/**\n * Get regions impacted by the given range under the root node\n * @param root Root node to get regions from\n * @param range A selection range. Regions will be created according to this range. Each region will be\n * fully or partially covered by this range.\n * @param type Type of region. Currently we only support TABLE region.\n */\nexport default function getRegionsFromRange(\n    root: HTMLElement,\n    range: Range,\n    type: RegionType | CompatibleRegionType\n): Region[] {\n    let regions: Region[] = [];\n    if (root && range) {\n        const { innerSelector, skipTags } = regionTypeData[type];\n        const boundaryTree = buildBoundaryTree(root, range, type);\n        const start = findClosestElementAncestor(range.startContainer, root, innerSelector) || root;\n        const end = findClosestElementAncestor(range.endContainer, root, innerSelector) || root;\n        const creator = getRegionCreator(range, skipTags);\n        [regions] = iterateNodes(creator, boundaryTree, start, end);\n    }\n\n    return regions.filter(r => !!r);\n}\n\n/**\n * @internal export for test only\n */\nexport function getRegionCreator(\n    fullRange: Range,\n    skipTags: string[]\n): (rootNode: HTMLElement, nodeBefore?: Node, nodeAfter?: Node) => Region | null {\n    const fullSelectionStart = Position.getStart(fullRange).normalize();\n    const fullSelectionEnd = Position.getEnd(fullRange).normalize();\n    return (rootNode: HTMLElement, nodeBefore?: Node, nodeAfter?: Node) => {\n        return areNodesValid(rootNode, nodeBefore, nodeAfter, skipTags)\n            ? {\n                  rootNode,\n                  nodeBefore,\n                  nodeAfter,\n                  skipTags,\n                  fullSelectionStart,\n                  fullSelectionEnd,\n              }\n            : null;\n    };\n}\n\n/**\n * This is a internal data structure used for build regions.\n * We firstly split the selection by some boundaries, then we can build region from these boundaries.\n */\ninterface Boundary {\n    /**\n     * inner node of this boundary\n     */\n    innerNode: HTMLElement;\n\n    /**\n     * Children of this boundary\n     */\n    children: {\n        /**\n         * Outer node of a boundary child\n         */\n        outerNode: Node;\n\n        /**\n         * Child boundaries\n         */\n        boundaries: Boundary[];\n    }[];\n}\n\n/**\n * Step 1: Build boundary tree\n * @param root Root node of the whole scope, normally this will be the root of editable scope\n * @param range Existing selected full range\n * @param type Type of region to create\n */\nfunction buildBoundaryTree(\n    root: HTMLElement,\n    range: Range,\n    type: RegionType | CompatibleRegionType\n): Boundary {\n    const allBoundaries: Boundary[] = [{ innerNode: root, children: [] }];\n    const { outerSelector, innerSelector } = regionTypeData[type];\n    const inSelectionOuterNode = queryElements(\n        root,\n        outerSelector,\n        null /*callback*/,\n        QueryScope.InSelection,\n        range\n    );\n\n    // According to https://www.w3.org/TR/selectors-api/#queryselectorall, the result of querySelectorAll\n    // is in document order, which is what we expect. So we don't need to sort the result here.\n    queryElements(\n        root,\n        innerSelector,\n        thisInnerNode => {\n            const thisOuterNode = findClosestElementAncestor(thisInnerNode, root, outerSelector);\n            if (thisOuterNode && inSelectionOuterNode.indexOf(thisOuterNode) < 0) {\n                const boundary: Boundary = { innerNode: thisInnerNode, children: [] };\n\n                for (let i = allBoundaries.length - 1; i >= 0; i--) {\n                    const { innerNode, children } = allBoundaries[i];\n                    if (contains(innerNode, thisOuterNode)) {\n                        let child = children.filter(c => c.outerNode == thisOuterNode)[0];\n\n                        if (!child) {\n                            child = { outerNode: thisOuterNode, boundaries: [] };\n                            children.push(child);\n                        }\n\n                        child.boundaries.push(boundary);\n                        break;\n                    }\n                }\n                allBoundaries.push(boundary);\n            }\n        },\n        QueryScope.OnSelection,\n        range\n    );\n\n    return allBoundaries[0];\n}\n\n/**\n * Step 2: Recursively iterate all boundaries and create regions\n * @param creator A region creator function to help create region\n * @param boundary Current root boundary\n * @param start A node where full range start from. This may not be the direct node container of range.startContainer.\n * It is the nearest ancestor which satisfies the InnerSelector of the given region type\n * @param end A node where full range end from. This may not be the direct node container of range.endContainer.\n * It is the nearest ancestor which satisfies the InnerSelector of the given region type\n * @param started Whether we have already hit the start node\n */\nfunction iterateNodes(\n    creator: (rootNode: HTMLElement, nodeBefore?: Node, nodeAfter?: Node) => Region | null,\n    boundary: Boundary,\n    start: Node,\n    end: Node,\n    started?: boolean\n): [Region[], boolean, boolean] {\n    started = started || boundary.innerNode == start;\n    let ended = false;\n    const { children, innerNode } = boundary;\n    let regions: Region[] = [];\n\n    if (children.length == 0) {\n        const region = creator(innerNode);\n        if (region) {\n            regions.push(region);\n        }\n    } else {\n        // Need to run one more time to add region after all children\n        for (let i = 0; i <= children.length && !ended; i++) {\n            const { outerNode, boundaries } = children[i] || {};\n            const previousOuterNode = children[i - 1]?.outerNode;\n            if (started) {\n                const region = creator(innerNode, previousOuterNode, outerNode);\n                if (region) {\n                    regions.push(region);\n                }\n            }\n\n            boundaries?.forEach(child => {\n                let newRegions: Region[];\n                [newRegions, started, ended] = iterateNodes(creator, child, start, end, started);\n                regions = regions.concat(newRegions);\n            });\n        }\n    }\n\n    return [regions, started, ended || innerNode == end];\n}\n\n/**\n * Check if the given nodes combination is valid to create a region.\n * A combination is valid when:\n * 1. Root node is not null and is not empty. And\n * 2. For nodeBefore and nodeAfter, each of them should be either null or contained by root node. And\n * 3. If none of nodeBefore and nodeAfter is null, the should not contain each other, and there should be\n * node between them.\n * @param root Root node of region\n * @param nodeBefore The boundary node before the region under root\n * @param nodeAfter The boundary node after the region under root\n * @param skipTags Tags to skip\n */\nfunction areNodesValid(\n    root: Node,\n    nodeBefore: Node | undefined,\n    nodeAfter: Node | undefined,\n    skipTags: string[]\n) {\n    if (!root) {\n        return false;\n    } else {\n        const firstNodeOfRegion = nodeBefore && getNextLeafSibling(root, nodeBefore, skipTags);\n        const lastNodeOfRegion = nodeAfter && getPreviousLeafSibling(root, nodeAfter, skipTags);\n        const firstNodeValid =\n            !nodeBefore || (contains(root, nodeBefore) && contains(root, firstNodeOfRegion));\n        const lastNodeValid =\n            !nodeAfter || (contains(root, nodeAfter) && contains(root, lastNodeOfRegion));\n        const bothValid =\n            !nodeBefore ||\n            !nodeAfter ||\n            (!contains(nodeBefore, nodeAfter, true /*treatSameAsContain*/) &&\n                !contains(nodeBefore, lastNodeOfRegion, true /*treatSameAsContain*/) &&\n                !contains(nodeAfter, nodeBefore, true /*treatSameAsContain*/) &&\n                !contains(nodeAfter, firstNodeOfRegion, true /*treatSameAsContain*/));\n        return firstNodeValid && lastNodeValid && bothValid;\n    }\n}\n","import ContentTraverser from '../contentTraverser/ContentTraverser';\nimport createElement from '../utils/createElement';\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\nimport getSelectionRangeInRegion from './getSelectionRangeInRegion';\nimport shouldSkipNode from '../utils/shouldSkipNode';\nimport { KnownCreateElementDataIndex } from 'roosterjs-editor-types';\nimport type { BlockElement, RegionBase } from 'roosterjs-editor-types';\n\n/**\n * Get all block elements covered by the selection under this region\n * @param regionBase The region to get block elements from\n * @param createBlockIfEmpty When set to true, a new empty block element will be created if there is not\n * any blocks in the region. Default value is false\n * @param deprecated Deprecated parameter, not used\n */\nexport default function getSelectedBlockElementsInRegion(\n    regionBase: RegionBase,\n    createBlockIfEmpty?: boolean,\n    deprecated?: boolean\n): BlockElement[] {\n    const range = getSelectionRangeInRegion(regionBase);\n    let blocks: BlockElement[] = [];\n\n    if (range) {\n        const { rootNode, skipTags } = regionBase;\n        const traverser = ContentTraverser.createSelectionTraverser(rootNode, range, skipTags);\n\n        for (\n            let block = traverser?.currentBlockElement;\n            !!block;\n            block = traverser.getNextBlockElement()\n        ) {\n            blocks.push(block);\n        }\n\n        // Remove meaningless nodes\n        blocks = blocks.filter(block => {\n            const startNode = block.getStartNode();\n            const endNode = block.getEndNode();\n\n            if (startNode == endNode && shouldSkipNode(startNode, true /*ignoreSpace*/)) {\n                startNode.parentNode?.removeChild(startNode);\n                return false;\n            } else {\n                return true;\n            }\n        });\n    }\n\n    if (blocks.length == 0 && regionBase && !regionBase.rootNode.firstChild && createBlockIfEmpty) {\n        const newNode = createElement(\n            KnownCreateElementDataIndex.EmptyLine,\n            regionBase.rootNode.ownerDocument\n        );\n        regionBase.rootNode.appendChild(newNode!);\n\n        const block = getBlockElementAtNode(regionBase.rootNode, newNode);\n\n        if (block) {\n            blocks.push(block);\n        }\n    }\n\n    return blocks;\n}\n","import createRange from '../selection/createRange';\nimport Position from '../selection/Position';\nimport { getNextLeafSibling, getPreviousLeafSibling } from '../utils/getLeafSibling';\nimport type { Region, RegionBase } from 'roosterjs-editor-types';\n\n/**\n * Get the selection range in the given region.\n * The original range can cover multiple regions, this function will narrow the original selection\n * of a region into current region\n * @param regionBase The region to get range from\n */\nexport default function getSelectionRangeInRegion(regionBase: RegionBase): Range | null {\n    if (!regionBase) {\n        return null;\n    }\n\n    const { nodeBefore, nodeAfter, rootNode, skipTags } = regionBase;\n    const startNode = nodeBefore\n        ? getNextLeafSibling(regionBase.rootNode, nodeBefore, regionBase.skipTags)\n        : rootNode.firstChild;\n    const endNode = nodeAfter\n        ? getPreviousLeafSibling(rootNode, nodeAfter, skipTags)\n        : rootNode.lastChild;\n    const regionRange = startNode && endNode && createRange(startNode, endNode);\n\n    if (!isRegion(regionBase)) {\n        return regionRange;\n    } else if (regionRange) {\n        const regionStart = Position.getStart(regionRange).normalize();\n        const regionEnd = Position.getEnd(regionRange).normalize();\n        const { fullSelectionEnd, fullSelectionStart } = regionBase;\n\n        if (!fullSelectionStart.isAfter(regionEnd) && !regionStart.isAfter(fullSelectionEnd)) {\n            const start = fullSelectionStart.isAfter(regionStart)\n                ? fullSelectionStart\n                : regionStart;\n            const end = fullSelectionEnd.isAfter(regionEnd) ? regionEnd : fullSelectionEnd;\n\n            return createRange(start, end);\n        }\n    }\n\n    return null;\n}\n\nfunction isRegion(regionBase: RegionBase): regionBase is Region {\n    const region = regionBase as Region;\n    return !!region.fullSelectionEnd && !!region.fullSelectionStart;\n}\n","import contains from '../utils/contains';\nimport { DocumentPosition } from 'roosterjs-editor-types';\nimport type { RegionBase } from 'roosterjs-editor-types';\n\n/**\n * Check if a given node is contained by the given region\n * @param region The region to check from\n * @param node The node or block element to check\n */\nexport default function isNodeInRegion(region: RegionBase, node: Node): boolean {\n    return !!(\n        region &&\n        contains(region.rootNode, node) &&\n        (!region.nodeBefore ||\n            region.nodeBefore.compareDocumentPosition(node) == DocumentPosition.Following) &&\n        (!region.nodeAfter ||\n            region.nodeAfter.compareDocumentPosition(node) == DocumentPosition.Preceding)\n    );\n}\n","import changeElementTag from '../utils/changeElementTag';\nimport contains from '../utils/contains';\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\nimport getPredefinedCssForElement from '../htmlSanitizer/getPredefinedCssForElement';\nimport getStyles from '../style/getStyles';\nimport isNodeInRegion from './isNodeInRegion';\nimport safeInstanceOf from '../utils/safeInstanceOf';\nimport setStyles from '../style/setStyles';\nimport { collapse } from '../utils/collapseNodes';\nimport type { BlockElement, RegionBase } from 'roosterjs-editor-types';\n\n/**\n * Merge a BlockElement of given node after another node\n * @param region Region to operate in\n * @param refNode The node to merge after\n * @param targetNode The node of target block element\n */\nexport default function mergeBlocksInRegion(region: RegionBase, refNode: Node, targetNode: Node) {\n    let block: BlockElement | null;\n\n    if (\n        !isNodeInRegion(region, refNode) ||\n        !isNodeInRegion(region, targetNode) ||\n        !(block = getBlockElementAtNode(region.rootNode, targetNode)) ||\n        block.contains(refNode)\n    ) {\n        return;\n    }\n\n    const blockRoot = block.collapseToSingleElement();\n    const commonContainer = collapse(\n        region.rootNode,\n        blockRoot,\n        refNode,\n        false /*isStart*/,\n        true /*canSplitParent*/\n    );\n\n    // Copy styles of parent nodes into blockRoot\n    for (let node: Node | null = blockRoot; contains(commonContainer, node); ) {\n        const parent: Node | null = node!.parentNode;\n        if (safeInstanceOf(parent, 'HTMLElement')) {\n            const styles = {\n                ...(getPredefinedCssForElement(parent) || {}),\n                ...getStyles(parent),\n                ...getStyles(blockRoot),\n            };\n            setStyles(blockRoot, styles);\n        }\n        node = parent;\n    }\n\n    let nodeToRemove: Node | null = null;\n    let nodeToMerge =\n        blockRoot.childNodes.length == 1 && blockRoot.attributes.length == 0\n            ? blockRoot.firstChild!\n            : changeElementTag(blockRoot, 'SPAN')!;\n\n    // Remove empty node\n    for (\n        let node: Node | null = nodeToMerge;\n        contains(commonContainer, node) && node.parentNode?.childNodes.length == 1;\n        node = node!.parentNode\n    ) {\n        // If the only child is the one which is about to be removed, this node should also be removed\n        nodeToRemove = node.parentNode;\n    }\n\n    // Finally, merge blocks, and remove empty nodes\n    refNode.parentNode?.insertBefore(nodeToMerge, refNode.nextSibling);\n    nodeToRemove?.parentNode?.removeChild(nodeToRemove);\n}\n","import findClosestElementAncestor from '../utils/findClosestElementAncestor';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport { NodeType, PositionType } from 'roosterjs-editor-types';\r\nimport type { NodePosition } from 'roosterjs-editor-types';\r\nimport type { CompatiblePositionType } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Represent a position in DOM tree by the node and its offset index\r\n */\r\nexport default class Position implements NodePosition {\r\n    readonly node: Node;\r\n    readonly element: HTMLElement;\r\n    readonly offset: number;\r\n    readonly isAtEnd: boolean;\r\n\r\n    /**\r\n     * Clone and validate a position from existing position.\r\n     * If the given position has invalid offset, this function will return a corrected value.\r\n     * @param position The original position to clone from\r\n     */\r\n    constructor(position: NodePosition);\r\n\r\n    /**\r\n     * Create a Position from node and an offset number\r\n     * @param node The node of this position\r\n     * @param offset Offset of this position\r\n     * @param isFromEndOfRange Whether this position is created from end of a range. An position\r\n     * created from end of range has different behavior when normalize, it will use the child node\r\n     * before current position if any as a deeper level node and set isAtEnd to true.\r\n     */\r\n    constructor(node: Node, offset: number, isFromEndOfRange?: boolean);\r\n\r\n    /**\r\n     * Create a Position from node and a type of position\r\n     * @param node The node of this position\r\n     * @param positionType Type of the position, can be Begin, End, Before, After\r\n     */\r\n    constructor(node: Node, positionType: PositionType | CompatiblePositionType);\r\n\r\n    constructor(\r\n        nodeOrPosition: Node | NodePosition,\r\n        offsetOrPosType: number = 0,\r\n        private readonly isFromEndOfRange?: boolean\r\n    ) {\r\n        if ((<NodePosition>nodeOrPosition).node) {\r\n            this.node = (<NodePosition>nodeOrPosition).node;\r\n            offsetOrPosType = (<NodePosition>nodeOrPosition).offset;\r\n        } else {\r\n            this.node = <Node>nodeOrPosition;\r\n        }\r\n\r\n        switch (offsetOrPosType) {\r\n            case PositionType.Before:\r\n                this.offset = getIndexOfNode(this.node);\r\n                this.node = this.node.parentNode!; // TODO: how to handle parentNode is null?\r\n                this.isAtEnd = false;\r\n                break;\r\n\r\n            case PositionType.After:\r\n                this.offset = getIndexOfNode(this.node) + 1;\r\n                this.isAtEnd = !this.node.nextSibling;\r\n                this.node = this.node.parentNode!; // TODO: how to handle parentNode is null?\r\n                break;\r\n\r\n            case PositionType.End:\r\n                this.offset = getEndOffset(this.node);\r\n                this.isAtEnd = true;\r\n                break;\r\n\r\n            default:\r\n                let endOffset = getEndOffset(this.node);\r\n                this.offset = Math.max(0, Math.min(<number>offsetOrPosType, endOffset));\r\n                this.isAtEnd = offsetOrPosType > 0 && offsetOrPosType >= endOffset;\r\n                break;\r\n        }\r\n\r\n        this.element = findClosestElementAncestor(this.node)!; // TODO: how to handle parent element is null?\r\n    }\r\n\r\n    /**\r\n     * Normalize this position to the leaf node, return the normalize result.\r\n     * If current position is already using leaf node, return this position object itself\r\n     */\r\n    normalize(): NodePosition {\r\n        if (this.node.nodeType == NodeType.Text || !this.node.firstChild) {\r\n            return this;\r\n        }\r\n\r\n        let node = this.node;\r\n        let newOffset: number | PositionType.Begin | PositionType.End = this.isAtEnd\r\n            ? PositionType.End\r\n            : this.offset;\r\n        while (node.nodeType == NodeType.Element || node.nodeType == NodeType.DocumentFragment) {\r\n            const nextNode = this.isFromEndOfRange\r\n                ? newOffset == PositionType.End\r\n                    ? node.lastChild\r\n                    : node.childNodes[<number>newOffset - 1]\r\n                : newOffset == PositionType.Begin\r\n                ? node.firstChild\r\n                : newOffset == PositionType.End\r\n                ? node.lastChild\r\n                : node.childNodes[<number>newOffset];\r\n\r\n            if (nextNode) {\r\n                node = nextNode;\r\n                newOffset =\r\n                    this.isAtEnd || this.isFromEndOfRange ? PositionType.End : PositionType.Begin;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return new Position(node, newOffset, this.isFromEndOfRange);\r\n    }\r\n\r\n    /**\r\n     * Check if this position is equal to the given position\r\n     * @param position The position to check\r\n     */\r\n    equalTo(position: NodePosition): boolean {\r\n        return (\r\n            position &&\r\n            (this == position ||\r\n                (this.node == position.node &&\r\n                    this.offset == position.offset &&\r\n                    this.isAtEnd == position.isAtEnd))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if this position is after the given position\r\n     */\r\n    isAfter(position: NodePosition): boolean {\r\n        return this.node == position.node\r\n            ? (this.isAtEnd && !position.isAtEnd) || this.offset > position.offset\r\n            : isNodeAfter(this.node, position.node);\r\n    }\r\n\r\n    /**\r\n     * Move this position with offset, returns a new position with a valid offset in the same node\r\n     * @param offset Offset to move with\r\n     */\r\n    move(offset: number) {\r\n        return new Position(this.node, Math.max(this.offset + offset, 0));\r\n    }\r\n\r\n    /**\r\n     * Get start position of the given Range\r\n     * @param range The range to get position from\r\n     */\r\n    static getStart(range: Range) {\r\n        return new Position(range.startContainer, range.startOffset);\r\n    }\r\n\r\n    /**\r\n     * Get end position of the given Range\r\n     * @param range The range to get position from\r\n     */\r\n    static getEnd(range: Range) {\r\n        // For collapsed range, always return the same value of start container to make sure\r\n        // end position is not before start position\r\n        return range.collapsed\r\n            ? Position.getStart(range)\r\n            : new Position(range.endContainer, range.endOffset, true /*isFromEndOfRange*/);\r\n    }\r\n}\r\n\r\nfunction getIndexOfNode(node: Node | null): number {\r\n    let i = 0;\r\n    while ((node = node?.previousSibling || null)) {\r\n        i++;\r\n    }\r\n    return i;\r\n}\r\n\r\nfunction getEndOffset(node: Node): number {\r\n    if (node.nodeType == NodeType.Text) {\r\n        return node.nodeValue?.length || 0;\r\n    } else if (node.nodeType == NodeType.Element || node.nodeType == NodeType.DocumentFragment) {\r\n        return node.childNodes.length;\r\n    } else {\r\n        return 1;\r\n    }\r\n}\r\n","import { Browser } from '../utils/Browser';\n\n/**\n * Add the given range into selection of the given document\n * @param range The range to select\n * @param skipSameRange When set to true, do nothing if the given range is the same with current selection,\n * otherwise it will always remove current selection range and set to the given one.\n * This parameter is always treat as true in Edge to avoid some weird runtime exception.\n */\nexport default function addRangeToSelection(range: Range, skipSameRange?: boolean) {\n    const selection = range?.commonAncestorContainer?.ownerDocument?.defaultView?.getSelection();\n    if (selection) {\n        let needAddRange = true;\n\n        if (selection.rangeCount > 0) {\n            // Workaround IE exception 800a025e\n            try {\n                let currentRange: Range | null = null;\n                // Do not remove/add range if current selection is the same with target range\n                // Without this check, execCommand() may fail in Edge since we changed the selection\n                if (\n                    (skipSameRange || Browser.isEdge) &&\n                    (currentRange = selection.rangeCount == 1 ? selection.getRangeAt(0) : null) &&\n                    currentRange.startContainer == range.startContainer &&\n                    currentRange.startOffset == range.startOffset &&\n                    currentRange.endContainer == range.endContainer &&\n                    currentRange.endOffset == range.endOffset\n                ) {\n                    needAddRange = false;\n                } else {\n                    selection.removeAllRanges();\n                }\n            } catch (e) {}\n        }\n\n        if (needAddRange) {\n            selection.addRange(range);\n        }\n    }\n}\n","import isVoidHtmlElement from '../utils/isVoidHtmlElement';\r\nimport Position from './Position';\r\nimport safeInstanceOf from '../utils/safeInstanceOf';\r\nimport { NodeType, PositionType } from 'roosterjs-editor-types';\r\nimport type { NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Create a range around the given node(s)\r\n * @param startNode The start node to create range from\r\n * @param endNode The end node to create range from. If specified, the range will start before startNode and\r\n * end after endNode, otherwise, the range will start before and end after the start node\r\n * @returns A range start before the given node and end after the given node\r\n */\r\nexport default function createRange(startNode: Node, endNode?: Node): Range;\r\n\r\n/**\r\n * Create a collapsed range at the given node and offset\r\n * @param node The container node of the range\r\n * @param offset The offset of the range, can be a number or value of PositionType\r\n * @returns A range at the given node and offset\r\n */\r\nexport default function createRange(node: Node, offset: number | PositionType): Range;\r\n\r\n/**\r\n * Create a range with the given start/end container node and offset\r\n * @param startNode The start container node of the range\r\n * @param startOffset The start offset of the range\r\n * @param endNode The end container node of the range\r\n * @param endOffset The end offset of the range\r\n * @returns A range at the given start/end container node and offset\r\n */\r\nexport default function createRange(\r\n    startNode: Node,\r\n    startOffset: number | PositionType,\r\n    endNode: Node,\r\n    endOffset: number | PositionType\r\n): Range;\r\n\r\n/**\r\n * Create a range under the given rootNode with start and end selection paths\r\n * @param rootNode The root node that the selection paths start from\r\n * @param startPath The selection path of the start position of the range\r\n * @param endPath The selection path of the end position of the range\r\n * @returns A range with the given start and end selection paths\r\n */\r\nexport default function createRange(rootNode: Node, startPath: number[], endPath?: number[]): Range;\r\n\r\n/**\r\n * Create a range with the start and end position\r\n * @param startPosition The start position of the range\r\n * @param endPosition The end position of the range, if not specified, the range will be collapsed at start position\r\n * @returns A range start at startPosition, end at endPosition, or startPosition when endPosition is not specified\r\n */\r\nexport default function createRange(startPosition: NodePosition, endPosition?: NodePosition): Range;\r\n\r\nexport default function createRange(\r\n    arg1: Node | NodePosition,\r\n    arg2?: number | number[] | Node | NodePosition,\r\n    arg3?: Node | number[],\r\n    arg4?: number\r\n): Range | null {\r\n    let start: NodePosition | null = null;\r\n    let end: NodePosition | null = null;\r\n\r\n    if (isNodePosition(arg1)) {\r\n        // function createRange(startPosition: NodePosition, endPosition?: NodePosition): Range;\r\n        start = arg1;\r\n        end = isNodePosition(arg2) ? arg2 : null;\r\n    } else if (safeInstanceOf(arg1, 'Node')) {\r\n        if (Array.isArray(arg2)) {\r\n            // function createRange(rootNode: Node, startPath: number[], endPath?: number[]): Range;\r\n            start = getPositionFromPath(arg1, arg2);\r\n            end = Array.isArray(arg3) ? getPositionFromPath(arg1, arg3) : null;\r\n        } else if (typeof arg2 == 'number') {\r\n            // function createRange(node: Node, offset: number | PositionType): Range;\r\n            // function createRange(startNode: Node, startOffset: number | PositionType, endNode: Node, endOffset: number | PositionType): Range;\r\n            start = new Position(arg1, arg2);\r\n            end = safeInstanceOf(arg3, 'Node') ? new Position(arg3, arg4!) : null;\r\n        } else if (safeInstanceOf(arg2, 'Node') || !arg2) {\r\n            // function createRange(startNode: Node, endNode?: Node): Range;\r\n            start = new Position(arg1, PositionType.Before);\r\n            end = new Position(<Node>arg2 || arg1, PositionType.After);\r\n        }\r\n    }\r\n\r\n    if (start?.node?.ownerDocument) {\r\n        let range = start.node.ownerDocument.createRange();\r\n        start = getFocusablePosition(start);\r\n        end = getFocusablePosition(end || start);\r\n        range.setStart(start.node, start.offset);\r\n        range.setEnd(end.node, end.offset);\r\n\r\n        return range;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Convert to focusable position\r\n * If current node is a void element, we need to move up one level to put cursor outside void element\r\n */\r\nfunction getFocusablePosition(position: NodePosition) {\r\n    return position.node.nodeType == NodeType.Element && isVoidHtmlElement(position.node)\r\n        ? new Position(position.node, position.isAtEnd ? PositionType.After : PositionType.Before)\r\n        : position;\r\n}\r\n\r\nfunction isNodePosition(arg: any): arg is NodePosition {\r\n    return arg && arg.node;\r\n}\r\n\r\nfunction getPositionFromPath(node: Node, path: number[]): NodePosition | null {\r\n    if (!node || !path) {\r\n        return null;\r\n    }\r\n\r\n    // Iterate with a for loop to avoid mutating the passed in element path stack\r\n    // or needing to copy it.\r\n    let offset: number = 0;\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n        offset = path[i];\r\n        if (\r\n            i < path.length - 1 &&\r\n            node &&\r\n            node.nodeType == NodeType.Element &&\r\n            node.childNodes.length > offset\r\n        ) {\r\n            node = node.childNodes[offset];\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return new Position(node, offset);\r\n}\r\n","import getInnerHTML from '../utils/getInnerHTML';\nimport getSelectionPath from './getSelectionPath';\n\n/**\n * Get inner Html of a root node with a selection path which can be used for restore selection.\n * The result string can be used by setHtmlWithSelectionPath() to restore the HTML and selection.\n * @param rootNode Root node to get inner Html from\n * @param range The range of selection. If pass null, no selection path will be added\n * @returns Inner HTML of the root node, followed by HTML comment contains selection path if the given range is valid\n */\nexport default function getHtmlWithSelectionPath(\n    rootNode: HTMLElement | DocumentFragment,\n    range: Range | null\n): string {\n    if (!rootNode) {\n        return '';\n    }\n\n    const content = getInnerHTML(rootNode);\n    const selectionPath = range && getSelectionPath(rootNode, range);\n\n    return selectionPath ? `${content}<!--${JSON.stringify(selectionPath)}-->` : content;\n}\n","import createElement from '../utils/createElement';\r\nimport createRange from './createRange';\r\nimport normalizeRect from '../utils/normalizeRect';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\nimport type { NodePosition, Rect } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get bounding rect of this position\r\n * @param position The position to get rect from\r\n */\r\nexport default function getPositionRect(position: NodePosition): Rect | null {\r\n    if (!position) {\r\n        return null;\r\n    }\r\n\r\n    let range = createRange(position);\r\n\r\n    // 1) try to get rect using range.getBoundingClientRect()\r\n    let rect: Rect | null =\r\n        range.getBoundingClientRect && normalizeRect(range.getBoundingClientRect());\r\n\r\n    if (rect) {\r\n        return rect;\r\n    }\r\n\r\n    // 2) try to get rect using range.getClientRects\r\n    position = position.normalize();\r\n    const rects = range.getClientRects && range.getClientRects();\r\n    rect = rects && rects.length == 1 ? normalizeRect(rects[0]) : null;\r\n    if (rect) {\r\n        return rect;\r\n    }\r\n\r\n    // 3) if node is text node, try inserting a SPAN and get the rect of SPAN for others\r\n    if (position.node.nodeType == NodeType.Text && position.node.ownerDocument) {\r\n        const span = createElement(\r\n            { tag: 'span', children: ['\\u200b'] },\r\n            position.node.ownerDocument\r\n        );\r\n        range = createRange(position);\r\n        range.insertNode(span!);\r\n        rect = span!.getBoundingClientRect && normalizeRect(span!.getBoundingClientRect());\r\n        span!.parentNode?.removeChild(span!);\r\n        if (rect) {\r\n            return rect;\r\n        }\r\n    }\r\n\r\n    // 4) try getBoundingClientRect on element\r\n    let element = position.element;\r\n    if (element && element.getBoundingClientRect) {\r\n        rect = normalizeRect(element.getBoundingClientRect());\r\n        if (rect) {\r\n            return rect;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","import contains from '../utils/contains';\r\nimport Position from './Position';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\nimport type { NodePosition, SelectionPath } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get path of the given selection range related to the given rootNode\r\n * @param rootNode The root node where the path start from\r\n * @param range The range of selection\r\n */\r\nexport default function getSelectionPath(\r\n    rootNode: Node,\r\n    range: Range | null\r\n): SelectionPath | null {\r\n    if (!range) {\r\n        return null;\r\n    }\r\n\r\n    let selectionPath: SelectionPath = {\r\n        start: getPositionPath(Position.getStart(range), rootNode),\r\n        end: getPositionPath(Position.getEnd(range), rootNode),\r\n    };\r\n\r\n    return selectionPath;\r\n}\r\n\r\n/**\r\n * Get the path of the node relative to rootNode.\r\n * The path of the node is an array of integer indices into the childNodes of the given node.\r\n *\r\n * The node path will be what the node path will be on a _normalized_ dom\r\n * (e.g. empty text nodes will be ignored and adjacent text nodes will be concatenated)\r\n *\r\n * @param rootNode the node the path will be relative to\r\n * @param position the position to get indexes from. Follows the same semantics\r\n * as selectionRange (if node is of type Text, it is an offset into the text of that node.\r\n * If node is of type Element, it is the index of a child in that Element node.)\r\n */\r\nfunction getPositionPath(position: NodePosition, rootNode: Node): number[] {\r\n    if (!position || !rootNode) {\r\n        return [];\r\n    }\r\n\r\n    let node: Node | null = position.node;\r\n    let offset = position.offset;\r\n    let result: number[] = [];\r\n    let parent: Node | null;\r\n\r\n    if (!contains(rootNode, node, true)) {\r\n        return [];\r\n    }\r\n\r\n    if (node.nodeType == NodeType.Text) {\r\n        parent = node.parentNode;\r\n        while (node.previousSibling && node.previousSibling.nodeType == NodeType.Text) {\r\n            offset += node.previousSibling.nodeValue?.length || 0;\r\n            node = node.previousSibling;\r\n        }\r\n        result.unshift(offset);\r\n    } else {\r\n        parent = node;\r\n        node = node.childNodes[offset];\r\n    }\r\n\r\n    do {\r\n        offset = 0;\r\n        let isPreviousText = false;\r\n\r\n        for (let c: Node | null = parent?.firstChild || null; c && c != node; c = c.nextSibling) {\r\n            if (c.nodeType == NodeType.Text) {\r\n                if (c.nodeValue?.length === 0 || isPreviousText) {\r\n                    continue;\r\n                }\r\n\r\n                isPreviousText = true;\r\n            } else {\r\n                isPreviousText = false;\r\n            }\r\n\r\n            offset++;\r\n        }\r\n\r\n        result.unshift(offset);\r\n        node = parent;\r\n        parent = parent?.parentNode || null;\r\n    } while (node && node != rootNode);\r\n\r\n    return result;\r\n}\r\n","import contains from '../utils/contains';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport isNodeEmpty from '../utils/isNodeEmpty';\r\nimport type { NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Check if this position is at beginning of the given node.\r\n * This will return true if all nodes between the beginning of target node and the position are empty.\r\n * @param position The position to check\r\n * @param targetNode The node to check\r\n * @returns True if position is at beginning of the node, otherwise false\r\n */\r\nexport default function isPositionAtBeginningOf(position: NodePosition, targetNode: Node | null) {\r\n    if (position) {\r\n        position = position.normalize();\r\n        let node: Node | null = position.node;\r\n        const offset = position.offset;\r\n        if (offset == 0) {\r\n            while (node && contains(targetNode, node) && areAllPreviousNodesEmpty(node)) {\r\n                node = node?.parentNode || null;\r\n            }\r\n\r\n            return node == targetNode;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction areAllPreviousNodesEmpty(node: Node): boolean {\r\n    while (node.previousSibling) {\r\n        node = node.previousSibling;\r\n        if (getTagOfNode(node) == 'BR' || !isNodeEmpty(node)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n","import createRange from './createRange';\r\nimport safeInstanceOf from '../utils/safeInstanceOf';\r\nimport validate from '../metadata/validate';\r\nimport { SelectionRangeTypes } from 'roosterjs-editor-types';\r\nimport {\r\n    createArrayDefinition,\r\n    createBooleanDefinition,\r\n    createNumberDefinition,\r\n    createObjectDefinition,\r\n    createStringDefinition,\r\n} from '../metadata/definitionCreators';\r\nimport type {\r\n    ContentMetadata,\r\n    TrustedHTMLHandler,\r\n    ImageContentMetadata,\r\n    NormalContentMetadata,\r\n    TableContentMetadata,\r\n    Coordinates,\r\n} from 'roosterjs-editor-types';\r\nconst NumberArrayDefinition = createArrayDefinition<number>(createNumberDefinition());\r\n\r\nconst CoordinatesDefinition = createObjectDefinition<Coordinates>({\r\n    x: createNumberDefinition(),\r\n    y: createNumberDefinition(),\r\n});\r\n\r\nconst IsDarkModeDefinition = createBooleanDefinition(true /*isOptional*/);\r\n\r\nconst NormalContentMetadataDefinition = createObjectDefinition<NormalContentMetadata>({\r\n    type: createNumberDefinition(true /*isOptional*/, SelectionRangeTypes.Normal),\r\n    isDarkMode: IsDarkModeDefinition,\r\n    start: NumberArrayDefinition,\r\n    end: NumberArrayDefinition,\r\n});\r\n\r\nconst TableContentMetadataDefinition = createObjectDefinition<TableContentMetadata>({\r\n    type: createNumberDefinition(false /*isOptional*/, SelectionRangeTypes.TableSelection),\r\n    isDarkMode: IsDarkModeDefinition,\r\n    tableId: createStringDefinition(),\r\n    firstCell: CoordinatesDefinition,\r\n    lastCell: CoordinatesDefinition,\r\n});\r\n\r\nconst ImageContentMetadataDefinition = createObjectDefinition<ImageContentMetadata>({\r\n    type: createNumberDefinition(false /*isOptional*/, SelectionRangeTypes.ImageSelection),\r\n    isDarkMode: IsDarkModeDefinition,\r\n    imageId: createStringDefinition(),\r\n});\r\n\r\n/**\r\n * @deprecated Use setHtmlWithMetadata instead\r\n * Restore inner HTML of a root element from given html string. If the string contains selection path,\r\n * remove the selection path and return a range represented by the path\r\n * @param root The root element\r\n * @param html The HTML to restore\r\n * @param trustedHTMLHandler An optional trusted HTML handler to convert HTML string to security string\r\n * @returns A selection range if the html contains a valid selection path, otherwise null\r\n */\r\nexport default function setHtmlWithSelectionPath(\r\n    rootNode: HTMLElement,\r\n    html: string,\r\n    trustedHTMLHandler?: TrustedHTMLHandler\r\n): Range | null {\r\n    const metadata = setHtmlWithMetadata(rootNode, html, trustedHTMLHandler);\r\n    return metadata?.type == SelectionRangeTypes.Normal\r\n        ? createRange(rootNode, metadata.start, metadata.end)\r\n        : null;\r\n}\r\n\r\n/**\r\n * Restore inner HTML of a root element from given html string. If the string contains metadata,\r\n * remove it from DOM tree and return the metadata\r\n * @param root The root element\r\n * @param html The HTML to restore\r\n * @param trustedHTMLHandler An optional trusted HTML handler to convert HTML string to security string\r\n * @returns Content metadata if any, or undefined\r\n */\r\nexport function setHtmlWithMetadata(\r\n    rootNode: HTMLElement,\r\n    html: string,\r\n    trustedHTMLHandler?: TrustedHTMLHandler\r\n): ContentMetadata | undefined {\r\n    if (!rootNode) {\r\n        return undefined;\r\n    }\r\n\r\n    html = html || '';\r\n    rootNode.innerHTML = trustedHTMLHandler?.(html) || html;\r\n\r\n    return extractContentMetadata(rootNode);\r\n}\r\n\r\n/**\r\n * Extract content metadata from DOM tree\r\n * @param rootNode Root of the DOM tree\r\n * @returns If there is a valid content metadata node in the give DOM tree, return this metadata object, otherwise undefined\r\n */\r\nexport function extractContentMetadata(rootNode: HTMLElement): ContentMetadata | undefined {\r\n    const potentialMetadataComment = rootNode.lastChild;\r\n\r\n    if (safeInstanceOf(potentialMetadataComment, 'Comment')) {\r\n        try {\r\n            const obj = JSON.parse(potentialMetadataComment.nodeValue || '');\r\n\r\n            if (\r\n                validate(obj, NormalContentMetadataDefinition) ||\r\n                validate(obj, TableContentMetadataDefinition) ||\r\n                validate(obj, ImageContentMetadataDefinition)\r\n            ) {\r\n                rootNode.removeChild(potentialMetadataComment);\r\n                obj.type = typeof obj.type === 'undefined' ? SelectionRangeTypes.Normal : obj.type;\r\n                obj.isDarkMode = obj.isDarkMode || false;\r\n\r\n                return obj;\r\n            }\r\n        } catch {}\r\n    }\r\n\r\n    return undefined;\r\n}\r\n","import clearProceedingSnapshots from './clearProceedingSnapshots';\r\nimport type { Snapshot, Snapshots } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Add a new snapshot to the given snapshots data structure\r\n * @param snapshots The snapshots data structure to add new snapshot into\r\n * @param html The snapshot HTML to add\r\n * @param isAutoCompleteSnapshot Whether this is a snapshot before auto complete action\r\n */\r\nexport default function addSnapshot(\r\n    snapshots: Snapshots<string>,\r\n    html: string,\r\n    isAutoCompleteSnapshot: boolean\r\n): void;\r\n\r\n/**\r\n * Add a new snapshot to the given snapshots data structure\r\n * @param snapshots The snapshots data structure to add new snapshot into\r\n * @param snapshot The generic snapshot object to add\r\n * @param isAutoCompleteSnapshot Whether this is a snapshot before auto complete action\r\n * @param getLength A callback function to calculate length of the snapshot\r\n * @param isSame A callback function to check if the given snapshots are the same\r\n */\r\nexport default function addSnapshot<T>(\r\n    snapshots: Snapshots<T>,\r\n    snapshot: T,\r\n    isAutoCompleteSnapshot: boolean,\r\n    getLength: (snapshot: T) => number,\r\n    isSame: (snapshot1: T, snapshot2: T) => boolean\r\n): void;\r\n\r\nexport default function addSnapshot<T>(\r\n    snapshots: Snapshots<T>,\r\n    snapshot: T,\r\n    isAutoCompleteSnapshot: boolean,\r\n    getLength?: (snapshot: T) => number,\r\n    compare?: (snapshot1: T, snapshot2: T) => boolean\r\n) {\r\n    getLength = getLength || (str => (<string>(<any>str))?.length || 0);\r\n    compare = compare || defaultCompare;\r\n\r\n    const currentSnapshot = snapshots.snapshots[snapshots.currentIndex];\r\n    const isSameSnapshot = currentSnapshot && compare(currentSnapshot, snapshot);\r\n\r\n    if (snapshots.currentIndex < 0 || !currentSnapshot || !isSameSnapshot) {\r\n        clearProceedingSnapshots(snapshots, getLength);\r\n        snapshots.snapshots.push(snapshot);\r\n        snapshots.currentIndex++;\r\n        snapshots.totalSize += getLength(snapshot);\r\n\r\n        let removeCount = 0;\r\n        while (\r\n            removeCount < snapshots.snapshots.length &&\r\n            snapshots.totalSize > snapshots.maxSize\r\n        ) {\r\n            snapshots.totalSize -= getLength(snapshots.snapshots[removeCount]);\r\n            removeCount++;\r\n        }\r\n\r\n        if (removeCount > 0) {\r\n            snapshots.snapshots.splice(0, removeCount);\r\n            snapshots.currentIndex -= removeCount;\r\n            snapshots.autoCompleteIndex -= removeCount;\r\n        }\r\n\r\n        if (isAutoCompleteSnapshot) {\r\n            snapshots.autoCompleteIndex = snapshots.currentIndex;\r\n        }\r\n    } else if (isSameSnapshot) {\r\n        // replace the currentSnapshot's metadata so the selection is updated\r\n        snapshots.snapshots.splice(snapshots.currentIndex, 1, snapshot);\r\n    }\r\n}\r\n\r\n/**\r\n * Add a new snapshot to the given snapshots data structure\r\n * @param snapshots The snapshots data structure to add new snapshot into\r\n * @param snapshot The snapshot object to add\r\n * @param isAutoCompleteSnapshot Whether this is a snapshot before auto complete action\r\n */\r\nexport function addSnapshotV2(\r\n    snapshots: Snapshots<Snapshot>,\r\n    snapshot: Snapshot,\r\n    isAutoCompleteSnapshot: boolean\r\n) {\r\n    addSnapshot(\r\n        snapshots,\r\n        snapshot,\r\n        isAutoCompleteSnapshot,\r\n        s => s.html?.length || 0,\r\n        compareSnapshots\r\n    );\r\n}\r\n\r\nfunction compareSnapshots(s1: Snapshot, s2: Snapshot) {\r\n    return s1.html == s2.html && !s1.entityStates && !s2.entityStates;\r\n}\r\n\r\nfunction defaultCompare<T>(s1: T, s2: T) {\r\n    return s1 == s2;\r\n}\r\n","import type { Snapshots } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Check whether can move current snapshot with the given step\r\n * @param snapshots The snapshots data structure to check\r\n * @param step The step to check, can be positive, negative or 0\r\n * @returns True if can move current snapshot with the given step, otherwise false\r\n */\r\nexport default function canMoveCurrentSnapshot<T = string>(\r\n    snapshots: Snapshots<T>,\r\n    step: number\r\n): boolean {\r\n    let newIndex = snapshots.currentIndex + step;\r\n    return newIndex >= 0 && newIndex < snapshots.snapshots.length;\r\n}\r\n","import type { Snapshots } from 'roosterjs-editor-types';\n\n/**\n * Whether there is a snapshot added before auto complete and it can be undone now\n */\nexport default function canUndoAutoComplete<T = string>(snapshots: Snapshots<T>): boolean {\n    return (\n        snapshots.autoCompleteIndex >= 0 &&\n        snapshots.currentIndex - snapshots.autoCompleteIndex == 1\n    );\n}\n","import canMoveCurrentSnapshot from './canMoveCurrentSnapshot';\r\nimport type { Snapshot, Snapshots } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport default function clearProceedingSnapshots(snapshots: Snapshots<string>): void;\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport default function clearProceedingSnapshots<T>(\r\n    snapshots: Snapshots<T>,\r\n    getLength: (snapshot: T) => number\r\n): void;\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport default function clearProceedingSnapshots<T>(\r\n    snapshots: Snapshots<T>,\r\n    getLength?: (snapshot: T) => number\r\n) {\r\n    getLength = getLength || (str => (<string>(<any>str))?.length || 0);\r\n    if (canMoveCurrentSnapshot(snapshots, 1)) {\r\n        let removedSize = 0;\r\n        for (let i = snapshots.currentIndex + 1; i < snapshots.snapshots.length; i++) {\r\n            removedSize += getLength(snapshots.snapshots[i]);\r\n        }\r\n        snapshots.snapshots.splice(snapshots.currentIndex + 1);\r\n        snapshots.totalSize -= removedSize;\r\n        snapshots.autoCompleteIndex = -1;\r\n    }\r\n}\r\n\r\n/**\r\n * Clear all snapshots after the current one\r\n * @param snapshots The snapshots data structure to clear\r\n */\r\nexport function clearProceedingSnapshotsV2(snapshots: Snapshots<Snapshot>) {\r\n    clearProceedingSnapshots(snapshots, s => s.html?.length || 0);\r\n}\r\n","import type { Snapshots } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Create initial snapshots\r\n * @param maxSize max size of all snapshots\r\n */\r\nexport default function createSnapshots<T = string>(maxSize: number): Snapshots<T> {\r\n    return {\r\n        snapshots: [],\r\n        totalSize: 0,\r\n        currentIndex: -1,\r\n        autoCompleteIndex: -1,\r\n        maxSize,\r\n    };\r\n}\r\n","import canMoveCurrentSnapshot from './canMoveCurrentSnapshot';\nimport type { Snapshots } from 'roosterjs-editor-types';\n\n/**\n * Move current snapshot with the given step if can move this step. Otherwise no action and return null\n * @param snapshots The snapshots data structure to move\n * @param step The step to move\n * @returns If can move with the given step, returns the snapshot after move, otherwise null\n */\nexport default function moveCurrentSnapshot<T = string>(\n    snapshots: Snapshots<T>,\n    step: number\n): T | null {\n    if (canMoveCurrentSnapshot(snapshots, step)) {\n        snapshots.currentIndex += step;\n        snapshots.autoCompleteIndex = -1;\n        return snapshots.snapshots[snapshots.currentIndex];\n    } else {\n        return null;\n    }\n}\n\n/**\n * @deprecated\n * For backward compatibility only\n */\nexport const moveCurrentSnapsnot = moveCurrentSnapshot;\n","/**\n * Get CSS styles of a given element in name-value pair format\n * @param element The element to get styles from\n */\nexport default function getStyles(element: HTMLElement): Record<string, string> {\n    const result: Record<string, string> = {};\n    const style = element?.getAttribute('style') || '';\n    style.split(';').forEach(pair => {\n        const valueIndex = pair.indexOf(':');\n        const name = pair.slice(0, valueIndex);\n        const value = pair.slice(valueIndex + 1);\n        if (name && value) {\n            result[name.trim()] = value.trim();\n        }\n    });\n    return result;\n}\n","/**\n * Remove a css rule style from a style sheet\n * @param doc The document object\n * @param styleId the ID of the style tag\n */\n\nexport default function removeGlobalCssStyle(doc: Document, styleId: string) {\n    const styleTag = doc.getElementById(styleId) as HTMLStyleElement;\n    if (styleTag) {\n        styleTag.parentNode?.removeChild(styleTag);\n    }\n}\n","import getStyles from './getStyles';\nimport setStyles from './setStyles';\n\n/**\n * Removes the css important rule from some css properties\n * @param element The HTMLElement\n * @param styleProperties The css properties that important must be removed. Ex: ['background-color', 'background']\n */\n\nexport default function removeImportantStyleRule(element: HTMLElement, styleProperties: string[]) {\n    const styles = getStyles(element);\n    let modifiedStyles = 0;\n    styleProperties.forEach(style => {\n        if (styles[style]?.indexOf('!important') > -1) {\n            const index = styles[style].indexOf('!');\n            styles[style] = styles[style].substring(0, index);\n            modifiedStyles++;\n        }\n    });\n    if (modifiedStyles > 0) {\n        setStyles(element, styles);\n    }\n}\n","/**\n * Add global css styles\n * @param doc The document object\n * @param cssRule The css rule that must added to the selection\n * @param styleId The id of the style tag\n */\n\nexport default function setGlobalCssStyles(doc: Document, cssRule: string, styleId: string) {\n    if (cssRule) {\n        let styleTag = doc.getElementById(styleId) as HTMLStyleElement;\n        if (!styleTag) {\n            styleTag = doc.createElement('style');\n            styleTag.id = styleId;\n            doc.head.appendChild(styleTag);\n        }\n        styleTag.sheet?.insertRule(cssRule);\n    }\n}\n","import getObjectKeys from '../jsUtils/getObjectKeys';\n\n/**\n * Set styles to an HTML element. If styles are empty, remove 'style' attribute\n * @param element The element to set styles\n * @param styles The styles to set, in name-value pair format\n */\nexport default function setStyles(element: HTMLElement, styles: Record<string, string>) {\n    if (element) {\n        const style = getObjectKeys(styles || {})\n            .map(name => {\n                const value: string | null = styles[name];\n                const trimmedName = name ? name.trim() : null;\n                const trimmedValue = value ? value.trim() : null;\n                return trimmedName && trimmedValue ? `${trimmedName}:${trimmedValue}` : null;\n            })\n            .filter(x => x)\n            .join(';');\n        if (style) {\n            element.setAttribute('style', style);\n        } else {\n            element.removeAttribute('style');\n        }\n    }\n}\n","import applyTableFormat from './applyTableFormat';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport moveChildNodes from '../utils/moveChildNodes';\r\nimport normalizeRect from '../utils/normalizeRect';\r\nimport safeInstanceOf from '../utils/safeInstanceOf';\r\nimport toArray from '../jsUtils/toArray';\r\nimport { getTableCellMetadata, saveTableCellMetadata } from './tableCellInfo';\r\nimport { getTableFormatInfo, saveTableInfo } from './tableFormatInfo';\r\nimport { removeMetadata } from '../metadata/metadata';\r\nimport { TableBorderFormat, TableOperation } from 'roosterjs-editor-types';\r\nimport type {\r\n    SizeTransformer,\r\n    TableFormat,\r\n    TableSelection,\r\n    VCell,\r\n    DarkColorHandler,\r\n} from 'roosterjs-editor-types';\r\nimport type { CompatibleTableOperation } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\nconst DEFAULT_FORMAT: Required<TableFormat> = {\r\n    topBorderColor: '#ABABAB',\r\n    bottomBorderColor: '#ABABAB',\r\n    verticalBorderColor: '#ABABAB',\r\n    hasHeaderRow: false,\r\n    hasFirstColumn: false,\r\n    hasBandedRows: false,\r\n    hasBandedColumns: false,\r\n    bgColorEven: null,\r\n    bgColorOdd: '#ABABAB20',\r\n    headerRowColor: '#ABABAB',\r\n    tableBorderFormat: TableBorderFormat.DEFAULT,\r\n    keepCellShade: false,\r\n    verticalAlign: null,\r\n};\r\n\r\n/**\r\n * A virtual table class, represent an HTML table, by expand all merged cells to each separated cells\r\n */\r\nexport default class VTable {\r\n    /**\r\n     * The HTML table object\r\n     */\r\n    table: HTMLTableElement;\r\n\r\n    /**\r\n     * Virtual cells\r\n     */\r\n    cells: VCell[][] | null = null;\r\n\r\n    /**\r\n     * Current row index\r\n     */\r\n    row: number | undefined;\r\n\r\n    /**\r\n     * Current column index\r\n     */\r\n    col: number | undefined;\r\n\r\n    /**\r\n     * Current format of the table\r\n     */\r\n    formatInfo: Required<TableFormat> | null = null;\r\n\r\n    private trs: HTMLTableRowElement[] = [];\r\n\r\n    private tableSelection: TableSelection | null = null;\r\n\r\n    /**\r\n     * Create a new instance of VTable object using HTML TABLE or TD node\r\n     * @param node The HTML Table or TD node\r\n     * @param normalizeSize Whether table size needs to be normalized\r\n     * @param zoomScale When the table is under a zoomed container, pass in the zoom scale here\r\n     */\r\n    constructor(\r\n        node: HTMLTableElement | HTMLTableCellElement,\r\n        normalizeSize?: boolean,\r\n        zoomScale?: number | SizeTransformer\r\n    ) {\r\n        this.table = safeInstanceOf(node, 'HTMLTableElement') ? node : getTableFromTd(node);\r\n        if (this.table) {\r\n            let currentTd = safeInstanceOf(node, 'HTMLTableElement') ? null : node;\r\n            let trs = toArray(this.table.rows);\r\n            this.cells = trs.map(row => []);\r\n            trs.forEach((tr, rowIndex) => {\r\n                this.trs[rowIndex % 2] = tr;\r\n                for (let sourceCol = 0, targetCol = 0; sourceCol < tr.cells.length; sourceCol++) {\r\n                    // Skip the cells which already initialized\r\n                    for (; this.cells![rowIndex][targetCol]; targetCol++) {}\r\n                    let td = tr.cells[sourceCol];\r\n\r\n                    if (td == currentTd) {\r\n                        this.col = targetCol;\r\n                        this.row = rowIndex;\r\n                    }\r\n\r\n                    for (let colSpan = 0; colSpan < td.colSpan; colSpan++, targetCol++) {\r\n                        for (let rowSpan = 0; rowSpan < td.rowSpan; rowSpan++) {\r\n                            const hasTd: boolean = colSpan + rowSpan == 0;\r\n                            const rect = td.getBoundingClientRect();\r\n                            if (this.cells?.[rowIndex + rowSpan]) {\r\n                                this.cells[rowIndex + rowSpan][targetCol] = {\r\n                                    td: hasTd ? td : null,\r\n                                    spanLeft: colSpan > 0,\r\n                                    spanAbove: rowSpan > 0,\r\n                                    width: hasTd ? rect.width : undefined,\r\n                                    height: hasTd ? rect.height : undefined,\r\n                                };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let col = 0; col < this.cells![rowIndex].length; col++) {\r\n                    if (!this.cells![rowIndex][col]) {\r\n                        this.cells![rowIndex][col] = {\r\n                            td: null,\r\n                            spanLeft: false,\r\n                            spanAbove: false,\r\n                            width: undefined,\r\n                            height: undefined,\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n            this.formatInfo = getTableFormatInfo(this.table);\r\n            if (normalizeSize) {\r\n                this.normalizeSize(typeof zoomScale == 'number' ? n => n / zoomScale : zoomScale);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Selected range of cells with the coordinates of the first and last cell selected.\r\n     */\r\n    public get selection(): TableSelection | null {\r\n        return this.tableSelection || null;\r\n    }\r\n\r\n    public set selection(value: TableSelection | null) {\r\n        if (value) {\r\n            const { firstCell } = value;\r\n            this.row = firstCell?.y;\r\n            this.col = firstCell?.x;\r\n        }\r\n        this.tableSelection = value;\r\n    }\r\n\r\n    /**\r\n     * Write the virtual table back to DOM tree to represent the change of VTable\r\n     * @param skipApplyFormat Do not reapply table format when write back. Only use this parameter when you are pretty sure there is no format or table structure change during the process.\r\n     * @param darkColorHandler An object to handle dark background colors, if not passed the cell background color will not be set\r\n     */\r\n    writeBack(skipApplyFormat?: boolean, darkColorHandler?: DarkColorHandler | null) {\r\n        if (this.cells) {\r\n            moveChildNodes(this.table);\r\n            this.cells.forEach((row, r) => {\r\n                let tr = cloneNode(this.trs[r % 2] || this.trs[0]);\r\n\r\n                if (tr) {\r\n                    this.table.appendChild(tr);\r\n                    row.forEach((cell, c) => {\r\n                        if (cell.td) {\r\n                            this.recalculateSpans(r, c);\r\n                            this.recalculateCellHeight(cell.td);\r\n                            tr!.appendChild(cell.td);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            if (this.formatInfo && !skipApplyFormat) {\r\n                saveTableInfo(this.table, this.formatInfo);\r\n                applyTableFormat(this.table, this.cells, this.formatInfo, darkColorHandler);\r\n            }\r\n        } else if (this.table) {\r\n            this.table.parentNode?.removeChild(this.table);\r\n        }\r\n    }\r\n\r\n    private recalculateCellHeight(td: HTMLTableCellElement) {\r\n        if (this.isEmptyCell(td) && td.rowSpan > 1) {\r\n            for (let i = 1; i < td.rowSpan; i++) {\r\n                const br = document.createElement('br');\r\n                td.appendChild(br);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply the given table format to this virtual table\r\n     * @param format Table format to apply\r\n     */\r\n    applyFormat(format: Partial<TableFormat>) {\r\n        if (!this.table) {\r\n            return;\r\n        }\r\n        this.formatInfo = {\r\n            ...DEFAULT_FORMAT,\r\n            ...(this.formatInfo || {}),\r\n            ...(format || {}),\r\n        };\r\n        if (!this.formatInfo.keepCellShade) {\r\n            this.deleteCellShadeDataset(this.cells);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove the cellShade dataset to apply a new style format at the cell.\r\n     * @param cells\r\n     */\r\n    private deleteCellShadeDataset(cells: VCell[][] | null) {\r\n        cells?.forEach(row => {\r\n            row.forEach(cell => {\r\n                if (cell.td) {\r\n                    removeMetadata(cell.td, 'bgColorOverride');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Edit table with given operation.\r\n     * @param operation Table operation\r\n     */\r\n    edit(operation: TableOperation | CompatibleTableOperation) {\r\n        if (!this.table || !this.cells || this.row === undefined || this.col == undefined) {\r\n            return;\r\n        }\r\n\r\n        let currentRow = this.cells[this.row];\r\n        let currentCell = currentRow[this.col];\r\n        const firstRow = this.selection ? this.selection.firstCell.y : this.row;\r\n        const lastRow = this.selection ? this.selection.lastCell.y : this.row;\r\n        const firstColumn = this.selection ? this.selection.firstCell.x : this.col;\r\n        const lastColumn = this.selection ? this.selection.lastCell.x : this.col;\r\n        switch (operation) {\r\n            case TableOperation.InsertAbove:\r\n                for (let i = firstRow; i <= lastRow; i++) {\r\n                    this.cells.splice(firstRow, 0, currentRow.map(cloneCell));\r\n                }\r\n                break;\r\n            case TableOperation.InsertBelow:\r\n                for (let i = firstRow; i <= lastRow; i++) {\r\n                    let newRow = lastRow + this.countSpanAbove(lastRow, this.col);\r\n                    this.cells.splice(\r\n                        newRow,\r\n                        0,\r\n                        this.cells[newRow - 1].map((cell, colIndex) => {\r\n                            let nextCell = this.getCell(newRow, colIndex);\r\n\r\n                            if (nextCell.spanAbove) {\r\n                                return cloneCell(nextCell);\r\n                            } else if (cell.spanLeft) {\r\n                                let newCell = cloneCell(cell);\r\n                                newCell.spanAbove = false;\r\n                                return newCell;\r\n                            } else {\r\n                                return {\r\n                                    td: cloneNode(this.getTd(this.row!, colIndex)),\r\n                                };\r\n                            }\r\n                        })\r\n                    );\r\n                }\r\n\r\n                break;\r\n\r\n            case TableOperation.InsertLeft:\r\n                for (let i = firstColumn; i <= lastColumn; i++) {\r\n                    this.forEachCellOfCurrentColumn((cell, row) => {\r\n                        row.splice(i, 0, cloneCell(cell));\r\n                    });\r\n                }\r\n\r\n                break;\r\n            case TableOperation.InsertRight:\r\n                for (let i = firstColumn; i <= lastColumn; i++) {\r\n                    let newCol = lastColumn + this.countSpanLeft(this.row, lastColumn);\r\n                    this.forEachCellOfColumn(newCol - 1, (cell, row, i) => {\r\n                        let nextCell = this.getCell(i, newCol);\r\n                        let newCell: VCell;\r\n                        if (nextCell.spanLeft) {\r\n                            newCell = cloneCell(nextCell);\r\n                        } else if (cell.spanAbove) {\r\n                            newCell = cloneCell(cell);\r\n                            newCell.spanLeft = false;\r\n                        } else {\r\n                            newCell = {\r\n                                td: cloneNode(this.getTd(i, this.col!)),\r\n                            };\r\n                        }\r\n\r\n                        row.splice(newCol, 0, newCell);\r\n                    });\r\n                }\r\n\r\n                break;\r\n\r\n            case TableOperation.DeleteRow:\r\n                for (let rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\r\n                    this.forEachCellOfRow(rowIndex, (cell: VCell, i: number) => {\r\n                        let nextCell = this.getCell(rowIndex + 1, i);\r\n                        if (cell.td && cell.td.rowSpan > 1 && nextCell.spanAbove) {\r\n                            nextCell.td = cell.td;\r\n                        }\r\n                    });\r\n                }\r\n                const removedRows = this.selection\r\n                    ? this.selection.lastCell.y - this.selection.firstCell.y\r\n                    : 0;\r\n                this.cells.splice(firstRow, removedRows + 1);\r\n                if (this.cells.length === 0) {\r\n                    this.cells = null;\r\n                }\r\n\r\n                break;\r\n            case TableOperation.DeleteColumn:\r\n                let deletedColumns = 0;\r\n                for (let colIndex = firstColumn; colIndex <= lastColumn; colIndex++) {\r\n                    this.forEachCellOfColumn(colIndex, (cell, row, i) => {\r\n                        let nextCell = this.getCell(i, colIndex + 1);\r\n                        if (cell.td && cell.td.colSpan > 1 && nextCell.spanLeft) {\r\n                            nextCell.td = cell.td;\r\n                        }\r\n                        const removedColumns = this.selection\r\n                            ? colIndex - deletedColumns\r\n                            : this.col!;\r\n                        row.splice(removedColumns, 1);\r\n                    });\r\n                    deletedColumns++;\r\n                }\r\n                if (this.cells?.length === 0 || this.cells?.every(row => row.length === 0)) {\r\n                    this.cells = null;\r\n                }\r\n                break;\r\n\r\n            case TableOperation.MergeAbove:\r\n            case TableOperation.MergeBelow:\r\n                let rowStep = operation == TableOperation.MergeAbove ? -1 : 1;\r\n                for (\r\n                    let rowIndex = this.row + rowStep;\r\n                    rowIndex >= 0 && rowIndex < this.cells.length;\r\n                    rowIndex += rowStep\r\n                ) {\r\n                    let cell = this.getCell(rowIndex, this.col);\r\n                    if (cell.td && !cell.spanAbove) {\r\n                        let aboveCell = rowIndex < this.row ? cell : currentCell;\r\n                        let belowCell = rowIndex < this.row ? currentCell : cell;\r\n                        this.mergeCells(aboveCell, belowCell);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TableOperation.MergeLeft:\r\n            case TableOperation.MergeRight:\r\n                let colStep = operation == TableOperation.MergeLeft ? -1 : 1;\r\n                for (\r\n                    let colIndex = this.col + colStep;\r\n                    colIndex >= 0 && colIndex < this.cells[this.row].length;\r\n                    colIndex += colStep\r\n                ) {\r\n                    let cell = this.getCell(this.row, colIndex);\r\n                    if (cell.td && !cell.spanLeft) {\r\n                        let leftCell = colIndex < this.col ? cell : currentCell;\r\n                        let rightCell = colIndex < this.col ? currentCell : cell;\r\n                        this.mergeCells(leftCell, rightCell, true /** horizontally */);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TableOperation.MergeCells:\r\n                for (let colIndex = firstColumn; colIndex <= lastColumn; colIndex++) {\r\n                    for (let rowIndex = firstRow + 1; rowIndex <= lastRow; rowIndex++) {\r\n                        let cell = this.getCell(firstRow, colIndex);\r\n                        let nextCellBelow = this.getCell(rowIndex, colIndex);\r\n                        this.mergeCells(cell, nextCellBelow);\r\n                    }\r\n                }\r\n                for (let colIndex = firstColumn + 1; colIndex <= lastColumn; colIndex++) {\r\n                    let cell = this.getCell(firstRow, firstColumn);\r\n                    let nextCellRight = this.getCell(firstRow, colIndex);\r\n                    this.mergeCells(cell, nextCellRight, true /** horizontally */);\r\n                }\r\n\r\n                break;\r\n            case TableOperation.DeleteTable:\r\n                this.cells = null;\r\n                break;\r\n\r\n            case TableOperation.SplitVertically:\r\n                if (currentCell.td && currentCell.td.rowSpan > 1) {\r\n                    this.getCell(this.row + 1, this.col).td = cloneNode(currentCell.td);\r\n                } else {\r\n                    let splitRow = currentRow.map(cell => {\r\n                        return {\r\n                            td: cell == currentCell ? cloneNode(cell.td) : null,\r\n                            spanAbove: cell != currentCell,\r\n                            spanLeft: cell.spanLeft,\r\n                        };\r\n                    });\r\n                    this.cells.splice(this.row + 1, 0, splitRow);\r\n                }\r\n                break;\r\n\r\n            case TableOperation.SplitHorizontally:\r\n                if (currentCell.td && currentCell.td.colSpan > 1) {\r\n                    this.getCell(this.row, this.col + 1).td = cloneNode(currentCell.td);\r\n                } else {\r\n                    this.forEachCellOfCurrentColumn((cell, row) => {\r\n                        row.splice(this.col! + 1, 0, {\r\n                            td: row == currentRow ? cloneNode(cell.td) : null,\r\n                            spanAbove: cell.spanAbove,\r\n                            spanLeft: row != currentRow,\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n            case TableOperation.AlignCenter:\r\n                this.table.style.marginLeft = 'auto';\r\n                this.table.style.marginRight = 'auto';\r\n                break;\r\n            case TableOperation.AlignLeft:\r\n                this.table.style.marginLeft = '';\r\n                this.table.style.marginRight = 'auto';\r\n                break;\r\n            case TableOperation.AlignRight:\r\n                this.table.style.marginLeft = 'auto';\r\n                this.table.style.marginRight = '';\r\n                break;\r\n            case TableOperation.AlignCellCenter:\r\n                this.setAlignmentToSelectedCells(\r\n                    firstRow,\r\n                    lastRow,\r\n                    firstColumn,\r\n                    lastColumn,\r\n                    'center'\r\n                );\r\n                break;\r\n            case TableOperation.AlignCellLeft:\r\n                this.setAlignmentToSelectedCells(\r\n                    firstRow,\r\n                    lastRow,\r\n                    firstColumn,\r\n                    lastColumn,\r\n                    'left'\r\n                );\r\n                break;\r\n            case TableOperation.AlignCellRight:\r\n                this.setAlignmentToSelectedCells(\r\n                    firstRow,\r\n                    lastRow,\r\n                    firstColumn,\r\n                    lastColumn,\r\n                    'right'\r\n                );\r\n                break;\r\n            case TableOperation.AlignCellTop:\r\n                this.setAlignmentToSelectedCells(\r\n                    firstRow,\r\n                    lastRow,\r\n                    firstColumn,\r\n                    lastColumn,\r\n                    'top',\r\n                    true /** isVertical */\r\n                );\r\n                break;\r\n            case TableOperation.AlignCellMiddle:\r\n                this.setAlignmentToSelectedCells(\r\n                    firstRow,\r\n                    lastRow,\r\n                    firstColumn,\r\n                    lastColumn,\r\n                    'middle',\r\n                    true /** isVertical */\r\n                );\r\n                break;\r\n            case TableOperation.AlignCellBottom:\r\n                this.setAlignmentToSelectedCells(\r\n                    firstRow,\r\n                    lastRow,\r\n                    firstColumn,\r\n                    lastColumn,\r\n                    'bottom',\r\n                    true /** isVertical */\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n    setAlignmentToSelectedCells(\r\n        firstRow: number,\r\n        lastRow: number,\r\n        firstColumn: number,\r\n        lastColumn: number,\r\n        alignmentType: string,\r\n        isVertical?: boolean\r\n    ) {\r\n        for (let i = firstRow; i <= lastRow; i++) {\r\n            for (let j = firstColumn; j <= lastColumn; j++) {\r\n                if (this.cells) {\r\n                    const cell = this.cells[i][j].td;\r\n                    if (isVertical && cell) {\r\n                        cell.style?.setProperty('vertical-align', alignmentType);\r\n                        const meta = getTableCellMetadata(cell);\r\n                        saveTableCellMetadata(cell, { ...meta, vAlignOverride: true });\r\n                    } else if (cell) {\r\n                        cell.style?.setProperty('text-align', alignmentType);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private mergeCells(cell: VCell, nextCell: VCell, horizontally?: boolean) {\r\n        const checkSpans = horizontally\r\n            ? cell.td?.rowSpan === nextCell.td?.rowSpan && !cell.spanLeft\r\n            : cell.td?.colSpan === nextCell.td?.colSpan && !cell.spanAbove;\r\n        if (cell.td && nextCell.td && checkSpans) {\r\n            this.mergeCellContents(cell.td, nextCell.td);\r\n            nextCell.td = null;\r\n            if (horizontally) {\r\n                nextCell.spanLeft = true;\r\n            } else {\r\n                nextCell.spanAbove = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private isEmptyCell(td: HTMLTableCellElement) {\r\n        return td.childElementCount === 1 && getTagOfNode(td.firstChild) === 'BR';\r\n    }\r\n\r\n    private mergeCellContents(cellTd: HTMLTableCellElement, nextCellTd: HTMLTableCellElement) {\r\n        if (this.isEmptyCell(nextCellTd)) {\r\n            moveChildNodes(cellTd, nextCellTd, false /*keepExistingChildren*/);\r\n        } else {\r\n            const br = document.createElement('br');\r\n            cellTd.appendChild(br);\r\n            moveChildNodes(cellTd, nextCellTd, true /*keepExistingChildren*/);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loop each cell of current column and invoke a callback function\r\n     * @param callback The callback function to invoke\r\n     */\r\n    forEachCellOfCurrentColumn(callback: (cell: VCell, row: VCell[], i: number) => any) {\r\n        this.forEachCellOfColumn(this.col, callback);\r\n    }\r\n\r\n    /**\r\n     * Loop each table cell and get all the cells that share the same border from one side\r\n     * The result is an array of table cell elements\r\n     * @param borderPos The position of the border\r\n     * @param getLeftCells Get left-hand-side or right-hand-side cells of the border\r\n     *\r\n     * Example, consider having a 3 by 4 table as below with merged and split cells\r\n     *\r\n     *     | 1 | 4 | 7 | 8 |\r\n     *     |   5   |   9   |\r\n     *     |   3   |   10  |\r\n     *\r\n     *  input => borderPos: the 3rd border, getLeftCells: true\r\n     *  output => [4, 5, 3]\r\n     *\r\n     *  input => borderPos: the 3rd border, getLeftCells: false\r\n     *  output => [7, 9, 10]\r\n     *\r\n     *  input => borderPos: the 2nd border, getLeftCells: true\r\n     *  output => [1]\r\n     *\r\n     *  input => borderPos: the 2nd border, getLeftCells: false\r\n     *  output => [4]\r\n     */\r\n    getCellsWithBorder(borderPos: number, getLeftCells: boolean): HTMLTableCellElement[] {\r\n        const cells: HTMLTableCellElement[] = [];\r\n        for (let i = 0; this.cells && i < this.cells.length; i++) {\r\n            for (let j = 0; j < this.cells[i].length; j++) {\r\n                const cell = this.getCell(i, j);\r\n                if (cell.td) {\r\n                    const cellRect = normalizeRect(cell.td.getBoundingClientRect());\r\n\r\n                    if (cellRect) {\r\n                        let found: boolean = false;\r\n                        if (getLeftCells) {\r\n                            if (cellRect.right == borderPos) {\r\n                                found = true;\r\n                                cells.push(cell.td);\r\n                            } else if (found) {\r\n                                break;\r\n                            }\r\n                        } else {\r\n                            if (cellRect.left == borderPos) {\r\n                                found = true;\r\n                                cells.push(cell.td);\r\n                            } else if (found) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    /**\r\n     * Loop each cell of current row and invoke a callback function\r\n     * @param callback The callback function to invoke\r\n     */\r\n    forEachCellOfCurrentRow(callback: (cell: VCell, i: number) => any) {\r\n        this.forEachCellOfRow(this.row, callback);\r\n    }\r\n\r\n    /**\r\n     * Get a table cell using its row and column index. This function will always return an object\r\n     * even if the given indexes don't exist in table.\r\n     * @param row The row index\r\n     * @param col The column index\r\n     */\r\n    getCell(row: number, col: number): VCell {\r\n        return (this.cells && this.cells[row] && this.cells[row][col]) || {};\r\n    }\r\n\r\n    /**\r\n     * Get current HTML table cell object. If the current table cell is a virtual expanded cell, return its root cell\r\n     */\r\n    getCurrentTd(): HTMLTableCellElement | null {\r\n        return this.getTd(this.row, this.col);\r\n    }\r\n\r\n    /**\r\n     * Get the Table Cell in a provided coordinate\r\n     * @param row row of the cell\r\n     * @param col column of the cell\r\n     */\r\n    getTd(row: number | undefined, col: number | undefined) {\r\n        if (this.cells && row !== undefined && col !== undefined) {\r\n            row = Math.min(this.cells.length - 1, row);\r\n            col = this.cells[row] ? Math.min(this.cells[row].length - 1, col) : col;\r\n            if (!isNaN(row) && !isNaN(col)) {\r\n                while (row >= 0 && col >= 0) {\r\n                    let cell = this.getCell(row, col);\r\n                    if (cell.td) {\r\n                        return cell.td;\r\n                    } else if (cell.spanLeft) {\r\n                        col--;\r\n                    } else if (cell.spanAbove) {\r\n                        row--;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private forEachCellOfColumn(\r\n        col: number | undefined,\r\n        callback: (cell: VCell, row: VCell[], i: number) => any\r\n    ) {\r\n        if (col !== undefined) {\r\n            for (let i = 0; this.cells && i < this.cells.length; i++) {\r\n                callback(this.getCell(i, col), this.cells[i], i);\r\n            }\r\n        }\r\n    }\r\n\r\n    private forEachCellOfRow(row: number | undefined, callback: (cell: VCell, i: number) => any) {\r\n        if (row !== undefined) {\r\n            for (let i = 0; this.cells && i < this.cells[row].length; i++) {\r\n                callback(this.getCell(row, i), i);\r\n            }\r\n        }\r\n    }\r\n\r\n    private recalculateSpans(row: number, col: number) {\r\n        let td = this.getCell(row, col).td;\r\n        if (td) {\r\n            td.colSpan = this.countSpanLeft(row, col);\r\n            td.rowSpan = this.countSpanAbove(row, col);\r\n            if (td.colSpan == 1) {\r\n                td.removeAttribute('colSpan');\r\n            }\r\n            if (td.rowSpan == 1) {\r\n                td.removeAttribute('rowSpan');\r\n            }\r\n        }\r\n    }\r\n\r\n    private countSpanLeft(row: number, col: number) {\r\n        let result = 1;\r\n        for (let i = col + 1; this.cells && i < this.cells[row].length; i++) {\r\n            let cell = this.getCell(row, i);\r\n            if (cell.td || !cell.spanLeft) {\r\n                break;\r\n            }\r\n            result++;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private countSpanAbove(row: number, col: number) {\r\n        let result = 1;\r\n        for (let i = row + 1; this.cells && i < this.cells.length; i++) {\r\n            let cell = this.getCell(i, col);\r\n            if (cell.td || !cell.spanAbove) {\r\n                break;\r\n            }\r\n            result++;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private normalizeEmptyTableCells() {\r\n        for (let i = 0, row; (row = this.table.rows[i]); i++) {\r\n            for (let j = 0, cell; (cell = row.cells[j]); j++) {\r\n                if (cell) {\r\n                    if (!cell.innerHTML || !cell.innerHTML.trim()) {\r\n                        cell.appendChild(document.createElement('br'));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /* normalize width/height for each cell in the table */\r\n    public normalizeTableCellSize(zoomScale?: number | SizeTransformer) {\r\n        // remove width/height for each row\r\n        for (let i = 0, row; (row = this.table.rows[i]); i++) {\r\n            row.removeAttribute('width');\r\n            row.style.setProperty('width', null);\r\n            row.removeAttribute('height');\r\n            row.style.setProperty('height', null);\r\n        }\r\n\r\n        // set width/height for each cell\r\n        for (let i = 0; this.cells && i < this.cells.length; i++) {\r\n            for (let j = 0; j < this.cells[i].length; j++) {\r\n                const cell = this.cells[i][j];\r\n                if (cell) {\r\n                    const func =\r\n                        typeof zoomScale == 'number' ? (n: number) => n / zoomScale : zoomScale;\r\n                    const width = cell.width || 0;\r\n                    const height = cell.height || 0;\r\n\r\n                    setHTMLElementSizeInPx(\r\n                        cell.td,\r\n                        func?.(width) || width,\r\n                        func?.(height) || height\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private normalizeSize(sizeTransformer: SizeTransformer | undefined) {\r\n        this.normalizeEmptyTableCells();\r\n        this.normalizeTableCellSize(sizeTransformer);\r\n\r\n        const rect = this.table.getBoundingClientRect();\r\n\r\n        // Make sure table width/height is fixed to avoid shifting effect\r\n        setHTMLElementSizeInPx(\r\n            this.table,\r\n            sizeTransformer?.(rect.width) || rect.width,\r\n            sizeTransformer?.(rect.height) || rect.height\r\n        );\r\n    }\r\n}\r\n\r\nfunction setHTMLElementSizeInPx(\r\n    element: HTMLElement | null | undefined,\r\n    newWidth: number,\r\n    newHeight: number\r\n) {\r\n    if (!!element) {\r\n        element.removeAttribute('width');\r\n        element.removeAttribute('height');\r\n        element.style.boxSizing = 'border-box';\r\n        element.style.width = `${newWidth}px`;\r\n        element.style.height = `${newHeight}px`;\r\n    }\r\n}\r\n\r\nfunction getTableFromTd(td: HTMLTableCellElement) {\r\n    let result: Element | null = <HTMLElement>td;\r\n    for (; result && result.tagName != 'TABLE'; result = result.parentElement) {}\r\n    return <HTMLTableElement>result;\r\n}\r\n\r\n/**\r\n * Clone a table cell\r\n * @param cell The cell to clone\r\n */\r\nfunction cloneCell(cell: VCell): VCell {\r\n    return {\r\n        td: cloneNode(cell.td),\r\n        spanAbove: cell.spanAbove,\r\n        spanLeft: cell.spanLeft,\r\n    };\r\n}\r\n\r\n/**\r\n * Clone a node without its children.\r\n * @param node The node to clone\r\n */\r\nfunction cloneNode<T extends Node>(node: T | null | undefined): T | null {\r\n    let newNode = node ? <T>node.cloneNode(false /*deep*/) : null;\r\n    if (safeInstanceOf(newNode, 'HTMLTableCellElement')) {\r\n        newNode.removeAttribute('id');\r\n        if (!newNode.firstChild) {\r\n            newNode.appendChild(node!.ownerDocument!.createElement('br'));\r\n        }\r\n    }\r\n    return newNode;\r\n}\r\n","import changeElementTag from '../utils/changeElementTag';\nimport setColor from '../utils/setColor';\nimport { getTableCellMetadata } from './tableCellInfo';\nimport { TableBorderFormat } from 'roosterjs-editor-types';\nimport type { DarkColorHandler, TableFormat, VCell } from 'roosterjs-editor-types';\nconst TRANSPARENT = 'transparent';\nconst TABLE_CELL_TAG_NAME = 'TD';\nconst TABLE_HEADER_TAG_NAME = 'TH';\n\n/**\n * @internal\n * Apply the given table format to this virtual table\n * @param format Table format to apply\n * @param darkColorHandler An object to handle dark background colors, if not passed the cell background color will not be set\n */\nexport default function applyTableFormat(\n    table: HTMLTableElement,\n    cells: VCell[][],\n    format: Required<TableFormat>,\n    darkColorHandler?: DarkColorHandler | null\n) {\n    if (!format) {\n        return;\n    }\n    table.style.borderCollapse = 'collapse';\n    setBordersType(cells, format);\n    setCellFormat(cells, format, darkColorHandler);\n    setFirstColumnFormat(cells, format);\n    setHeaderRowFormat(cells, format, darkColorHandler);\n}\n\n/**\n * Check if the cell has shade\n * @param cell\n * @returns\n */\nfunction hasCellShade(cell: VCell) {\n    if (!cell.td) {\n        return false;\n    }\n\n    return !!getTableCellMetadata(cell.td)?.bgColorOverride;\n}\n\n/**\n * Check if the cell has vertical align\n * @param cell\n * @returns\n */\nfunction hasValign(cell: VCell) {\n    if (!cell.td) {\n        return false;\n    }\n\n    return !!getTableCellMetadata(cell.td)?.vAlignOverride;\n}\n\n/**\n * Set color and vertical align to the table\n * @param format the format that must be applied\n * @param darkColorHandler An object to handle dark background colors, if not passed the cell background color will not be set\n */\nfunction setCellFormat(\n    cells: VCell[][],\n    format: TableFormat,\n    darkColorHandler?: DarkColorHandler | null\n) {\n    const color = (index: number) => (index % 2 === 0 ? format.bgColorEven : format.bgColorOdd);\n    const { hasBandedRows, hasBandedColumns, bgColorOdd, bgColorEven } = format;\n    const shouldColorWholeTable = !hasBandedRows && bgColorOdd === bgColorEven ? true : false;\n    cells.forEach((row, index) => {\n        row.forEach(cell => {\n            if (cell.td) {\n                // Set cell color\n                if (!hasCellShade(cell)) {\n                    if (hasBandedRows) {\n                        const backgroundColor = color(index);\n                        setColor(\n                            cell.td,\n                            backgroundColor || TRANSPARENT,\n                            true /** isBackgroundColor*/,\n                            undefined /** isDarkMode **/,\n                            true /** shouldAdaptFontColor */,\n                            darkColorHandler\n                        );\n                    } else if (shouldColorWholeTable) {\n                        setColor(\n                            cell.td,\n                            format.bgColorOdd || TRANSPARENT,\n                            true /** isBackgroundColor*/,\n                            undefined /** isDarkMode **/,\n                            true /** shouldAdaptFontColor */,\n                            darkColorHandler\n                        );\n                    } else {\n                        setColor(\n                            cell.td,\n                            TRANSPARENT,\n                            true /** isBackgroundColor*/,\n                            undefined /** isDarkMode **/,\n                            true /** shouldAdaptFontColor */,\n                            darkColorHandler\n                        );\n                    }\n                }\n                // Set cell vertical align\n                if (format.verticalAlign && !hasValign(cell)) {\n                    cell.td.style.verticalAlign = format.verticalAlign;\n                }\n            }\n        });\n    });\n    if (hasBandedColumns) {\n        cells.forEach(row => {\n            row.forEach((cell, index) => {\n                const backgroundColor = color(index);\n                if (cell.td && backgroundColor && !hasCellShade(cell)) {\n                    setColor(\n                        cell.td,\n                        backgroundColor,\n                        true /** isBackgroundColor*/,\n                        undefined /** isDarkMode **/,\n                        true /** shouldAdaptFontColor */,\n                        darkColorHandler\n                    );\n                }\n            });\n        });\n    }\n}\n\n/**\n * Set color to borders of an table\n * @param format\n * @returns\n */\nfunction setBorderColors(td: HTMLTableCellElement, format: Partial<TableFormat>) {\n    td.style.borderTop = getBorderStyle(format.topBorderColor);\n    td.style.borderLeft = getBorderStyle(format.verticalBorderColor);\n    td.style.borderRight = getBorderStyle(format.verticalBorderColor);\n    td.style.borderBottom = getBorderStyle(format.bottomBorderColor);\n}\n\n/**\n * Format the border type\n * @returns\n */\nfunction formatBorders(\n    format: TableFormat,\n    td: HTMLTableCellElement,\n    isFirstRow: boolean,\n    isLastRow: boolean,\n    isFirstColumn: boolean,\n    isLastColumn: boolean\n) {\n    setBorderColors(td, format);\n    switch (format.tableBorderFormat) {\n        case TableBorderFormat.DEFAULT:\n            return;\n        case TableBorderFormat.LIST_WITH_SIDE_BORDERS:\n            if (!isFirstColumn) {\n                td.style.borderLeftColor = TRANSPARENT;\n            }\n            if (!isLastColumn) {\n                td.style.borderRightColor = TRANSPARENT;\n            }\n\n            break;\n        case TableBorderFormat.FIRST_COLUMN_HEADER_EXTERNAL:\n            if (!isFirstRow) {\n                td.style.borderTopColor = TRANSPARENT;\n            }\n\n            if (!isLastRow && !isFirstRow) {\n                td.style.borderBottomColor = TRANSPARENT;\n            }\n            if (!isFirstColumn) {\n                td.style.borderLeftColor = TRANSPARENT;\n            }\n            if (!isLastColumn && !isFirstColumn) {\n                td.style.borderRightColor = TRANSPARENT;\n            }\n            if (isFirstColumn && isFirstRow) {\n                td.style.borderRightColor = TRANSPARENT;\n            }\n\n            break;\n        case TableBorderFormat.NO_HEADER_BORDERS:\n            if (isFirstRow) {\n                td.style.borderTopColor = TRANSPARENT;\n                td.style.borderRightColor = TRANSPARENT;\n                td.style.borderLeftColor = TRANSPARENT;\n            }\n            if (isFirstColumn) {\n                td.style.borderLeftColor = TRANSPARENT;\n            }\n            if (isLastColumn) {\n                td.style.borderRightColor = TRANSPARENT;\n            }\n            break;\n        case TableBorderFormat.NO_SIDE_BORDERS:\n            if (isFirstColumn) {\n                td.style.borderLeftColor = TRANSPARENT;\n            }\n            if (isLastColumn) {\n                td.style.borderRightColor = TRANSPARENT;\n            }\n            break;\n        case TableBorderFormat.ESPECIAL_TYPE_1:\n            if (isFirstRow) {\n                td.style.borderRightColor = TRANSPARENT;\n                td.style.borderLeftColor = TRANSPARENT;\n            }\n            if (isFirstColumn) {\n                td.style.borderBottomColor = TRANSPARENT;\n                td.style.borderTopColor = TRANSPARENT;\n            }\n            if (isFirstRow && isFirstColumn) {\n                td.style.borderLeftColor = format.verticalBorderColor || TRANSPARENT;\n                td.style.borderBottomColor = format.bottomBorderColor || TRANSPARENT;\n                td.style.borderTopColor = format.topBorderColor || TRANSPARENT;\n            }\n            break;\n        case TableBorderFormat.ESPECIAL_TYPE_2:\n            if (isFirstRow) {\n                td.style.borderRightColor = TRANSPARENT;\n                td.style.borderLeftColor = TRANSPARENT;\n            }\n            if (isFirstColumn) {\n                td.style.borderBottomColor = TRANSPARENT;\n                td.style.borderTopColor = TRANSPARENT;\n            }\n            if (isFirstRow && isFirstColumn) {\n                td.style.borderLeftColor = format.verticalBorderColor || TRANSPARENT;\n                td.style.borderBottomColor = format.bottomBorderColor || TRANSPARENT;\n                td.style.borderTopColor = format.topBorderColor || TRANSPARENT;\n            }\n            if (!isFirstRow && !isFirstColumn) {\n                td.style.borderLeftColor = TRANSPARENT;\n                td.style.borderBottomColor = TRANSPARENT;\n                td.style.borderTopColor = TRANSPARENT;\n                td.style.borderRightColor = TRANSPARENT;\n            }\n\n            break;\n        case TableBorderFormat.ESPECIAL_TYPE_3:\n            if (isFirstRow) {\n                td.style.borderLeftColor = TRANSPARENT;\n                td.style.borderTopColor = TRANSPARENT;\n                td.style.borderRightColor = TRANSPARENT;\n            }\n            if (isFirstColumn) {\n                td.style.borderLeftColor = TRANSPARENT;\n                td.style.borderTopColor = TRANSPARENT;\n                td.style.borderBottomColor = TRANSPARENT;\n            }\n            if (!isFirstRow && !isFirstColumn) {\n                td.style.borderLeftColor = TRANSPARENT;\n                td.style.borderBottomColor = TRANSPARENT;\n                td.style.borderTopColor = TRANSPARENT;\n                td.style.borderRightColor = TRANSPARENT;\n            }\n            if (isFirstRow && isFirstColumn) {\n                td.style.borderBottomColor = format.bottomBorderColor || TRANSPARENT;\n            }\n            break;\n    }\n}\n\n/**\n * Organize the borders of table according to a border type\n * @param format\n * @returns\n */\nfunction setBordersType(cells: VCell[][], format: TableFormat) {\n    cells.forEach((row, rowIndex) => {\n        row.forEach((cell, cellIndex) => {\n            if (cell.td) {\n                formatBorders(\n                    format,\n                    cell.td,\n                    rowIndex === 0,\n                    rowIndex === cells.length - 1,\n                    cellIndex === 0,\n                    cellIndex === row.length - 1\n                );\n            }\n        });\n    });\n}\n\n/**\n * Apply custom design to the first table column\n * @param format\n * @returns\n */\nfunction setFirstColumnFormat(cells: VCell[][], format: Partial<TableFormat>) {\n    if (!format.hasFirstColumn) {\n        cells.forEach(row => {\n            row.forEach((cell, cellIndex) => {\n                if (cell.td && cellIndex === 0) {\n                    cell.td = changeElementTag(\n                        cell.td,\n                        TABLE_CELL_TAG_NAME\n                    ) as HTMLTableCellElement;\n                    cell.td.scope = '';\n                }\n            });\n        });\n        return;\n    }\n    cells.forEach((row, rowIndex) => {\n        row.forEach((cell, cellIndex) => {\n            if (cell.td && cellIndex === 0) {\n                if (rowIndex !== 0 && !hasCellShade(cell)) {\n                    cell.td.style.borderTopColor = TRANSPARENT;\n                    setColor(\n                        cell.td,\n                        TRANSPARENT,\n                        true /** isBackgroundColor*/,\n                        undefined /** isDarkMode **/,\n                        true /** shouldAdaptFontColor */\n                    );\n                }\n                if (rowIndex !== cells.length - 1 && rowIndex !== 0) {\n                    cell.td.style.borderBottomColor = TRANSPARENT;\n                }\n                cell.td = changeElementTag(cell.td, TABLE_HEADER_TAG_NAME) as HTMLTableCellElement;\n                cell.td.scope = 'col';\n            }\n        });\n    });\n}\n\n/**\n * Apply custom design to the Header Row\n * @param format\n * @param darkColorHandler An object to handle dark background colors, if not passed the cell background color will not be set\n * @returns\n */\nfunction setHeaderRowFormat(\n    cells: VCell[][],\n    format: TableFormat,\n    darkColorHandler?: DarkColorHandler | null\n) {\n    if (!format.hasHeaderRow) {\n        cells[0]?.forEach(cell => {\n            if (cell.td) {\n                cell.td = changeElementTag(cell.td, TABLE_CELL_TAG_NAME) as HTMLTableCellElement;\n                cell.td.scope = '';\n            }\n        });\n        return;\n    }\n    cells[0]?.forEach(cell => {\n        if (cell.td && format.headerRowColor) {\n            if (!hasCellShade(cell)) {\n                setColor(\n                    cell.td,\n                    format.headerRowColor,\n                    true /** isBackgroundColor*/,\n                    undefined /** isDarkMode **/,\n                    true /** shouldAdaptFontColor */,\n                    darkColorHandler\n                );\n            }\n            cell.td.style.borderRightColor = format.headerRowColor;\n            cell.td.style.borderLeftColor = format.headerRowColor;\n            cell.td.style.borderTopColor = format.headerRowColor;\n            cell.td = changeElementTag(cell.td, TABLE_HEADER_TAG_NAME) as HTMLTableCellElement;\n            cell.td.scope = 'row';\n        }\n    });\n}\n\nfunction getBorderStyle(style?: string | null) {\n    const color = style ? style : 'transparent';\n    return 'solid 1px ' + color;\n}\n","import { getTableCellMetadata, saveTableCellMetadata } from './tableCellInfo';\n/**\n * Clone css styles from a element an set to another.\n * @param cell cell that will receive the styles\n * @param styledCell cell where the styles will be clone\n */\n\nexport default function cloneCellStyles(\n    cell: HTMLTableCellElement,\n    styledCell: HTMLTableCellElement\n) {\n    const styles = styledCell.getAttribute('style');\n    if (styles) {\n        cell.setAttribute('style', styles);\n        const meta = getTableCellMetadata(styledCell);\n        if (meta) {\n            saveTableCellMetadata(cell, { ...meta });\n        }\n    }\n}\n","import type VTable from './VTable';\nimport type { TableSelection } from 'roosterjs-editor-types';\n\n/**\n * Check if the whole table is selected\n * @param vTable VTable to check whether all cells are selected\n * @param selection Table selection with first cell selected and last cell selected coordinates.\n * @returns\n */\nexport default function isWholeTableSelected(vTable: VTable, selection: TableSelection) {\n    if (!selection || !vTable.cells) {\n        return false;\n    }\n    const { firstCell, lastCell } = selection;\n    const rowsLength = vTable.cells.length - 1;\n    const rowCells = vTable.cells[rowsLength];\n    if (!rowCells) {\n        return false;\n    }\n    const colIndex = rowCells.length - 1;\n    const firstX = firstCell.x;\n    const firstY = firstCell.y;\n    const lastX = lastCell.x;\n    const lastY = lastCell.y;\n    return firstX == 0 && firstY == 0 && lastX == colIndex && lastY == rowsLength;\n}\n","import cloneCellStyles from './cloneCellStyles';\nimport moveChildNodes from '../utils/moveChildNodes';\nimport VTable from './VTable';\nimport { TableOperation } from 'roosterjs-editor-types';\nimport type { NodePosition } from 'roosterjs-editor-types';\n\n/**\n *\n * Pastes a table inside another, modifying the original to create a merged one\n * @param currentTd The cell where the cursor is in the table to paste into\n * @param rootNodeToInsert A Node containing the table to be inserted\n * @param position The position to paste the table\n * @param range The selected range of the table\n *\n * Position and range are here for when table selection allows to move pivot point\n */\nexport default function pasteTable(\n    currentTd: HTMLTableCellElement,\n    rootNodeToInsert: HTMLTableElement,\n    position?: NodePosition,\n    range?: Range\n) {\n    // This is the table on the clipboard\n    let newTable = new VTable(rootNodeToInsert);\n    // This table is already on the editor\n    let currentTable = new VTable(currentTd);\n\n    // Which cell in the currentTable is the cursor placed\n    let cursorRow = currentTable.row!;\n    let cursorCol = currentTable.col!;\n\n    // Total rows and columns of the final table\n    let rows = cursorRow + newTable.cells?.length! ?? 0;\n    let columns = cursorCol + newTable.cells?.[0].length! ?? 0;\n\n    // Add new rows\n    currentTable.row = currentTable.cells!.length! - 1;\n    while (currentTable.cells!.length! < rows) {\n        currentTable.edit(TableOperation.InsertBelow);\n    }\n\n    // Add new columns\n    currentTable.col = currentTable.cells![0].length! - 1;\n    while (currentTable.cells![0].length! < columns) {\n        currentTable.edit(TableOperation.InsertRight);\n    }\n\n    // Create final table\n    for (let i = cursorRow; i < rows; i++) {\n        for (let j = cursorCol; j < columns; j++) {\n            let cell = currentTable.getCell(i, j);\n            let newCell = newTable.getTd(i - cursorRow, j - cursorCol);\n            if (cell.td && newCell) {\n                moveChildNodes(cell.td, newCell);\n                cloneCellStyles(cell.td, newCell);\n            } else {\n                cell.td = document.createElement('td');\n            }\n        }\n    }\n\n    currentTable.writeBack();\n}\n","import { createBooleanDefinition, createObjectDefinition } from '../metadata/definitionCreators';\nimport { getMetadata, setMetadata } from '../metadata/metadata';\nimport type { TableCellMetadataFormat } from 'roosterjs-editor-types';\n\nconst BooleanDefinition = createBooleanDefinition(\n    true /** isOptional */,\n    undefined /** value */,\n    true /** allowNull */\n);\n\nconst TableCellFormatMetadata = createObjectDefinition<Required<TableCellMetadataFormat>>(\n    {\n        bgColorOverride: BooleanDefinition,\n        vAlignOverride: BooleanDefinition,\n    },\n    false /* isOptional */,\n    true /** allowNull */\n);\n\n/**\n * @internal\n * Get the format info of a table cell\n * @param cell The table cell to use\n */\nexport function getTableCellMetadata(cell: HTMLTableCellElement) {\n    return getMetadata(cell, TableCellFormatMetadata);\n}\n\n/**\n * Add metadata to a cell\n * @param cell The table cell to add the metadata\n * @param format The format of the table\n */\nexport function saveTableCellMetadata(cell: HTMLTableCellElement, format: TableCellMetadataFormat) {\n    if (cell && format) {\n        setMetadata(cell, format, TableCellFormatMetadata);\n    }\n}\n","import { getMetadata, setMetadata } from '../metadata/metadata';\nimport { TableBorderFormat } from 'roosterjs-editor-types';\nimport type { TableFormat } from 'roosterjs-editor-types';\nimport {\n    createBooleanDefinition,\n    createNumberDefinition,\n    createObjectDefinition,\n    createStringDefinition,\n} from '../metadata/definitionCreators';\n\nconst NullStringDefinition = createStringDefinition(\n    false /** isOptional */,\n    undefined /** value */,\n    true /** allowNull */\n);\n\nconst BooleanDefinition = createBooleanDefinition(false /** isOptional */);\n\nconst TableFormatMetadata = createObjectDefinition<Required<TableFormat>>(\n    {\n        topBorderColor: NullStringDefinition,\n        bottomBorderColor: NullStringDefinition,\n        verticalBorderColor: NullStringDefinition,\n        hasHeaderRow: BooleanDefinition,\n        headerRowColor: NullStringDefinition,\n        hasFirstColumn: BooleanDefinition,\n        hasBandedColumns: BooleanDefinition,\n        hasBandedRows: BooleanDefinition,\n        bgColorEven: NullStringDefinition,\n        bgColorOdd: NullStringDefinition,\n        tableBorderFormat: createNumberDefinition(\n            false /** isOptional */,\n            undefined /* value */,\n            TableBorderFormat.DEFAULT /* first table border format, TODO: Use Min/Max to specify valid values */,\n            TableBorderFormat.CLEAR /* last table border format, , TODO: Use Min/Max to specify valid values */\n        ),\n        keepCellShade: createBooleanDefinition(true /** isOptional */),\n        verticalAlign: NullStringDefinition,\n    },\n    false /* isOptional */,\n    true /** allowNull */\n);\n\n/**\n * Get the format info of a table\n * If the table does not have a info saved, it will be retrieved from the css styles\n * @param table The table that has the info\n */\nexport function getTableFormatInfo(table: HTMLTableElement) {\n    return getMetadata(table, TableFormatMetadata);\n}\n\n/**\n * @internal\n * Save the format info of a table\n * @param table The table the info will be saved\n * @param format The format of the table\n */\nexport function saveTableInfo(table: HTMLTableElement, format: TableFormat) {\n    if (table && format) {\n        setMetadata(table, format, TableFormatMetadata);\n    }\n}\n","import type { BrowserInfo } from 'roosterjs-editor-types';\r\n\r\nconst isAndroidRegex = /android/i;\r\n\r\n/**\r\n * Get current browser information from user agent string\r\n * @param userAgent The userAgent string of a browser\r\n * @param appVersion The appVersion string of a browser\r\n * @param vendor The vendor string of a browser\r\n * @returns The BrowserInfo object calculated from the given userAgent and appVersion\r\n */\r\nexport function getBrowserInfo(\r\n    userAgent: string,\r\n    appVersion: string,\r\n    vendor?: string\r\n): BrowserInfo {\r\n    // checks whether the browser is running in IE\r\n    // IE11 will use rv in UA instead of MSIE. Unfortunately Firefox also uses this. We should also look for \"Trident\" to confirm this.\r\n    // There have been cases where companies using older version of IE and custom UserAgents have broken this logic (e.g. IE 10 and KellyServices)\r\n    // therefore we should check that the Trident/rv combo is not just from an older IE browser\r\n    let isIE11OrGreater = userAgent.indexOf('rv:') != -1 && userAgent.indexOf('Trident') != -1;\r\n    let isIE = userAgent.indexOf('MSIE') != -1 || isIE11OrGreater;\r\n\r\n    // IE11+ may also have 'Chrome', 'Firefox' and 'Safari' in user agent. But it will have 'trident' as well\r\n    let isChrome = false;\r\n    let isFirefox = false;\r\n    let isSafari = false;\r\n    let isEdge = false;\r\n    let isWebKit = userAgent.indexOf('WebKit') != -1;\r\n    let isMobileOrTablet = false;\r\n\r\n    // Reference: http://detectmobilebrowsers.com/\r\n    // The default regex on the website doesn't consider tablet.\r\n    // To support tablet, add |android|ipad|playbook|silk to the first regex according to the info in /about page\r\n    ((userAgentOrVendor: string) => {\r\n        if (\r\n            /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\r\n                userAgentOrVendor\r\n            ) ||\r\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n                userAgentOrVendor.substr(0, 4)\r\n            )\r\n        ) {\r\n            isMobileOrTablet = true;\r\n        }\r\n    })(userAgent || vendor || '');\r\n\r\n    if (!isIE) {\r\n        isChrome = userAgent.indexOf('Chrome') != -1;\r\n        isFirefox = userAgent.indexOf('Firefox') != -1;\r\n        if (userAgent.indexOf('Safari') != -1) {\r\n            // Android and Chrome have Safari in the user string\r\n            isSafari = userAgent.indexOf('Chrome') == -1 && userAgent.indexOf('Android') == -1;\r\n        }\r\n\r\n        // Sample Edge UA: Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10121\r\n        isEdge = userAgent.indexOf('Edge') != -1;\r\n\r\n        // When it is edge, it should not be chrome or firefox. and it is also not webkit\r\n        if (isEdge) {\r\n            isWebKit = isChrome = isFirefox = false;\r\n        }\r\n    }\r\n\r\n    let isMac = appVersion.indexOf('Mac') != -1;\r\n    let isWin = appVersion.indexOf('Win') != -1 || appVersion.indexOf('NT') != -1;\r\n    let isAndroid = isAndroidRegex.test(userAgent);\r\n\r\n    return {\r\n        isMac,\r\n        isWin,\r\n        isWebKit,\r\n        isIE,\r\n        isIE11OrGreater,\r\n        isSafari,\r\n        isChrome,\r\n        isFirefox,\r\n        isEdge,\r\n        isIEOrEdge: isIE || isEdge,\r\n        isAndroid,\r\n        isMobileOrTablet,\r\n    };\r\n}\r\n\r\n/**\r\n * Browser object contains browser and operating system information of current environment\r\n */\r\nexport const Browser =\r\n    typeof window !== 'undefined' && window\r\n        ? getBrowserInfo(\r\n              window.navigator.userAgent,\r\n              window.navigator.appVersion,\r\n              window.navigator.vendor\r\n          )\r\n        : {};\r\n","import setColor from './setColor';\r\nimport type { DarkColorHandler, DefaultFormat } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Apply format to an HTML element\r\n * @param element The HTML element to apply format to\r\n * @param format The format to apply\r\n * @param isDarkMode Whether the content should be formatted in dark mode\r\n * @param darkColorHandler An optional dark color handler object. When it is passed, we will use this handler to do variable-based dark color instead of original dataset base dark color\r\n */\r\nexport default function applyFormat(\r\n    element: HTMLElement,\r\n    format: DefaultFormat,\r\n    isDarkMode?: boolean,\r\n    darkColorHandler?: DarkColorHandler | null\r\n) {\r\n    if (format) {\r\n        let elementStyle = element.style;\r\n        let {\r\n            fontFamily,\r\n            fontSize,\r\n            textColor,\r\n            textColors,\r\n            backgroundColor,\r\n            backgroundColors,\r\n            bold,\r\n            italic,\r\n            underline,\r\n        } = format;\r\n\r\n        if (fontFamily) {\r\n            elementStyle.fontFamily = fontFamily;\r\n        }\r\n        if (fontSize) {\r\n            elementStyle.fontSize = fontSize;\r\n        }\r\n\r\n        if (textColors) {\r\n            setColor(\r\n                element,\r\n                textColors,\r\n                false /*isBackground*/,\r\n                isDarkMode,\r\n                false /*shouldAdaptFontColor*/,\r\n                darkColorHandler\r\n            );\r\n        } else if (textColor) {\r\n            setColor(\r\n                element,\r\n                textColor,\r\n                false /*isBackground*/,\r\n                isDarkMode,\r\n                false /*shouldAdaptFontColor*/,\r\n                darkColorHandler\r\n            );\r\n        }\r\n\r\n        if (backgroundColors) {\r\n            setColor(\r\n                element,\r\n                backgroundColors,\r\n                true /*isBackground*/,\r\n                isDarkMode,\r\n                false /*shouldAdaptFontColor*/,\r\n                darkColorHandler\r\n            );\r\n        } else if (backgroundColor) {\r\n            setColor(\r\n                element,\r\n                backgroundColor,\r\n                true /*isBackground*/,\r\n                isDarkMode,\r\n                false /*shouldAdaptFontColor*/,\r\n                darkColorHandler\r\n            );\r\n        }\r\n\r\n        if (bold) {\r\n            elementStyle.fontWeight = 'bold';\r\n        }\r\n        if (italic) {\r\n            elementStyle.fontStyle = 'italic';\r\n        }\r\n        if (underline) {\r\n            elementStyle.textDecoration = 'underline';\r\n        }\r\n    }\r\n}\r\n","import getComputedStyles from './getComputedStyles';\r\nimport getTagOfNode from './getTagOfNode';\r\nimport moveChildNodes from './moveChildNodes';\r\n\r\n/**\r\n * Change tag of an HTML Element to a new one, and replace it from DOM tree\r\n * @param element The element to change tag\r\n * @param newTag New tag to change to\r\n * @returns The new element with new tag\r\n */\r\nexport default function changeElementTag<K extends keyof HTMLElementTagNameMap>(\r\n    element: HTMLElement,\r\n    newTag: K\r\n): HTMLElementTagNameMap[K];\r\n\r\n/**\r\n * Change tag of an HTML Element to a new one, and replace it from DOM tree\r\n * @param element The element to change tag\r\n * @param newTag New tag to change to\r\n * @returns The new element with new tag\r\n */\r\nexport default function changeElementTag(element: HTMLElement, newTag: string): HTMLElement | null;\r\n\r\nexport default function changeElementTag(element: HTMLElement, newTag: string): HTMLElement | null {\r\n    if (!element || !newTag) {\r\n        return null;\r\n    }\r\n\r\n    const origianlTag = getTagOfNode(element);\r\n\r\n    if (origianlTag == newTag.toUpperCase()) {\r\n        // Already in the target tag, no need to change\r\n        return element;\r\n    }\r\n\r\n    let newElement = element.ownerDocument.createElement(newTag);\r\n\r\n    for (let i = 0; i < element.attributes.length; i++) {\r\n        let attr = element.attributes[i];\r\n        newElement.setAttribute(attr.name, attr.value);\r\n    }\r\n\r\n    moveChildNodes(newElement, element);\r\n\r\n    if (origianlTag == 'P' || getTagOfNode(newElement) == 'P') {\r\n        [newElement.style.marginTop, newElement.style.marginBottom] = getComputedStyles(element, [\r\n            'margin-top',\r\n            'margin-bottom',\r\n        ]);\r\n    }\r\n\r\n    if (element.parentNode) {\r\n        element.parentNode.replaceChild(newElement, element);\r\n    }\r\n\r\n    return newElement;\r\n}\r\n","import contains from './contains';\r\nimport splitParentNode from './splitParentNode';\r\nimport toArray from '../jsUtils/toArray';\r\n\r\n/**\r\n * Collapse nodes within the given start and end nodes to their common ancestor node,\r\n * split parent nodes if necessary\r\n * @param root The root node of the scope\r\n * @param start The start node\r\n * @param end The end node\r\n * @param canSplitParent True to allow split parent node there are nodes before start or after end under the same parent\r\n * and the returned nodes will be all nodes from start through end after splitting\r\n * False to disallow split parent\r\n * @returns When canSplitParent is true, returns all node from start through end after splitting,\r\n * otherwise just return start and end\r\n */\r\nexport default function collapseNodes(\r\n    root: Node,\r\n    start: Node,\r\n    end: Node,\r\n    canSplitParent: boolean\r\n): Node[] {\r\n    if (!contains(root, start) || !contains(root, end)) {\r\n        return [];\r\n    }\r\n\r\n    start = collapse(root, start, end, true /*isStart*/, canSplitParent);\r\n    end = collapse(root, end, start, false /*isStart*/, canSplitParent);\r\n\r\n    if (contains(start, end, true /*treatSameNodeAsContain*/)) {\r\n        return [start];\r\n    } else if (contains(end, start)) {\r\n        return [end];\r\n    } else if (start.parentNode == end.parentNode) {\r\n        let nodes: Node[] = start.parentNode ? toArray(start.parentNode?.childNodes) : [];\r\n        let startIndex = nodes.indexOf(start);\r\n        let endIndex = nodes.indexOf(end);\r\n        return nodes.slice(startIndex, endIndex + 1);\r\n    } else {\r\n        return [start, end];\r\n    }\r\n}\r\n\r\n/**\r\n * @internal\r\n * Collapse a node by traversing its parent nodes until we get the common ancestor node of node and ref node\r\n * @param root Root node, traversing will be limited under this scope\r\n * @param node The node to collapse\r\n * @param ref Ref node. The result will be the nearest common ancestor node of the given node and this ref node\r\n * @param isStart Whether the given node is start of the sequence of nodes to collapse\r\n * @param canSplitParent Whether splitting parent node is allowed\r\n * @returns The common ancestor node of the given node ref node\r\n */\r\nexport function collapse(\r\n    root: Node,\r\n    node: Node,\r\n    ref: Node,\r\n    isStart: boolean,\r\n    canSplitParent: boolean\r\n): Node {\r\n    while (node.parentNode != root && !contains(node.parentNode, ref)) {\r\n        if ((isStart && node.previousSibling) || (!isStart && node.nextSibling)) {\r\n            if (!canSplitParent) {\r\n                break;\r\n            }\r\n            splitParentNode(node, isStart);\r\n        }\r\n\r\n        if (!node.parentNode) {\r\n            break;\r\n        }\r\n\r\n        node = node.parentNode;\r\n    }\r\n    return node;\r\n}\r\n","import safeInstanceOf from './safeInstanceOf';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Test if a node contains another node\r\n * @param container The container node\r\n * @param contained The node to check if it is inside container\r\n * @param treatSameNodeAsContain When container and contained are the same node,\r\n * return true if this param is set to true, otherwise return false. Default value is false\r\n * @returns True if contained is inside container, or they are the same node when treatSameNodeAsContain is true.\r\n * Otherwise false.\r\n */\r\nexport default function contains(\r\n    container: Node | null | undefined,\r\n    contained: Node | null | undefined,\r\n    treatSameNodeAsContain?: boolean\r\n): boolean;\r\n\r\n/**\r\n * Test if a node contains a given range\r\n * @param container The container node\r\n * @param contained The range to check if it is inside container\r\n * @returns True if contained is inside container, otherwise false\r\n */\r\nexport default function contains(\r\n    container: Node | null | undefined,\r\n    contained: Range | null | undefined\r\n): boolean;\r\n\r\nexport default function contains(\r\n    container: Node | null | undefined,\r\n    contained: Node | Range | null | undefined,\r\n    treatSameNodeAsContain?: boolean\r\n): boolean {\r\n    if (!container || !contained) {\r\n        return false;\r\n    }\r\n\r\n    if (treatSameNodeAsContain && container == contained) {\r\n        return true;\r\n    }\r\n\r\n    if (safeInstanceOf(contained, 'Range')) {\r\n        contained = contained && contained.commonAncestorContainer;\r\n        treatSameNodeAsContain = true;\r\n    }\r\n\r\n    if (contained && contained.nodeType == NodeType.Text) {\r\n        contained = contained.parentNode;\r\n        treatSameNodeAsContain = true;\r\n    }\r\n\r\n    if (container.nodeType != NodeType.Element && container.nodeType != NodeType.DocumentFragment) {\r\n        return !!treatSameNodeAsContain && container == contained;\r\n    }\r\n\r\n    return (\r\n        !!(treatSameNodeAsContain || container != contained) &&\r\n        internalContains(container, contained)\r\n    );\r\n}\r\n\r\nfunction internalContains(container: Node, contained: Node | null): boolean {\r\n    if (container.contains) {\r\n        return container.contains(contained);\r\n    } else {\r\n        while (contained) {\r\n            if (contained == container) {\r\n                return true;\r\n            }\r\n\r\n            contained = contained.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import getObjectKeys from '../jsUtils/getObjectKeys';\nimport safeInstanceOf from './safeInstanceOf';\nimport { Browser } from './Browser';\nimport { KnownCreateElementDataIndex } from 'roosterjs-editor-types';\nimport type { CreateElementData } from 'roosterjs-editor-types';\nimport type { CompatibleKnownCreateElementDataIndex } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * All known CreateElementData used by roosterjs to create elements\n */\nexport const KnownCreateElementData: Record<KnownCreateElementDataIndex, CreateElementData> = {\n    [KnownCreateElementDataIndex.None]: { tag: '' },\n\n    // Edge can sometimes lose current format when Enter to new line.\n    // So here we add an extra SPAN for Edge to workaround this bug\n    [KnownCreateElementDataIndex.EmptyLine]: Browser.isEdge\n        ? { tag: 'div', children: [{ tag: 'span', children: [{ tag: 'br' }] }] }\n        : { tag: 'div', children: [{ tag: 'br' }] },\n    [KnownCreateElementDataIndex.BlockquoteWrapper]: {\n        tag: 'blockquote',\n        style: 'margin-top:0;margin-bottom:0',\n    },\n    [KnownCreateElementDataIndex.CopyPasteTempDiv]: {\n        tag: 'div',\n        style:\n            'width: 600px; height: 1px; overflow: hidden; position: fixed; top: 0; left; 0; -webkit-user-select: text',\n        attributes: {\n            contenteditable: 'true',\n        },\n    },\n    [KnownCreateElementDataIndex.BlockListItem]: { tag: 'li', style: 'display:block' },\n    [KnownCreateElementDataIndex.ContextMenuWrapper]: {\n        tag: 'div',\n        style: 'position: fixed; width: 0; height: 0',\n    },\n    [KnownCreateElementDataIndex.ImageEditWrapper]: {\n        tag: 'span',\n        style: 'max-width:100%;position:relative',\n        children: [\n            {\n                tag: 'div',\n                style: 'width:100%;height:100%;position:relative;overflow:hidden',\n            },\n        ],\n    },\n    [KnownCreateElementDataIndex.TableHorizontalResizer]: {\n        tag: 'div',\n        style: 'position: fixed; cursor: row-resize; user-select: none',\n    },\n    [KnownCreateElementDataIndex.TableVerticalResizer]: {\n        tag: 'div',\n        style: 'position: fixed; cursor: col-resize; user-select: none',\n    },\n    [KnownCreateElementDataIndex.TableResizerLTR]: {\n        tag: 'div',\n        style: 'position: fixed; cursor: nw-resize; user-select: none; border: 1px solid #808080',\n    },\n    [KnownCreateElementDataIndex.TableResizerRTL]: {\n        tag: 'div',\n        style: 'position: fixed; cursor: ne-resize; user-select: none; border: 1px solid #808080',\n    },\n    [KnownCreateElementDataIndex.TableSelector]: {\n        tag: 'div',\n        style: 'position: fixed; cursor: all-scroll; user-select: none; border: 1px solid #808080',\n    },\n    [KnownCreateElementDataIndex.EmptyLineFormatInSpan]: {\n        tag: 'div',\n        children: [{ tag: 'span', children: [{ tag: 'br' }] }],\n    },\n};\n\n/**\n * Create DOM element from the given CreateElementData\n * @param elementData The CreateElementData or an index of a known CreateElementData used for creating this element\n * @param document The document to create the element from\n * @returns The root DOM element just created\n */\nexport default function createElement(\n    elementData:\n        | CreateElementData\n        | KnownCreateElementDataIndex\n        | CompatibleKnownCreateElementDataIndex,\n    document: Document\n): Element | null {\n    if (typeof elementData == 'number') {\n        elementData = KnownCreateElementData[elementData];\n    }\n\n    if (!elementData || !elementData.tag) {\n        return null;\n    }\n\n    const { tag, namespace, className, style, dataset, attributes, children } = elementData;\n    const result = namespace\n        ? document.createElementNS(namespace, tag)\n        : document.createElement(tag);\n\n    if (style) {\n        result.setAttribute('style', style);\n    }\n\n    if (className) {\n        result.className = className;\n    }\n\n    if (dataset && safeInstanceOf(result, 'HTMLElement')) {\n        getObjectKeys(dataset).forEach(datasetName => {\n            result.dataset[datasetName] = dataset[datasetName];\n        });\n    }\n\n    if (attributes) {\n        getObjectKeys(attributes).forEach(attrName => {\n            result.setAttribute(attrName, attributes[attrName]);\n        });\n    }\n\n    if (children) {\n        children.forEach(child => {\n            if (typeof child === 'string') {\n                result.appendChild(document.createTextNode(child));\n            } else if (child) {\n                const childElement = createElement(child, document);\n                if (childElement) {\n                    result.appendChild(childElement);\n                }\n            }\n        });\n    }\n\n    return result;\n}\n","import contains from './contains';\r\nimport matchesSelector from './matchesSelector';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Find closest element ancestor start from the given node which matches the given selector\r\n * @param node Find ancestor start from this node\r\n * @param root Root node where the search should stop at. The return value can never be this node\r\n * @param selector The expected selector. If null, return the first HTML Element found from start node\r\n * @returns An HTML element which matches the given selector. If the given start node matches the selector,\r\n * returns the given node\r\n */\r\nexport default function findClosestElementAncestor(\r\n    node: Node | null,\r\n    root?: Node,\r\n    selector?: string\r\n): HTMLElement | null {\r\n    node = !node ? null : node.nodeType == NodeType.Element ? node : node.parentNode;\r\n    let element = node && node.nodeType == NodeType.Element ? <HTMLElement>node : null;\r\n\r\n    if (element && selector) {\r\n        if (element.closest) {\r\n            element = element.closest(selector) as HTMLElement;\r\n        } else {\r\n            while (element && element != root && !matchesSelector(element, selector)) {\r\n                element = element.parentElement;\r\n            }\r\n        }\r\n    }\r\n\r\n    return !root || contains(root, element) ? element : null;\r\n}\r\n","import toArray from '../jsUtils/toArray';\r\n\r\n/**\r\n * @deprecated\r\n * Creates an HTML node array from html\r\n * @param html the html string to create HTML elements from\r\n * @param ownerDocument Owner document of the result HTML elements\r\n * @returns An HTML node array to represent the given html string\r\n */\r\nexport default function fromHtml(html: string, ownerDocument: HTMLDocument): Node[] {\r\n    let element = ownerDocument.createElement('DIV');\r\n    element.innerHTML = html;\r\n\r\n    return toArray(element.childNodes);\r\n}\r\n","import findClosestElementAncestor from './findClosestElementAncestor';\r\n\r\n/**\r\n * Get computed styles of a node\r\n * @param node The node to get computed styles from\r\n * @param styleNames Names of style to get, can be a single name or an array.\r\n * Default value is font-family, font-size, color, background-color\r\n * @returns An array of the computed styles\r\n */\r\nexport default function getComputedStyles(\r\n    node: Node,\r\n    styleNames: string | string[] = ['font-family', 'font-size', 'color', 'background-color']\r\n): string[] {\r\n    let element = findClosestElementAncestor(node);\r\n    let result: string[] = [];\r\n    styleNames = Array.isArray(styleNames) ? styleNames : [styleNames];\r\n    if (element) {\r\n        let win = element.ownerDocument.defaultView || window;\r\n        let styles = win.getComputedStyle(element);\r\n\r\n        if (styles) {\r\n            for (let style of styleNames) {\r\n                let value = styles.getPropertyValue(style) || '';\r\n                value = style != 'font-family' ? value.toLowerCase() : value;\r\n                value = style == 'font-size' ? px2Pt(value) : value;\r\n                result.push(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * A shortcut for getComputedStyles() when only one style is to be retrieved\r\n * @param node The node to get style from\r\n * @param styleName The style name\r\n * @returns The style value\r\n */\r\nexport function getComputedStyle(node: Node, styleName: string): string {\r\n    return getComputedStyles(node, styleName)[0] || '';\r\n}\r\n\r\nfunction px2Pt(px: string) {\r\n    if (px && px.indexOf('px') == px.length - 2) {\r\n        // Edge may not handle the floating computing well which causes the calculated value is a little less than actual value\r\n        // So add 0.05 to fix it\r\n        return Math.round(parseFloat(px) * 75 + 0.05) / 100 + 'pt';\r\n    }\r\n    return px;\r\n}\r\n","import safeInstanceOf from './safeInstanceOf';\n\n/**\n * Get innerHTML of the given node\n * @param node The DOM node to get innerHTML from\n */\nexport default function getInnerHTML(node: HTMLElement | DocumentFragment) {\n    if (safeInstanceOf(node, 'HTMLElement')) {\n        return node.innerHTML;\n    } else if (node) {\n        const tempNode = node.ownerDocument.createElement('span');\n        tempNode.appendChild(node.cloneNode(true /*deep*/));\n        return tempNode.innerHTML;\n    } else {\n        return '';\n    }\n}\n","import normalizeRect from './normalizeRect';\nimport type { Rect } from 'roosterjs-editor-types';\n\n/**\n * Get the intersected Rect of elements provided\n *\n * @example\n * The result of the following Elements Rects would be:\n    {\n        top: Element2.top,\n        bottom: Element1.bottom,\n        left: Element2.left,\n        right: Element2.right\n    }\n    +-------------------------+\n    | Element 1               |\n    |   +-----------------+   |\n    |   | Element2        |   |\n    |   |                 |   |\n    |   |                 |   |\n    +-------------------------+\n        |                 |\n        +-----------------+\n\n * @param elements Elements to use.\n * @param additionalRects additional rects to use\n * @returns If the Rect is valid return the rect, if not, return null.\n */\nexport default function getIntersectedRect(\n    elements: HTMLElement[],\n    additionalRects: Rect[] = []\n): Rect | null {\n    const rects = elements\n        .map(element => normalizeRect(element.getBoundingClientRect()))\n        .concat(additionalRects)\n        .filter(element => !!element) as Rect[];\n\n    const result: Rect = {\n        top: Math.max(...rects.map(r => r.top)),\n        bottom: Math.min(...rects.map(r => r.bottom)),\n        left: Math.max(...rects.map(r => r.left)),\n        right: Math.min(...rects.map(r => r.right)),\n    };\n\n    return result.top < result.bottom && result.left < result.right ? result : null;\n}\n","import shouldSkipNode from './shouldSkipNode';\r\nimport { getLeafSibling } from './getLeafSibling';\r\n\r\n/**\r\n * Get first/last leaf node of the given root node.\r\n * @param rootNode Root node to get leaf node from\r\n * @param isFirst True to get first leaf node, false to get last leaf node\r\n */\r\nfunction getLeafNode(rootNode: Node, isFirst: boolean): Node | null {\r\n    let getChild = (node: Node): Node | null => (isFirst ? node.firstChild : node.lastChild);\r\n    let result = getChild(rootNode);\r\n    while (result && getChild(result)) {\r\n        result = getChild(result);\r\n    }\r\n\r\n    if (result && shouldSkipNode(result)) {\r\n        result = getLeafSibling(rootNode, result, isFirst);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Get the first meaningful leaf node\r\n * @param rootNode Root node to get leaf node from\r\n */\r\nexport function getFirstLeafNode(rootNode: Node): Node | null {\r\n    return getLeafNode(rootNode, true /*isFirst*/);\r\n}\r\n\r\n/**\r\n * Get the last meaningful leaf node\r\n * @param rootNode Root node to get leaf node from\r\n */\r\nexport function getLastLeafNode(rootNode: Node): Node | null {\r\n    return getLeafNode(rootNode, false /*isFirst*/);\r\n}\r\n","import contains from './contains';\r\nimport getTagOfNode from './getTagOfNode';\r\nimport shouldSkipNode from './shouldSkipNode';\r\n\r\n/**\r\n * @internal\r\n * This walks forwards/backwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n * @param isNext True to get next leaf sibling node, false to get previous leaf sibling node\r\n * @param skipTags (Optional) tags that child elements will be skipped\r\n * @param ignoreSpace (Optional) Ignore pure space text node when check if the node should be skipped\r\n */\r\nexport function getLeafSibling(\r\n    rootNode: Node,\r\n    startNode: Node,\r\n    isNext: boolean,\r\n    skipTags?: string[],\r\n    ignoreSpace?: boolean\r\n): Node | null {\r\n    let result = null;\r\n    let getSibling = isNext\r\n        ? (node: Node | null) => node?.nextSibling || null\r\n        : (node: Node | null) => node?.previousSibling || null;\r\n    let getChild = isNext ? (node: Node) => node.firstChild : (node: Node) => node.lastChild;\r\n    if (contains(rootNode, startNode)) {\r\n        let curNode: Node | null = startNode;\r\n        let shouldContinue: boolean = true;\r\n\r\n        while (shouldContinue) {\r\n            // Find next/previous node, starting from next/previous sibling, then one level up to find next/previous sibling from parent\r\n            // till a non-null nextSibling/previousSibling is found or the ceiling is encountered (rootNode)\r\n            let parentNode = curNode?.parentNode || null;\r\n            curNode = getSibling(curNode);\r\n            while (!curNode && parentNode != rootNode) {\r\n                curNode = getSibling(parentNode);\r\n                parentNode = parentNode?.parentNode || null;\r\n            }\r\n\r\n            // Now traverse down to get first/last child\r\n            while (\r\n                curNode &&\r\n                (!skipTags || skipTags.indexOf(getTagOfNode(curNode)) < 0) &&\r\n                getChild(curNode)\r\n            ) {\r\n                curNode = getChild(curNode);\r\n            }\r\n\r\n            // Check special nodes (i.e. node that has a display:none etc.) and continue looping if so\r\n            shouldContinue = !!curNode && shouldSkipNode(curNode, ignoreSpace);\r\n            if (!shouldContinue) {\r\n                // Found a good leaf node, assign and exit\r\n                result = curNode;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * This walks forwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n * @param skipTags (Optional) tags that child elements will be skipped\r\n */\r\nexport function getNextLeafSibling(\r\n    rootNode: Node,\r\n    startNode: Node,\r\n    skipTags?: string[]\r\n): Node | null {\r\n    return getLeafSibling(rootNode, startNode, true /*isNext*/, skipTags);\r\n}\r\n\r\n/**\r\n * This walks backwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n * @param skipTags (Optional) tags that child elements will be skipped\r\n */\r\nexport function getPreviousLeafSibling(\r\n    rootNode: Node,\r\n    startNode: Node,\r\n    skipTags?: string[]\r\n): Node | null {\r\n    return getLeafSibling(rootNode, startNode, false /*isNext*/, skipTags);\r\n}\r\n","import getObjectKeys from '../jsUtils/getObjectKeys';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport type { PendableFormatState } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Names of Pendable formats\r\n */\r\nexport type PendableFormatNames = keyof PendableFormatState;\r\n\r\n/**\r\n * A map from pendable format name to document command\r\n */\r\nexport const PendableFormatCommandMap: { [key in PendableFormatNames]: DocumentCommand } = {\r\n    /**\r\n     * Bold\r\n     */\r\n    isBold: DocumentCommand.Bold,\r\n\r\n    /**\r\n     * Italic\r\n     */\r\n    isItalic: DocumentCommand.Italic,\r\n\r\n    /**\r\n     * Underline\r\n     */\r\n    isUnderline: DocumentCommand.Underline,\r\n\r\n    /**\r\n     * StrikeThrough\r\n     */\r\n    isStrikeThrough: DocumentCommand.StrikeThrough,\r\n\r\n    /**\r\n     * Subscript\r\n     */\r\n    isSubscript: DocumentCommand.Subscript,\r\n\r\n    /**\r\n     * Superscript\r\n     */\r\n    isSuperscript: DocumentCommand.Superscript,\r\n};\r\n\r\n/**\r\n * Get Pendable Format State at cursor.\r\n * @param document The HTML Document to get format state from\r\n * @returns A PendableFormatState object which contains the values of pendable format states\r\n */\r\nexport default function getPendableFormatState(document: Document): PendableFormatState {\r\n    let keys = getObjectKeys(PendableFormatCommandMap);\r\n\r\n    return keys.reduce((state, key) => {\r\n        state[key] = document.queryCommandState(PendableFormatCommandMap[key]);\r\n        return state;\r\n    }, <PendableFormatState>{});\r\n}\r\n","import { NodeType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get the html tag of a node, or empty if it is not an element\r\n * @param node The node to get tag of\r\n * @returns Tag name in upper case if the given node is an Element, or empty string otherwise\r\n */\r\nexport default function getTagOfNode(node: Node | null): string {\r\n    return node && node.nodeType == NodeType.Element ? (<Element>node).tagName.toUpperCase() : '';\r\n}\r\n","import getTagOfNode from './getTagOfNode';\r\n\r\nconst BLOCK_ELEMENT_TAGS = 'ADDRESS,ARTICLE,ASIDE,BLOCKQUOTE,CANVAS,DD,DIV,DL,DT,FIELDSET,FIGCAPTION,FIGURE,FOOTER,FORM,H1,H2,H3,H4,H5,H6,HEADER,HR,LI,MAIN,NAV,NOSCRIPT,OL,OUTPUT,P,PRE,SECTION,TABLE,TD,TH,TFOOT,UL,VIDEO'.split(\r\n    ','\r\n);\r\nconst BLOCK_DISPLAY_STYLES = ['block', 'list-item', 'table-cell'];\r\n\r\n/**\r\n * Checks if the node is a block like element. Block like element are usually those P, DIV, LI, TD etc.\r\n * @param node The node to check\r\n * @returns True if the node is a block element, otherwise false\r\n */\r\nexport default function isBlockElement(node: Node): node is HTMLElement {\r\n    let tag = getTagOfNode(node);\r\n    return !!(\r\n        tag &&\r\n        (BLOCK_DISPLAY_STYLES.indexOf((<HTMLElement>node).style.display) >= 0 ||\r\n            BLOCK_ELEMENT_TAGS.indexOf(tag) >= 0)\r\n    );\r\n}\r\n","import { DocumentPosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Checks if node1 is after node2\r\n * @param node1 The node to check if it is after another node\r\n * @param node2 The node to check if another node is after this one\r\n * @returns True if node1 is after node2, otherwise false\r\n */\r\nexport default function isNodeAfter(node1: Node, node2: Node): boolean {\r\n    return !!(\r\n        node1 &&\r\n        node2 &&\r\n        (node2.compareDocumentPosition(node1) & DocumentPosition.Following) ==\r\n            DocumentPosition.Following\r\n    );\r\n}\r\n","import getTagOfNode from './getTagOfNode';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\nconst VISIBLE_ELEMENT_TAGS = ['IMG'];\r\nconst VISIBLE_CHILD_ELEMENT_SELECTOR = ['TABLE', 'IMG', 'LI'].join(',');\r\nconst ZERO_WIDTH_SPACE = /\\u200b/g;\r\n\r\n/**\r\n * Check if a given node has no visible content\r\n * @param node The node to check\r\n * @param trimContent Whether trim the text content so that spaces will be treated as empty.\r\n * Default value is false\r\n * @returns True if there isn't any visible element inside node, otherwise false\r\n */\r\nexport default function isNodeEmpty(\r\n    node: Node,\r\n    trimContent?: boolean,\r\n    shouldCountBrAsVisible?: boolean\r\n) {\r\n    if (!node) {\r\n        return false;\r\n    } else if (node.nodeType == NodeType.Text) {\r\n        return trim(node.nodeValue || '', trimContent) == '';\r\n    } else if (node.nodeType == NodeType.Element) {\r\n        let element = node as Element;\r\n        let textContent = trim(element.textContent || '', trimContent);\r\n        const visibleSelector = shouldCountBrAsVisible\r\n            ? `${VISIBLE_CHILD_ELEMENT_SELECTOR},BR`\r\n            : VISIBLE_CHILD_ELEMENT_SELECTOR;\r\n        if (\r\n            textContent != '' ||\r\n            VISIBLE_ELEMENT_TAGS.indexOf(getTagOfNode(element)) >= 0 ||\r\n            element.querySelectorAll(visibleSelector)[0]\r\n        ) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction trim(s: string, trim: boolean | undefined) {\r\n    s = s.replace(ZERO_WIDTH_SPACE, '');\r\n    return trim ? s.trim() : s;\r\n}\r\n","import getTagOfNode from './getTagOfNode';\r\n\r\n/**\r\n * HTML void elements\r\n * Per https://www.w3.org/TR/html/syntax.html#syntax-elements, cannot have child nodes\r\n * This regex is used when we move focus to very begin of editor. We should avoid putting focus inside\r\n * void elements so users don't accidentally create child nodes in them\r\n */\r\nconst HTML_VOID_ELEMENTS = 'AREA,BASE,BR,COL,COMMAND,EMBED,HR,IMG,INPUT,KEYGEN,LINK,META,PARAM,SOURCE,TRACK,WBR'.split(\r\n    ','\r\n);\r\n\r\n/**\r\n * Check if the given node is html void element. Void element cannot have children\r\n * @param node The node to check\r\n */\r\nexport default function isVoidHtmlElement(node: Node): boolean {\r\n    return !!node && HTML_VOID_ELEMENTS.indexOf(getTagOfNode(node)) >= 0;\r\n}\r\n","import getObjectKeys from '../jsUtils/getObjectKeys';\r\nimport type { LinkData } from 'roosterjs-editor-types';\r\n\r\ninterface LinkMatchRule {\r\n    match: RegExp;\r\n    except?: RegExp;\r\n    normalizeUrl?: (url: string) => string;\r\n}\r\n\r\n// http exclude matching regex\r\n// invalid URL example (in particular on IE and Edge):\r\n// - http://www.bing.com%00, %00 before ? (question mark) is considered invalid. IE/Edge throws invalid argument exception\r\n// - http://www.bing.com%1, %1 is invalid\r\n// - http://www.bing.com%g, %g is invalid (IE and Edge expects a two hex value after a %)\r\n// - http://www.bing.com%, % as ending is invalid (IE and Edge expects a two hex value after a %)\r\n// All above % cases if they're after ? (question mark) is then considered valid again\r\n// Similar for @, it needs to be after / (forward slash), or ? (question mark). Otherwise IE/Edge will throw security exception\r\n// - http://www.bing.com@name, @name before ? (question mark) is considered invalid\r\n// - http://www.bing.com/@name, is valid sine it is after / (forward slash)\r\n// - http://www.bing.com?@name, is also valid since it is after ? (question mark)\r\n// The regex below is essentially a break down of:\r\n// ^[^?]+%[^0-9a-f]+ => to exclude URL like www.bing.com%%\r\n// ^[^?]+%[0-9a-f][^0-9a-f]+ => to exclude URL like www.bing.com%1\r\n// ^[^?]+%00 => to exclude URL like www.bing.com%00\r\n// ^[^?]+%$ => to exclude URL like www.bing.com%\r\n// ^https?:\\/\\/[^?\\/]+@ => to exclude URL like http://www.bing.com@name\r\n// ^www\\.[^?\\/]+@ => to exclude URL like www.bing.com@name\r\n// , => to exclude url like www.bing,,com\r\nconst httpExcludeRegEx = /^[^?]+%[^0-9a-f]+|^[^?]+%[0-9a-f][^0-9a-f]+|^[^?]+%00|^[^?]+%$|^https?:\\/\\/[^?\\/]+@|^www\\.[^?\\/]+@/i;\r\n\r\n// via https://tools.ietf.org/html/rfc1035 Page 7\r\nconst labelRegEx = '[a-z0-9](?:[a-z0-9-]*[a-z0-9])?'; // We're using case insensitive regexps below so don't bother including A-Z\r\nconst domainNameRegEx = `(?:${labelRegEx}\\\\.)*${labelRegEx}`;\r\nconst domainPortRegEx = `${domainNameRegEx}(?:\\\\:[0-9]+)?`;\r\nconst domainPortWithUrlRegEx = `${domainPortRegEx}(?:[\\\\/\\\\?]\\\\S*)?`;\r\n\r\nconst linkMatchRules: Record<string, LinkMatchRule> = {\r\n    http: {\r\n        match: new RegExp(\r\n            `^(?:microsoft-edge:)?http:\\\\/\\\\/${domainPortWithUrlRegEx}|www\\\\.${domainPortWithUrlRegEx}`,\r\n            'i'\r\n        ),\r\n        except: httpExcludeRegEx,\r\n        normalizeUrl: url =>\r\n            new RegExp('^(?:microsoft-edge:)?http:\\\\/\\\\/', 'i').test(url) ? url : 'http://' + url,\r\n    },\r\n    https: {\r\n        match: new RegExp(`^(?:microsoft-edge:)?https:\\\\/\\\\/${domainPortWithUrlRegEx}`, 'i'),\r\n        except: httpExcludeRegEx,\r\n    },\r\n    mailto: { match: new RegExp('^mailto:\\\\S+@\\\\S+\\\\.\\\\S+', 'i') },\r\n    notes: { match: new RegExp('^notes:\\\\/\\\\/\\\\S+', 'i') },\r\n    file: { match: new RegExp('^file:\\\\/\\\\/\\\\/?\\\\S+', 'i') },\r\n    unc: { match: new RegExp('^\\\\\\\\\\\\\\\\\\\\S+', 'i') },\r\n    ftp: {\r\n        match: new RegExp(\r\n            `^ftp:\\\\/\\\\/${domainPortWithUrlRegEx}|ftp\\\\.${domainPortWithUrlRegEx}`,\r\n            'i'\r\n        ),\r\n        normalizeUrl: url => (new RegExp('^ftp:\\\\/\\\\/', 'i').test(url) ? url : 'ftp://' + url),\r\n    },\r\n    news: { match: new RegExp(`^news:(\\\\/\\\\/)?${domainPortWithUrlRegEx}`, 'i') },\r\n    telnet: { match: new RegExp(`^telnet:(\\\\/\\\\/)?${domainPortWithUrlRegEx}`, 'i') },\r\n    gopher: { match: new RegExp(`^gopher:\\\\/\\\\/${domainPortWithUrlRegEx}`, 'i') },\r\n    wais: { match: new RegExp(`^wais:(\\\\/\\\\/)?${domainPortWithUrlRegEx}`, 'i') },\r\n};\r\n\r\n/**\r\n * Try to match a given string with link match rules, return matched link\r\n * @param url Input url to match\r\n * @param option Link match option, exact or partial. If it is exact match, we need\r\n * to check the length of matched link and url\r\n * @param rules Optional link match rules, if not passed, only the default link match\r\n * rules will be applied\r\n * @returns The matched link data, or null if no match found.\r\n * The link data includes an original url and a normalized url\r\n */\r\nexport default function matchLink(url: string): LinkData | null {\r\n    if (url) {\r\n        for (let schema of getObjectKeys(linkMatchRules)) {\r\n            let rule = linkMatchRules[schema];\r\n            let matches = url.match(rule.match);\r\n            if (matches && matches[0] == url && (!rule.except || !rule.except.test(url))) {\r\n                return {\r\n                    scheme: schema,\r\n                    originalUrl: url,\r\n                    normalizedUrl: rule.normalizeUrl ? rule.normalizeUrl(url) : url,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","import safeInstanceOf from './safeInstanceOf';\n\n/**\n * Type definition of HTMLElement interface for IE\n */\ninterface HTMLElementForIE extends HTMLElement {\n    /**\n     * IE implementation of Element.matches() function\n     *\n     */\n    msMatchesSelector: (selector: string) => boolean;\n}\n\n/**\n * A wrapper function of Element.matches\n * @param element The element to match\n * @param selector The selector to match\n */\nexport default function matchesSelector(element: Node, selector: string): boolean {\n    return (\n        safeInstanceOf(element, 'HTMLElement') &&\n        (element.matches || (<HTMLElementForIE>element).msMatchesSelector).call(element, selector)\n    );\n}\n","/**\n * Replace all child nodes of the given target node to the child nodes of source node.\n * @param target Target node, all child nodes of this node will be removed if keepExistingChildren is not set to true\n * @param source (Optional) source node, all child nodes of this node will be move to target node\n * @param keepExistingChildren (Optional) When set to true, all existing child nodes of target will be kept\n */\nexport default function moveChildNodes(\n    target: Node,\n    source?: Node,\n    keepExistingChildren?: boolean\n) {\n    if (!target) {\n        return;\n    }\n\n    while (!keepExistingChildren && target.firstChild) {\n        target.removeChild(target.firstChild);\n    }\n\n    while (source?.firstChild) {\n        target.appendChild(source.firstChild);\n    }\n}\n","import type { Rect } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * A ClientRect of all 0 is possible. i.e. chrome returns a ClientRect of 0 when the cursor is on an empty p\r\n * We validate that and only return a rect when the passed in ClientRect is valid\r\n */\r\nexport default function normalizeRect(clientRect: DOMRect): Rect | null {\r\n    let { left, right, top, bottom } =\r\n        clientRect || <DOMRect>{ left: 0, right: 0, top: 0, bottom: 0 };\r\n    return left === 0 && right === 0 && top === 0 && bottom === 0\r\n        ? null\r\n        : {\r\n              left: Math.round(left),\r\n              right: Math.round(right),\r\n              top: Math.round(top),\r\n              bottom: Math.round(bottom),\r\n          };\r\n}\r\n","const HEX3_REGEX = /^#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/;\nconst HEX6_REGEX = /^#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/;\nconst RGB_REGEX = /^rgb\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*\\)$/;\nconst RGBA_REGEX = /^rgba\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\n/**\n * Parse color string to r/g/b value.\n * If the given color is not in a recognized format, return null\n */\nexport default function parseColor(color: string): [number, number, number] | null {\n    color = (color || '').trim();\n\n    let match: RegExpMatchArray | null;\n    if ((match = color.match(HEX3_REGEX))) {\n        return [\n            parseInt(match[1] + match[1], 16),\n            parseInt(match[2] + match[2], 16),\n            parseInt(match[3] + match[3], 16),\n        ];\n    } else if ((match = color.match(HEX6_REGEX))) {\n        return [parseInt(match[1], 16), parseInt(match[2], 16), parseInt(match[3], 16)];\n    } else if ((match = color.match(RGB_REGEX) || color.match(RGBA_REGEX))) {\n        return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n    } else {\n        // CSS color names such as red, green is not included for now.\n        // If need, we can add those colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n        return null;\n    }\n}\n","import toArray from '../jsUtils/toArray';\r\nimport { DocumentPosition, NodeType, QueryScope } from 'roosterjs-editor-types';\r\nimport type { CompatibleQueryScope } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Query HTML elements in the container by a selector string\r\n * @param container Container element to query from\r\n * @param selector Selector string to query\r\n * @param forEachCallback An optional callback to be invoked on each node in query result\r\n * @param scope The scope of the query, default value is QueryScope.Body\r\n * @param range The selection range to query with. This is required when scope is not Body\r\n * @returns HTML Element array of the query result\r\n */\r\nexport default function queryElements(\r\n    container: ParentNode,\r\n    selector: string,\r\n    forEachCallback?: ((node: HTMLElement) => any) | null,\r\n    scope: QueryScope | CompatibleQueryScope = QueryScope.Body,\r\n    range?: Range\r\n): HTMLElement[] {\r\n    if (!container || !selector) {\r\n        return [];\r\n    }\r\n\r\n    let elements = toArray(container.querySelectorAll<HTMLElement>(selector));\r\n\r\n    if (scope != QueryScope.Body && range) {\r\n        let { startContainer, startOffset, endContainer, endOffset } = range;\r\n        if (startContainer.nodeType == NodeType.Element && startContainer.firstChild) {\r\n            const child = startContainer.childNodes[startOffset];\r\n\r\n            // range.startOffset can give a value of child.length+1 when selection is after the last child\r\n            // In that case we will use the last child instead\r\n            startContainer = child || startContainer.lastChild;\r\n        }\r\n\r\n        endContainer =\r\n            endContainer.nodeType == NodeType.Element && endContainer.firstChild && endOffset > 0\r\n                ? endContainer.childNodes[endOffset - 1]\r\n                : endContainer;\r\n\r\n        elements = elements.filter(element =>\r\n            isIntersectWithNodeRange(\r\n                element,\r\n                startContainer,\r\n                endContainer,\r\n                scope == QueryScope.InSelection\r\n            )\r\n        );\r\n    }\r\n\r\n    if (forEachCallback) {\r\n        elements.forEach(forEachCallback);\r\n    }\r\n    return elements;\r\n}\r\n\r\nfunction isIntersectWithNodeRange(\r\n    node: Node,\r\n    startNode: Node,\r\n    endNode: Node,\r\n    nodeContainedByRangeOnly: boolean\r\n): boolean {\r\n    let startPosition = node.compareDocumentPosition(startNode);\r\n    let endPosition = node.compareDocumentPosition(endNode);\r\n    let targetPositions = [DocumentPosition.Same, DocumentPosition.Contains];\r\n\r\n    if (!nodeContainedByRangeOnly) {\r\n        targetPositions.push(DocumentPosition.ContainedBy);\r\n    }\r\n\r\n    return (\r\n        checkPosition(startPosition, targetPositions) || // intersectStart\r\n        checkPosition(endPosition, targetPositions) || // intersectEnd\r\n        (checkPosition(startPosition, [DocumentPosition.Preceding]) && // Contains\r\n            checkPosition(endPosition, [DocumentPosition.Following]) &&\r\n            !checkPosition(endPosition, [DocumentPosition.ContainedBy]))\r\n    );\r\n}\r\n\r\nfunction checkPosition(position: DocumentPosition, targets: DocumentPosition[]): boolean {\r\n    return targets.some(target =>\r\n        target == DocumentPosition.Same\r\n            ? position == DocumentPosition.Same\r\n            : (position & target) == target\r\n    );\r\n}\r\n","/**\n * Read a file object and invoke a callback function with the data url of this file\n * @param file The file to read\n * @param callback the callback to invoke with data url of the file.\n * If fail to read, dataUrl will be null\n */\nexport default function readFile(file: File, callback: (dataUrl: string | null) => void) {\n    if (file) {\n        const reader = new FileReader();\n        reader.onload = () => {\n            callback(reader.result as string);\n        };\n        reader.onerror = () => {\n            callback(null);\n        };\n        reader.readAsDataURL(file);\n    }\n}\n","import type { TargetWindow } from 'roosterjs-editor-types';\n\n// NOTE: Type TargetWindow is an auto-generated type.\n// Run node ./tools/generateTargetWindow.js to generate it.\n\n/**\n * @internal Export for test only\n * Try get window from the given node or range\n * @param node Source node to get window from\n */\nexport function getTargetWindow<T extends TargetWindow = TargetWindow>(node: Node): T {\n    const document =\n        node &&\n        (node.ownerDocument ||\n            (Object.prototype.toString.apply(node) == '[object HTMLDocument]'\n                ? <Document>node\n                : null));\n\n    // If document exists but document.defaultView doesn't exist, it is a detached object, just use current window instead\n    const targetWindow = document && ((document.defaultView || window) as any);\n    return targetWindow as T;\n}\n\n/**\n * Check if the given object is instance of the target type\n * @param obj Object to check\n * @param typeName Target type name\n */\nexport default function safeInstanceOf<T extends keyof W, W extends TargetWindow = TargetWindow>(\n    obj: any,\n    typeName: T\n): obj is W[T] {\n    if (typeName == 'Range') {\n        return (\n            Object.prototype.toString.apply(obj) == '[object Range]' &&\n            !!(<Range>obj)?.commonAncestorContainer\n        );\n    }\n\n    const targetWindow = getTargetWindow<W>(obj);\n    const targetType = targetWindow && (targetWindow[typeName] as any);\n    const mainWindow = (window as any) as W;\n    const mainWindowType = mainWindow && (mainWindow[typeName] as any);\n    return (\n        (mainWindowType && obj instanceof mainWindowType) ||\n        (targetType && obj instanceof targetType)\n    );\n}\n","import parseColor from './parseColor';\nimport type { DarkColorHandler, ModeIndependentColor } from 'roosterjs-editor-types';\n\nconst WHITE = '#ffffff';\nconst GRAY = '#333333';\nconst BLACK = '#000000';\nconst TRANSPARENT = 'transparent';\nconst enum ColorTones {\n    BRIGHT,\n    DARK,\n    NONE,\n}\n\n//Using the HSL (hue, saturation and lightness) representation for RGB color values, if the value of the lightness is less than 20, the color is dark\nconst DARK_COLORS_LIGHTNESS = 20;\n//If the value of the lightness is more than 80, the color is bright\nconst BRIGHT_COLORS_LIGHTNESS = 80;\n\n/**\n * Set text color or background color to the given element\n * @param element The element to set color to\n * @param color The color to set, it can be a string of color name/value or a ModeIndependentColor object\n * @param isBackgroundColor Whether set background color or text color\n * @param isDarkMode Whether current mode is dark mode. @default false\n * @param shouldAdaptTheFontColor Whether the font color needs to be adapted to be visible in a dark or bright background color. @default false\n * @param darkColorHandler A dark color handler object. This is now required.\n * We keep it optional only for backward compatibility. If it is not passed, color will not be set.\n */\nexport default function setColor(\n    element: HTMLElement,\n    color: string | ModeIndependentColor,\n    isBackgroundColor: boolean,\n    isDarkMode?: boolean,\n    shouldAdaptTheFontColor?: boolean,\n    darkColorHandler?: DarkColorHandler | null\n) {\n    const colorString = typeof color === 'string' ? color.trim() : '';\n    const modeIndependentColor = typeof color === 'string' ? null : color;\n    const cssName = isBackgroundColor ? 'background-color' : 'color';\n\n    if (colorString || modeIndependentColor) {\n        if (darkColorHandler) {\n            const colorValue = darkColorHandler.registerColor(\n                modeIndependentColor?.lightModeColor || colorString,\n                !!isDarkMode,\n                modeIndependentColor?.darkModeColor\n            );\n\n            element.style.setProperty(cssName, colorValue);\n        }\n\n        if (isBackgroundColor && shouldAdaptTheFontColor) {\n            adaptFontColorToBackgroundColor(\n                element,\n                modeIndependentColor?.lightModeColor || colorString,\n                isDarkMode,\n                darkColorHandler\n            );\n        }\n    }\n}\n\n/**\n * Change the font color to white or some other color, so the text can be visible with a darker background\n * @param element The element that contains text.\n * @param lightModeBackgroundColor Existing background color in light mode\n * @param isDarkMode Whether the content is in dark mode\n * @param darkColorHandler A dark color handler object.  This is now required.\n * We keep it optional only for backward compatibility. If it is not passed, color will not be set.\n */\nfunction adaptFontColorToBackgroundColor(\n    element: HTMLElement,\n    lightModeBackgroundColor: string,\n    isDarkMode?: boolean,\n    darkColorHandler?: DarkColorHandler | null\n) {\n    if (!lightModeBackgroundColor || lightModeBackgroundColor === TRANSPARENT) {\n        return;\n    }\n\n    const isADarkOrBrightOrNone = isADarkOrBrightColor(lightModeBackgroundColor!);\n\n    switch (isADarkOrBrightOrNone) {\n        case ColorTones.DARK:\n            const fontForDark: ModeIndependentColor = {\n                lightModeColor: WHITE,\n                darkModeColor: GRAY,\n            };\n            setColor(\n                element,\n                fontForDark,\n                false /*isBackground*/,\n                isDarkMode,\n                false /*shouldAdaptFontColor*/,\n                darkColorHandler\n            );\n            break;\n        case ColorTones.BRIGHT:\n            const fontForLight: ModeIndependentColor = {\n                lightModeColor: BLACK,\n                darkModeColor: WHITE,\n            };\n            setColor(\n                element,\n                fontForLight,\n                false /*isBackground*/,\n                isDarkMode,\n                false /*shouldAdaptFontColor*/,\n                darkColorHandler\n            );\n            break;\n    }\n}\n\nfunction isADarkOrBrightColor(color: string): ColorTones {\n    let lightness = calculateLightness(color);\n    if (lightness < DARK_COLORS_LIGHTNESS) {\n        return ColorTones.DARK;\n    } else if (lightness > BRIGHT_COLORS_LIGHTNESS) {\n        return ColorTones.BRIGHT;\n    }\n\n    return ColorTones.NONE;\n}\n\n/**\n * Calculate the lightness of HSL (hue, saturation and lightness) representation\n * @param color a RBG or RGBA COLOR\n * @returns\n */\nfunction calculateLightness(color: string) {\n    const colorValues = parseColor(color);\n\n    // Use the values of r,g,b to calculate the lightness in the HSl representation\n    //First calculate the fraction of the light in each color, since in css the value of r,g,b is in the interval of [0,255], we have\n    if (colorValues) {\n        const red = colorValues[0] / 255;\n        const green = colorValues[1] / 255;\n        const blue = colorValues[2] / 255;\n\n        //Then the lightness in the HSL representation is the average between maximum fraction of r,g,b and the minimum fraction\n        return (Math.max(red, green, blue) + Math.min(red, green, blue)) * 50;\n    } else {\n        return 255;\n    }\n}\n","import getTagOfNode from './getTagOfNode';\r\nimport { getComputedStyle } from './getComputedStyles';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\nconst CRLF = /^[\\r\\n]+$/g;\r\nconst CRLF_SPACE = /[\\t\\r\\n\\u0020\\u200B]/gm; // We should only find new line, real space or ZeroWidthSpace (TAB, %20, but not &nbsp;)\r\n\r\n/**\r\n * @internal\r\n * Skip a node when any of following conditions are true\r\n * - it is neither Element nor Text\r\n * - it is a text node but is empty\r\n * - it is a text node but contains just CRLF (noisy text node that often comes in-between elements)\r\n * - has a display:none\r\n * - it is just <div></div>\r\n * @param node The node to check\r\n * @param ignoreSpace (Optional) True to ignore pure space text node of the node when check.\r\n * If the value of a node value is only space, set this to true will treat this node can be skipped.\r\n * Default value is false\r\n */\r\nexport default function shouldSkipNode(node: Node, ignoreSpace?: boolean): boolean {\r\n    if (node.nodeType == NodeType.Text) {\r\n        if (!node.nodeValue || node.textContent == '' || CRLF.test(node.nodeValue)) {\r\n            return true;\r\n        } else if (ignoreSpace && node.nodeValue.replace(CRLF_SPACE, '') == '') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } else if (node.nodeType == NodeType.Element) {\r\n        if (getComputedStyle(node, 'display') == 'none') {\r\n            return true;\r\n        }\r\n\r\n        const tag = getTagOfNode(node);\r\n\r\n        if (tag == 'DIV' || tag == 'SPAN') {\r\n            // Empty SPAN/DIV or SPAN/DIV with only meaningless children is meaningless,\r\n            // because it can render nothing. If we keep them here, there may be unexpected\r\n            // LI elements added for those meaningless nodes.\r\n            for (let child = node.firstChild; !!child; child = child.nextSibling) {\r\n                if (!shouldSkipNode(child, ignoreSpace)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            // There may still be other cases that the node is not meaningful.\r\n            // We can add those cases here once we hit them.\r\n            return false;\r\n        }\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n","import isNodeAfter from './isNodeAfter';\r\n\r\n/**\r\n * Split parent node of the given node before/after the given node.\r\n * When a parent node contains [A,B,C] and pass B as the given node,\r\n * If split before, the new nodes will be [A][B,C] and returns [A];\r\n * otherwise, it will be [A,B][C] and returns [C].\r\n * @param node The node to split before/after\r\n * @param splitBefore Whether split before or after\r\n * @param removeEmptyNewNode If the new node is empty (even then only child is space or ZER_WIDTH_SPACE),\r\n * we remove it. @default false\r\n * @returns The new parent node\r\n */\r\nexport default function splitParentNode(node: Node, splitBefore: boolean): Node | null {\r\n    if (!node || !node.parentNode) {\r\n        return null;\r\n    }\r\n\r\n    let parentNode = node.parentNode;\r\n    let newParent: HTMLElement | null = parentNode.cloneNode(false /*deep*/) as HTMLElement;\r\n    newParent.removeAttribute('id');\r\n    if (splitBefore) {\r\n        while (parentNode.firstChild && parentNode.firstChild != node) {\r\n            newParent.appendChild(parentNode.firstChild);\r\n        }\r\n    } else {\r\n        while (node.nextSibling) {\r\n            newParent.appendChild(node.nextSibling);\r\n        }\r\n    }\r\n\r\n    // When the only child of new parent is ZERO_WIDTH_SPACE, we can still prevent keeping it by set removeEmptyNewNode to true\r\n    if (newParent.firstChild && newParent.innerHTML != '') {\r\n        parentNode.parentNode?.insertBefore(\r\n            newParent,\r\n            splitBefore ? parentNode : parentNode.nextSibling\r\n        );\r\n    } else {\r\n        newParent = null;\r\n    }\r\n\r\n    return newParent;\r\n}\r\n\r\n/**\r\n * Split parent node by a balanced node range\r\n * @param nodes The nodes to split from. If only one node is passed, split it from all its siblings.\r\n * If two or nodes are passed, will split before the first one and after the last one, all other nodes will be ignored\r\n * @returns The parent node of the given node range if the given nodes are balanced, otherwise null\r\n */\r\nexport function splitBalancedNodeRange(nodes: Node | Node[]): Node | null {\r\n    let start = Array.isArray(nodes) ? nodes[0] : nodes;\r\n    let end = Array.isArray(nodes) ? nodes[nodes.length - 1] : nodes;\r\n    const parentNode = start && end && start.parentNode == end.parentNode ? start.parentNode : null;\r\n    if (parentNode) {\r\n        if (isNodeAfter(start, end)) {\r\n            let temp = end;\r\n            end = start;\r\n            start = temp;\r\n        }\r\n        splitParentNode(start, true /*splitBefore*/);\r\n        splitParentNode(end, false /*splitBefore*/);\r\n    }\r\n\r\n    return parentNode;\r\n}\r\n","/**\r\n * Split a text node into two parts by an offset number, and return one of them\r\n * @param textNode The text node to split\r\n * @param offset The offset number to split at\r\n * @param returnFirstPart True to return the first part, then the passed in textNode will become the second part.\r\n * Otherwise return the second part, and the passed in textNode will become the first part\r\n */\r\nexport default function splitTextNode(textNode: Text, offset: number, returnFirstPart: boolean) {\r\n    const firstPart = textNode.nodeValue?.substring(0, offset) || '';\r\n    const secondPart = textNode.nodeValue?.substring(offset) || '';\r\n    const newNode = textNode.ownerDocument.createTextNode(returnFirstPart ? firstPart : secondPart);\r\n    textNode.nodeValue = returnFirstPart ? secondPart : firstPart;\r\n    textNode.parentNode?.insertBefore(newNode, returnFirstPart ? textNode : textNode.nextSibling);\r\n    return newNode;\r\n}\r\n","/**\r\n * Removes the node and keep all children in place, return the parentNode where the children are attached\r\n * @param node the node to remove\r\n */\r\nexport default function unwrap(node: Node): Node | null {\r\n    // Unwrap requires a parentNode\r\n    let parentNode = node ? node.parentNode : null;\r\n    if (!parentNode) {\r\n        return null;\r\n    }\r\n\r\n    while (node.firstChild) {\r\n        parentNode.insertBefore(node.firstChild, node);\r\n    }\r\n\r\n    parentNode.removeChild(node);\r\n    return parentNode;\r\n}\r\n","import createElement from './createElement';\r\nimport fromHtml from './fromHtml';\r\nimport safeInstanceOf from './safeInstanceOf';\r\nimport type { CreateElementData, KnownCreateElementDataIndex } from 'roosterjs-editor-types';\r\nimport type { CompatibleKnownCreateElementDataIndex } from 'roosterjs-editor-types/lib/compatibleTypes';\r\n\r\n/**\r\n * Wrap all the node with html and return the wrapped node, and put the wrapper node under the parent of the first node\r\n * @param nodes The node or node array to wrap\r\n * @param wrapper The wrapper HTML tag name\r\n * @returns The wrapper element\r\n */\r\nexport default function wrap<T extends keyof HTMLElementTagNameMap>(\r\n    nodes: Node | Node[],\r\n    wrapper?: T\r\n): HTMLElementTagNameMap[T];\r\n\r\n/**\r\n * @deprecated\r\n * Wrap all the nodes with html and return the wrapped node, and put the wrapper node under the parent of the first node\r\n * @param nodes The node or node array to wrap\r\n * @param wrapper The wrapper HTML string, default value is DIV\r\n * @returns The wrapper element\r\n */\r\nexport default function wrap(nodes: Node | Node[], wrapper?: string): HTMLElement;\r\n\r\n/**\r\n * Wrap all the nodes with html and return the wrapped node, and put the wrapper node under the parent of the first node\r\n * @param nodes The node or node array to wrap\r\n * @param wrapper The wrapper HTML element, default value is a new DIV element\r\n * @returns The wrapper element\r\n */\r\nexport default function wrap(nodes: Node | Node[], wrapper?: HTMLElement): HTMLElement;\r\n\r\n/**\r\n * Wraps all the nodes with CreateElementData or an index of a known CreateElementData\r\n * @param nodes The nodes to wrap\r\n * @param wrapper The CreateElementData or an index of a known CreateElementData\r\n */\r\nexport default function wrap(\r\n    nodes: Node | Node[],\r\n    wrapper?:\r\n        | CreateElementData\r\n        | KnownCreateElementDataIndex\r\n        | CompatibleKnownCreateElementDataIndex\r\n): HTMLElement;\r\n\r\nexport default function wrap(\r\n    nodes: Node | Node[],\r\n    wrapper?:\r\n        | string\r\n        | HTMLElement\r\n        | CreateElementData\r\n        | KnownCreateElementDataIndex\r\n        | CompatibleKnownCreateElementDataIndex\r\n): HTMLElement | null {\r\n    nodes = !nodes ? [] : safeInstanceOf(nodes, 'Node') ? [nodes] : nodes;\r\n    if (nodes.length == 0 || !nodes[0] || !nodes[0].ownerDocument) {\r\n        return null;\r\n    }\r\n\r\n    if (!wrapper) {\r\n        wrapper = 'div';\r\n    }\r\n\r\n    if (!safeInstanceOf(wrapper, 'HTMLElement')) {\r\n        let document = nodes[0].ownerDocument;\r\n\r\n        if (typeof wrapper === 'string') {\r\n            wrapper = /^\\w+$/.test(wrapper)\r\n                ? document.createElement(wrapper)\r\n                : (fromHtml(wrapper, document)[0] as HTMLElement); // This will be removed in next major release\r\n        } else {\r\n            wrapper = createElement(wrapper, document) as HTMLElement;\r\n        }\r\n    }\r\n\r\n    let parentNode = nodes[0].parentNode;\r\n\r\n    if (parentNode) {\r\n        parentNode.insertBefore(wrapper, nodes[0]);\r\n    }\r\n\r\n    for (let node of nodes) {\r\n        wrapper.appendChild(node);\r\n    }\r\n\r\n    return wrapper;\r\n}\r\n","export * from './plugins/Announce/index';\n","export * from './plugins/AutoFormat/index';\n","export * from './plugins/ContentEdit/index';\n","export * from './plugins/ContextMenu/index';\n","export * from './plugins/CustomReplace/index';\n","export * from './plugins/CutPasteListChain/index';\n","export * from './plugins/HyperLink/index';\n","export * from './plugins/ImageEdit/index';\n","export * from './plugins/ImageResize/index';\n","export * from './plugins/Paste/index';\n","export * from './plugins/Picker/index';\n","export * from './plugins/TableCellSelection/index';\n","export * from './plugins/TableResize/index';\n","export * from './plugins/Watermark/index';\n","export * from './ContentEdit';\r\nexport * from './ContextMenu';\r\nexport * from './CustomReplace';\r\nexport * from './CutPasteListChain';\r\nexport * from './HyperLink';\r\nexport * from './ImageEdit';\r\nexport * from './ImageResize';\r\nexport * from './Paste';\r\nexport * from './Picker';\r\nexport * from './TableResize';\r\nexport * from './Watermark';\r\nexport * from './TableCellSelection';\r\nexport * from './AutoFormat';\r\nexport * from './Announce';\r\n","import { Browser } from 'roosterjs-editor-dom';\nimport type Disposable from './Disposable';\nimport type DragAndDropHandler from './DragAndDropHandler';\n\n/**\n * @internal\n */\ninterface MouseEventMoves {\n    MOUSEDOWN: string;\n    MOUSEMOVE: string;\n    MOUSEUP: string;\n}\n\n/**\n * @internal\n */\ninterface MouseEventInfo extends MouseEventMoves {\n    getPageXY: (e: MouseEvent) => number[];\n}\n\n/**\n * @internal\n * Compatible mouse event names for different platform\n */\ninterface TouchEventInfo extends MouseEventMoves {\n    getPageXY: (e: TouchEvent) => number[];\n}\n\n/**\n * Generate event names and getXY function based on different platforms to be compatible with desktop and mobile browsers\n */\nconst MOUSE_EVENT_INFO_DESKTOP: MouseEventInfo = (() => {\n    return {\n        MOUSEDOWN: 'mousedown',\n        MOUSEMOVE: 'mousemove',\n        MOUSEUP: 'mouseup',\n        getPageXY: getMouseEventPageXY,\n    };\n})();\n\nconst MOUSE_EVENT_INFO_MOBILE: TouchEventInfo = (() => {\n    return {\n        MOUSEDOWN: 'touchstart',\n        MOUSEMOVE: 'touchmove',\n        MOUSEUP: 'touchend',\n        getPageXY: getTouchEventPageXY,\n    };\n})();\n\nfunction getMouseEventPageXY(e: MouseEvent): [number, number] {\n    return [e.pageX, e.pageY];\n}\n\nfunction getTouchEventPageXY(e: TouchEvent): [number, number] {\n    let pageX = 0;\n    let pageY = 0;\n    if (e.targetTouches && e.targetTouches.length > 0) {\n        const touch = e.targetTouches[0];\n        pageX = touch.pageX;\n        pageY = touch.pageY;\n    }\n    return [pageX, pageY];\n}\n\n/**\n * @internal\n * A helper class to help manage drag and drop to an HTML element\n */\nexport default class DragAndDropHelper<TContext, TInitValue> implements Disposable {\n    private initX: number = 0;\n    private initY: number = 0;\n    private initValue: TInitValue | undefined = undefined;\n    private dndMouse: MouseEventInfo | TouchEventInfo;\n\n    /**\n     * Create a new instance of DragAndDropHelper class\n     * @param trigger The trigger element. When user start drag on this element,\n     * events will be fired to the handler object\n     * @param context Context object that will be passed to handler function when event is fired,\n     * so that the handler object knows which element it is triggered from.\n     * @param onSubmit A callback that will be invoked when event handler in handler object returns true\n     * @param handler The event handler object, see DragAndDropHandler interface for more information\n     * @param zoomScale The zoom scale of the editor\n     * @param forceMobile A boolean to force the use of touch controls for the helper\n     */\n    constructor(\n        private trigger: HTMLElement,\n        private context: TContext,\n        private onSubmit: (context: TContext, trigger: HTMLElement) => void,\n        private handler: DragAndDropHandler<TContext, TInitValue>,\n        private zoomScale: number,\n        forceMobile?: boolean\n    ) {\n        this.dndMouse =\n            forceMobile || Browser.isMobileOrTablet\n                ? MOUSE_EVENT_INFO_MOBILE\n                : MOUSE_EVENT_INFO_DESKTOP;\n        trigger.addEventListener(this.dndMouse.MOUSEDOWN, this.onMouseDown);\n    }\n\n    /**\n     * Dispose this object, remove all event listeners that has been attached\n     */\n    dispose() {\n        this.trigger.removeEventListener(this.dndMouse.MOUSEDOWN, this.onMouseDown);\n        this.removeDocumentEvents();\n    }\n\n    public get mouseType(): string {\n        return this.dndMouse == MOUSE_EVENT_INFO_MOBILE ? 'touch' : 'mouse';\n    }\n\n    private addDocumentEvents() {\n        const doc = this.trigger.ownerDocument;\n        doc.addEventListener(this.dndMouse.MOUSEMOVE, this.onMouseMove, true /*useCapture*/);\n        doc.addEventListener(this.dndMouse.MOUSEUP, this.onMouseUp, true /*useCapture*/);\n    }\n\n    private removeDocumentEvents() {\n        const doc = this.trigger.ownerDocument;\n        doc.removeEventListener(this.dndMouse.MOUSEMOVE, this.onMouseMove, true /*useCapture*/);\n        doc.removeEventListener(this.dndMouse.MOUSEUP, this.onMouseUp, true /*useCapture*/);\n    }\n\n    private onMouseDown = (e: Event) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.addDocumentEvents();\n        [this.initX, this.initY] = this.dndMouse.getPageXY(e as MouseEvent & TouchEvent);\n        this.initValue = this.handler.onDragStart?.(this.context, e as MouseEvent);\n    };\n\n    private onMouseMove = (e: Event) => {\n        e.preventDefault();\n        const [pageX, pageY] = this.dndMouse.getPageXY(e as MouseEvent & TouchEvent);\n        const deltaX = (pageX - this.initX) / this.zoomScale;\n        const deltaY = (pageY - this.initY) / this.zoomScale;\n        if (\n            this.initValue &&\n            this.handler.onDragging?.(this.context, e as MouseEvent, this.initValue, deltaX, deltaY)\n        ) {\n            this.onSubmit?.(this.context, this.trigger);\n        }\n    };\n\n    private onMouseUp = (e: Event) => {\n        e.preventDefault();\n        this.removeDocumentEvents();\n        if (this.handler.onDragEnd?.(this.context, e as MouseEvent, this.initValue)) {\n            this.onSubmit?.(this.context, this.trigger);\n        }\n    };\n}\n","import { createElement } from 'roosterjs-editor-dom';\nimport { PluginEventType } from 'roosterjs-editor-types';\nimport type { CompatibleKnownAnnounceStrings } from 'roosterjs-editor-types/lib/compatibleTypes';\nimport type {\n    EditorPlugin,\n    IEditor,\n    PluginEvent,\n    AnnounceData,\n    KnownAnnounceStrings,\n} from 'roosterjs-editor-types';\n\nconst ARIA_LIVE_STYLE =\n    'clip: rect(0px, 0px, 0px, 0px); clip-path: inset(100%); height: 1px; overflow: hidden; position: absolute; white-space: nowrap; width: 1px;';\nconst ARIA_LIVE_ASSERTIVE = 'assertive';\nconst DIV_TAG = 'div';\nconst createAriaLiveElement = (document: Document): HTMLDivElement => {\n    const element = createElement(\n        {\n            tag: DIV_TAG,\n            style: ARIA_LIVE_STYLE,\n            attributes: {\n                'aria-live': ARIA_LIVE_ASSERTIVE,\n            },\n        },\n        document\n    ) as HTMLDivElement;\n\n    document.body.appendChild(element);\n\n    return element;\n};\n\n/**\n * Announce messages to screen reader by using aria live element.\n */\nexport default class Announce implements EditorPlugin {\n    private ariaLiveElement: HTMLDivElement | undefined;\n    private editor: IEditor | undefined;\n\n    constructor(\n        private stringsMapOrGetter?:\n            | Map<CompatibleKnownAnnounceStrings | KnownAnnounceStrings, string>\n            | ((key: CompatibleKnownAnnounceStrings | KnownAnnounceStrings) => string)\n            | undefined\n    ) {}\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'Announce';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.ariaLiveElement?.parentElement?.removeChild(this.ariaLiveElement);\n        this.ariaLiveElement = undefined;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (\n            this.editor &&\n            event.eventType == PluginEventType.ContentChanged &&\n            event.additionalData?.getAnnounceData\n        ) {\n            const data = event.additionalData.getAnnounceData();\n            if (data) {\n                this.announce(data, this.editor);\n            }\n        }\n    }\n\n    protected announce(announceData: AnnounceData, editor: IEditor) {\n        const { text, defaultStrings, formatStrings = [] } = announceData;\n        let textToAnnounce = formatString(this.getString(defaultStrings) || text, formatStrings);\n        if (textToAnnounce) {\n            if (!this.ariaLiveElement || textToAnnounce == this.ariaLiveElement?.textContent) {\n                this.ariaLiveElement?.parentElement?.removeChild(this.ariaLiveElement);\n                this.ariaLiveElement = createAriaLiveElement(editor.getDocument());\n            }\n            if (this.ariaLiveElement) {\n                this.ariaLiveElement.textContent = textToAnnounce;\n            }\n        }\n    }\n\n    private getString(key: CompatibleKnownAnnounceStrings | KnownAnnounceStrings | undefined) {\n        if (this.stringsMapOrGetter == undefined || key == undefined) {\n            return undefined;\n        }\n\n        if (typeof this.stringsMapOrGetter === 'function') {\n            return this.stringsMapOrGetter(key);\n        } else {\n            return this.stringsMapOrGetter.get(key);\n        }\n    }\n\n    /**\n     * @internal\n     * Public only for unit testing.\n     * @returns\n     */\n    public getAriaLiveElement() {\n        return this.ariaLiveElement;\n    }\n}\n\nfunction formatString(text: string | undefined, formatStrings: string[]) {\n    if (text == undefined) {\n        return text;\n    }\n\n    formatStrings.forEach((value, index) => {\n        text = text?.replace(`{${index}}`, value);\n    });\n\n    return text;\n}\n","export { default as Announce } from './AnnouncePlugin';\n","import { ChangeSource, PluginEventType, PositionType } from 'roosterjs-editor-types';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\nconst specialCharacters = /[`!@#$%^&*()_+\\=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n/**\n * Automatically transform -- into hyphen, if typed between two words.\n */\nexport default class AutoFormat implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private lastKeyTyped: string | null = null;\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'AutoFormat';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n        this.lastKeyTyped = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (!this.editor) {\n            return;\n        }\n        if (\n            event.eventType === PluginEventType.ContentChanged ||\n            event.eventType === PluginEventType.MouseDown ||\n            event.eventType === PluginEventType.MouseUp\n        ) {\n            this.lastKeyTyped = '';\n        }\n\n        if (event.eventType === PluginEventType.KeyPress) {\n            const keyTyped = event.rawEvent.key;\n\n            if (keyTyped && keyTyped.length > 1) {\n                this.lastKeyTyped = '';\n            }\n\n            if (\n                this.lastKeyTyped === '-' &&\n                !specialCharacters.test(keyTyped) &&\n                keyTyped !== ' ' &&\n                keyTyped !== '-'\n            ) {\n                const searcher = this.editor.getContentSearcherOfCursor(event);\n                const textBeforeCursor = searcher?.getSubStringBefore(3);\n                const dashes = searcher?.getSubStringBefore(2);\n                const isPrecededByADash = textBeforeCursor?.[0] === '-';\n                const isPrecededByASpace = textBeforeCursor?.[0] === ' ';\n                if (\n                    isPrecededByADash ||\n                    isPrecededByASpace ||\n                    (typeof textBeforeCursor === 'string' &&\n                        specialCharacters.test(textBeforeCursor[0])) ||\n                    dashes !== '--'\n                ) {\n                    return;\n                }\n\n                const textRange = searcher?.getRangeFromText(dashes, true /* exactMatch */);\n                const nodeHyphen = document.createTextNode('—');\n                this.editor.addUndoSnapshot(\n                    () => {\n                        if (textRange) {\n                            textRange.deleteContents();\n                            textRange.insertNode(nodeHyphen);\n                            this.editor!.select(nodeHyphen, PositionType.End);\n                        }\n                    },\n                    ChangeSource.Format /*changeSource*/,\n                    true /*canUndoByBackspace*/,\n                    { formatApiName: 'autoHyphen' }\n                );\n\n                //After the substitution the last key typed needs to be cleaned\n                this.lastKeyTyped = null;\n            } else {\n                this.lastKeyTyped = keyTyped;\n            }\n        }\n    }\n}\n","export { default as AutoFormat } from './AutoFormat';\n","import getAllFeatures from './getAllFeatures';\nimport { getObjectKeys } from 'roosterjs-editor-dom';\nimport type {\n    ContentEditFeatureSettings,\n    EditorPlugin,\n    GenericContentEditFeature,\n    IEditor,\n    PluginEvent,\n} from 'roosterjs-editor-types';\n\n/**\n * An editor plugin to handle content edit event.\n * The following cases are included:\n * 1. Auto increase/decrease indentation on Tab, Shift+tab\n * 2. Enter, Backspace on empty list item\n * 3. Enter, Backspace on empty blockquote line\n * 4. Auto bullet/numbering\n * 5. Auto link\n * 6. Tab in table\n * 7. Up/Down in table\n * 8. Manage list style\n */\nexport default class ContentEdit implements EditorPlugin {\n    private editor: IEditor | undefined = undefined;\n    private features: GenericContentEditFeature<PluginEvent>[] = [];\n    /**\n     * Create instance of ContentEdit plugin\n     * @param settingsOverride An optional feature set to override default feature settings\n     * @param additionalFeatures Optional. More features to add\n     */\n    constructor(\n        private settingsOverride?: Partial<ContentEditFeatureSettings>,\n        private additionalFeatures?: GenericContentEditFeature<PluginEvent>[]\n    ) {}\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'ContentEdit';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor): void {\n        this.editor = editor;\n        const allFeatures = getAllFeatures();\n        getObjectKeys(allFeatures).forEach(key => {\n            const feature = allFeatures[key];\n            const hasSettingForKey =\n                this.settingsOverride && this.settingsOverride[key] !== undefined;\n\n            if (\n                (hasSettingForKey && this.settingsOverride?.[key]) ||\n                (!hasSettingForKey && !feature.defaultDisabled)\n            ) {\n                this.features.push(feature);\n            }\n        });\n        this.features = this.features.concat(this.additionalFeatures || []);\n        this.features.forEach(feature => this.editor?.addContentEditFeature(feature));\n    }\n\n    private disposeFeatures() {\n        if (this.editor) {\n            this.features.forEach(feature => this.editor!.removeContentEditFeature(feature));\n        }\n        this.features = [];\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose(): void {\n        this.disposeFeatures();\n        this.editor = undefined;\n    }\n}\n","import { ChangeSource, Keys, PluginEventType } from 'roosterjs-editor-types';\nimport { removeLink, replaceWithNode } from 'roosterjs-editor-api';\nimport type {\n    AutoLinkFeatureSettings,\n    BuildInEditFeature,\n    ClipboardData,\n    IEditor,\n    LinkData,\n    PluginEvent,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\nimport {\n    cacheGetEventData,\n    clearEventDataCache,\n    LinkInlineElement,\n    matchLink,\n} from 'roosterjs-editor-dom';\n\n/**\n * When user type, they may end a link with a punctuation, i.e. www.bing.com;\n * we need to trim off the trailing punctuation before turning it to link match\n */\nconst TRAILING_PUNCTUATION_REGEX = /[.+=\\s:;\"',>]+$/i;\nconst MINIMUM_LENGTH = 5;\n\n/**\n * AutoLink edit feature, provides the ability to automatically convert text user typed or pasted\n * in hyperlink format into a real hyperlink\n */\nconst AutoLink: BuildInEditFeature<PluginEvent> = {\n    keys: [Keys.ENTER, Keys.SPACE, Keys.CONTENTCHANGED],\n    shouldHandleEvent: cacheGetLinkData,\n    handleEvent: autoLink,\n};\n\n/**\n * UnlinkWhenBackspaceAfterLink edit feature, provides the ability to convert a hyperlink back into text\n * if user presses BACKSPACE right after a hyperlink\n */\nconst UnlinkWhenBackspaceAfterLink: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: hasLinkBeforeCursor,\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n        removeLink(editor);\n    },\n    defaultDisabled: true,\n};\n\nfunction cacheGetLinkData(event: PluginEvent, editor: IEditor): LinkData | null {\n    return event.eventType == PluginEventType.KeyDown ||\n        (event.eventType == PluginEventType.ContentChanged && event.source == ChangeSource.Paste)\n        ? cacheGetEventData(event, 'LINK_DATA', () => {\n              // First try to match link from the whole paste string from the plain text in clipboard.\n              // This helps when we paste a link next to some existing character, and the text we got\n              // from clipboard will only contain what we pasted, any existing characters will not\n              // be included.\n              let clipboardData =\n                  (event.eventType == PluginEventType.ContentChanged &&\n                      event.source == ChangeSource.Paste &&\n                      (event.data as ClipboardData)) ||\n                  null;\n              let link = matchLink((clipboardData?.text || '').trim());\n              let searcher = editor.getContentSearcherOfCursor(event);\n\n              // In case the matched link is already inside a <A> tag, we do a range search.\n              // getRangeFromText will return null if the given text is already in a LinkInlineElement\n              if (link && searcher?.getRangeFromText(link.originalUrl, false /*exactMatch*/)) {\n                  return link;\n              }\n\n              let word = searcher && searcher.getWordBefore();\n              if (word && word.length > MINIMUM_LENGTH) {\n                  // Check for trailing punctuation\n                  let trailingPunctuations = word.match(TRAILING_PUNCTUATION_REGEX);\n                  let trailingPunctuation = (trailingPunctuations || [])[0] || '';\n                  let candidate = word.substring(0, word.length - trailingPunctuation.length);\n\n                  // Do special handling for ')', '}', ']'\n                  ['()', '{}', '[]'].forEach(str => {\n                      if (\n                          candidate[candidate.length - 1] == str[1] &&\n                          candidate.indexOf(str[0]) < 0\n                      ) {\n                          candidate = candidate.substr(0, candidate.length - 1);\n                      }\n                  });\n\n                  // Match and replace in editor\n                  return matchLink(candidate);\n              }\n              return null;\n          })\n        : null;\n}\n\nfunction hasLinkBeforeCursor(event: PluginKeyboardEvent, editor: IEditor): boolean {\n    let contentSearcher = editor.getContentSearcherOfCursor(event);\n    let inline = contentSearcher?.getInlineElementBefore();\n    return inline instanceof LinkInlineElement;\n}\n\nfunction autoLink(event: PluginEvent, editor: IEditor) {\n    const linkData = cacheGetLinkData(event, editor);\n    if (!linkData) {\n        return;\n    }\n    let anchor = editor.getDocument().createElement('a');\n    // Need to get searcher before we enter the async callback since the callback can happen when cursor is moved to next line\n    // and at that time a new searcher won't be able to find the link text to replace\n    let searcher = editor.getContentSearcherOfCursor();\n    anchor.textContent = linkData.originalUrl;\n    anchor.href = linkData.normalizedUrl;\n\n    editor.runAsync(editor => {\n        editor.addUndoSnapshot(\n            () => {\n                replaceWithNode(\n                    editor,\n                    linkData.originalUrl,\n                    anchor,\n                    false /* exactMatch */,\n                    searcher ?? undefined\n                );\n\n                // The content at cursor has changed. Should also clear the cursor data cache\n                clearEventDataCache(event);\n                return anchor;\n            },\n            ChangeSource.AutoLink,\n            true /*canUndoByBackspace*/\n        );\n    });\n}\n\n/**\n * @internal\n */\nexport const AutoLinkFeatures: Record<\n    keyof AutoLinkFeatureSettings,\n    BuildInEditFeature<PluginEvent>\n> = {\n    autoLink: AutoLink,\n    unlinkWhenBackspaceAfterLink: UnlinkWhenBackspaceAfterLink as BuildInEditFeature<PluginEvent>,\n};\n","import { Keys, PositionType, QueryScope } from 'roosterjs-editor-types';\nimport {\n    isNodeEmpty,\n    cacheGetEventData,\n    safeInstanceOf,\n    splitBalancedNodeRange,\n    unwrap,\n} from 'roosterjs-editor-dom';\nimport type {\n    BuildInEditFeature,\n    PluginKeyboardEvent,\n    IEditor,\n    CodeFeatureSettings,\n} from 'roosterjs-editor-types';\n\nconst RemoveCodeWhenEnterOnEmptyLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) => {\n        const childOfCode = cacheGetCodeChild(event, editor);\n        return childOfCode && isNodeEmpty(childOfCode);\n    },\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(\n            () => {\n                splitCode(event, editor);\n            },\n            undefined /* changeSource */,\n            true /* canUndoByBackspace */\n        );\n    },\n};\n\nconst RemoveCodeWhenBackspaceOnEmptyFirstLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        const childOfCode = cacheGetCodeChild(event, editor);\n        return childOfCode && isNodeEmpty(childOfCode) && !childOfCode.previousSibling;\n    },\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(() => splitCode(event, editor));\n    },\n};\n\nfunction cacheGetCodeChild(event: PluginKeyboardEvent, editor: IEditor): Node | null {\n    return cacheGetEventData(event, 'CODE_CHILD', () => {\n        const codeElement =\n            editor.getElementAtCursor('code') ??\n            editor.queryElements('code', QueryScope.OnSelection)[0];\n        if (codeElement) {\n            const pos = editor.getFocusedPosition();\n            const block = pos && editor.getBlockElementAtNode(pos.normalize().node);\n            if (block) {\n                const node =\n                    block.getStartNode() == codeElement.parentNode\n                        ? block.getStartNode()\n                        : block.collapseToSingleElement();\n                return isNodeEmpty(node) ? node : null;\n            }\n        }\n\n        return null;\n    });\n}\n\nfunction splitCode(event: PluginKeyboardEvent, editor: IEditor) {\n    const currentContainer = cacheGetCodeChild(event, editor);\n    if (!safeInstanceOf(currentContainer, 'HTMLElement')) {\n        return;\n    }\n    const codeChild = currentContainer.querySelector('code');\n    if (!codeChild) {\n        const codeParent = splitBalancedNodeRange(currentContainer);\n        if (codeParent) {\n            unwrap(codeParent);\n        }\n        if (safeInstanceOf(currentContainer.parentElement, 'HTMLPreElement')) {\n            const preParent = splitBalancedNodeRange(currentContainer);\n            if (preParent) {\n                unwrap(preParent);\n            }\n        }\n    } else {\n        //Content model\n        unwrap(codeChild);\n    }\n    editor.select(currentContainer, PositionType.Begin);\n}\n\nexport const CodeFeatures: Record<\n    keyof CodeFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    removeCodeWhenEnterOnEmptyLine: RemoveCodeWhenEnterOnEmptyLine,\n    removeCodeWhenBackspaceOnEmptyFirstLine: RemoveCodeWhenBackspaceOnEmptyFirstLine,\n};\n","import { Browser, getComputedStyle, Position } from 'roosterjs-editor-dom';\nimport { Keys } from 'roosterjs-editor-types';\nimport type {\n    BuildInEditFeature,\n    CursorFeatureSettings,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\n\nconst NoCycleCursorMove: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.LEFT, Keys.RIGHT],\n    allowFunctionKeys: true,\n    shouldHandleEvent: (event, editor, ctrlOrMeta) => {\n        let range: Range | null = null;\n        let position: Position;\n\n        if (\n            !ctrlOrMeta ||\n            !(range = editor.getSelectionRange()) ||\n            !range.collapsed ||\n            !(position = Position.getStart(range)) ||\n            !editor.isPositionAtBeginning(position)\n        ) {\n            return false;\n        }\n\n        let rtl = getComputedStyle(position.element, 'direction') == 'rtl';\n        let rawEvent = event.rawEvent;\n\n        return (!rtl && rawEvent.which == Keys.LEFT) || (rtl && rawEvent.which == Keys.RIGHT);\n    },\n    handleEvent: event => {\n        event.rawEvent.preventDefault();\n    },\n    defaultDisabled: !Browser.isChrome,\n};\n\n/**\n * @internal\n */\nexport const CursorFeatures: Record<\n    keyof CursorFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    noCycleCursorMove: NoCycleCursorMove,\n};\n","import {\n    ContentTraverser,\n    addDelimiters,\n    cacheGetEventData,\n    createRange,\n    getComputedStyle,\n    getDelimiterFromElement,\n    getEntityFromElement,\n    getEntitySelector,\n    isBlockElement,\n    matchesSelector,\n    Position,\n} from 'roosterjs-editor-dom';\nimport {\n    DelimiterClasses,\n    EntityOperation,\n    Keys,\n    NodeType,\n    PluginEventType,\n    PositionType,\n} from 'roosterjs-editor-types';\n\nimport type {\n    BuildInEditFeature,\n    EntityFeatureSettings,\n    IEditor,\n    PluginKeyboardEvent,\n    PluginEvent,\n    Entity,\n    IContentTraverser,\n    InlineElement,\n} from 'roosterjs-editor-types';\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"Click\" when user\n * clicks on a readonly entity.\n */\nconst ClickOnEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) => cacheGetReadonlyEntityElement(event, editor),\n    handleEvent: (event, editor) => {\n        cacheGetReadonlyEntityElement(event, editor, EntityOperation.Click);\n    },\n};\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"Escape\" when user\n * presses ESC on a readonly entity.\n */\nconst EscapeFromEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ESCAPE],\n    shouldHandleEvent: (event, editor) => cacheGetReadonlyEntityElement(event, editor),\n    handleEvent: (event, editor) => {\n        cacheGetReadonlyEntityElement(event, editor, EntityOperation.Escape);\n    },\n};\n\nfunction cacheGetReadonlyEntityElement(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    operation?: EntityOperation\n) {\n    const element = cacheGetEventData(event, 'READONLY_ENTITY_ELEMENT', () => {\n        const node = event.rawEvent.target as Node;\n        const entityElement = node && editor.getElementAtCursor(getEntitySelector(), node);\n        return entityElement && !entityElement.isContentEditable ? entityElement : null;\n    });\n\n    if (element && operation !== undefined) {\n        const entity = getEntityFromElement(element);\n        if (entity) {\n            editor.triggerPluginEvent(PluginEventType.EntityOperation, {\n                operation,\n                rawEvent: event.rawEvent,\n                entity,\n            });\n        }\n    }\n\n    return element;\n}\n\n/**\n * A content edit feature to split current line into two lines at the cursor when user presses\n * ENTER right before a readonly entity.\n * Browser's default behavior will insert an extra BR tag before the entity which causes an extra\n * empty line. So we override the default behavior here.\n */\nconst EnterBeforeReadonlyEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) =>\n        cacheGetNeighborEntityElement(event, editor, true /*isNext*/, false /*collapseOnly*/),\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n\n        const range = editor.getSelectionRange();\n        if (!range) {\n            return;\n        }\n\n        const node = Position.getEnd(range).normalize().node;\n        const br = editor.getDocument().createElement('BR');\n        node.parentNode?.insertBefore(br, node.nextSibling);\n\n        const block = editor.getBlockElementAtNode(node);\n        let newContainer: HTMLElement | undefined;\n\n        if (block) {\n            newContainer = block.collapseToSingleElement();\n            br.parentNode?.removeChild(br);\n        }\n\n        editor.getSelectionRange()?.deleteContents();\n\n        if (newContainer?.nextSibling) {\n            editor.select(newContainer.nextSibling, PositionType.Begin);\n        }\n    },\n};\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"RemoveFromEnd\" when user\n * press BACKSPACE right after an entity\n */\nconst BackspaceAfterEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) =>\n        cacheGetNeighborEntityElement(event, editor, false /*isNext*/, true /*collapseOnly*/),\n    handleEvent: (event, editor) => {\n        cacheGetNeighborEntityElement(\n            event,\n            editor,\n            false /*isNext*/,\n            true /*collapseOnly*/,\n            EntityOperation.RemoveFromEnd\n        );\n    },\n};\n\n/**\n * A content edit feature to trigger EntityOperation event with operation \"RemoveFromStart\" when user\n * press DELETE right after an entity\n */\nconst DeleteBeforeEntityFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.DELETE],\n    shouldHandleEvent: (event, editor) =>\n        cacheGetNeighborEntityElement(event, editor, true /*isNext*/, true /*collapseOnly*/),\n    handleEvent: (event, editor) => {\n        cacheGetNeighborEntityElement(\n            event,\n            editor,\n            true /*isNext*/,\n            true /*collapseOnly*/,\n            EntityOperation.RemoveFromStart\n        );\n    },\n};\n\nfunction cacheGetNeighborEntityElement(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    isNext: boolean,\n    collapseOnly: boolean,\n    operation?: EntityOperation\n): HTMLElement | null {\n    const element = cacheGetEventData(\n        event,\n        'NEIGHBOR_ENTITY_ELEMENT_' + isNext + '_' + collapseOnly,\n        () => {\n            const range = editor.getSelectionRange();\n\n            if (!range || (collapseOnly && !range.collapsed)) {\n                return null;\n            }\n\n            const regions = editor.getSelectedRegions();\n            const regionRoot = regions[0]?.rootNode;\n\n            range.commonAncestorContainer.normalize();\n            const pos = Position.getEnd(range).normalize();\n            const isAtBeginOrEnd = pos.offset == 0 || pos.isAtEnd;\n            let entityNode: HTMLElement | null = null;\n\n            if (isAtBeginOrEnd && regionRoot) {\n                const traverser = ContentTraverser.createBodyTraverser(regionRoot, pos.node);\n                const sibling = isNext\n                    ? pos.offset == 0\n                        ? traverser.currentInlineElement\n                        : traverser.getNextInlineElement()\n                    : pos.isAtEnd\n                    ? traverser.currentInlineElement\n                    : traverser.getPreviousInlineElement();\n                let node = sibling && sibling.getContainerNode();\n\n                if (!collapseOnly) {\n                    const block = editor.getBlockElementAtNode(pos.node);\n                    if (!block || (node && !block.contains(node))) {\n                        node = null;\n                    }\n                }\n\n                entityNode = node && editor.getElementAtCursor(getEntitySelector(), node);\n            }\n\n            return entityNode;\n        }\n    );\n\n    if (element && operation !== undefined) {\n        const entity = getEntityFromElement(element);\n        if (entity) {\n            triggerOperation(entity, editor, operation, event);\n        }\n    }\n\n    return element;\n}\n\n/**\n * Content edit feature to move the cursor from Delimiters around Entities when using Right or Left Arrow Keys\n */\nconst MoveBetweenDelimitersFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.RIGHT, Keys.LEFT],\n    allowFunctionKeys: true,\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) => {\n        if (event.rawEvent.altKey) {\n            return false;\n        }\n\n        const element = editor.getElementAtCursor();\n        if (!element) {\n            return false;\n        }\n\n        const isRTL = getComputedStyle(element, 'direction') === 'rtl';\n        const shouldCheckBefore = isRTL == (event.rawEvent.which === Keys.LEFT);\n\n        return getIsDelimiterAtCursor(event, editor, shouldCheckBefore);\n    },\n    handleEvent(event: PluginKeyboardEvent, editor: IEditor) {\n        const checkBefore = cacheGetCheckBefore(event);\n        const delimiter = cacheDelimiter(event, checkBefore);\n\n        if (!delimiter) {\n            return;\n        }\n\n        const { delimiterPair, entity } = getRelatedElements(delimiter, checkBefore, editor);\n\n        if (delimiterPair && entity && matchesSelector(entity, getEntitySelector())) {\n            event.rawEvent.preventDefault();\n            editor.runAsync(() => {\n                const positionType = checkBefore\n                    ? event.rawEvent.shiftKey\n                        ? PositionType.After\n                        : PositionType.End\n                    : PositionType.Before;\n                const position = new Position(delimiterPair, positionType);\n                if (event.rawEvent.shiftKey) {\n                    const selection = delimiterPair.ownerDocument.getSelection();\n                    selection?.extend(position.node, position.offset);\n                } else {\n                    editor.select(position);\n                }\n            });\n        }\n    },\n};\n\n/**\n * Content edit Feature to trigger a Delete Entity Operation when one of the Delimiter is about to be removed with DELETE or Backspace\n */\nconst RemoveEntityBetweenDelimitersFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE, Keys.DELETE],\n    shouldHandleEvent(event: PluginKeyboardEvent, editor: IEditor) {\n        const range = editor.getSelectionRange();\n        if (!range?.collapsed) {\n            return false;\n        }\n        const checkBefore = event.rawEvent.which === Keys.DELETE;\n        const isDelimiter = getIsDelimiterAtCursor(event, editor, checkBefore);\n\n        if (isDelimiter) {\n            const delimiter = cacheDelimiter(event, checkBefore);\n            const entityElement = checkBefore\n                ? delimiter?.nextElementSibling\n                : delimiter?.previousElementSibling;\n\n            return !!cacheEntityBetweenDelimiter(event, editor, checkBefore, entityElement);\n        }\n\n        return false;\n    },\n    handleEvent(event: PluginKeyboardEvent, editor: IEditor) {\n        const checkBefore = event.rawEvent.which === Keys.DELETE;\n        cacheEntityBetweenDelimiter(\n            event,\n            editor,\n            checkBefore,\n            null,\n            checkBefore ? EntityOperation.RemoveFromStart : EntityOperation.RemoveFromEnd\n        );\n    },\n};\n\nfunction getIsDelimiterAtCursor(event: PluginKeyboardEvent, editor: IEditor, checkBefore: boolean) {\n    const position = editor.getFocusedPosition()?.normalize();\n    cacheGetCheckBefore(event, checkBefore);\n\n    if (!position) {\n        return false;\n    }\n\n    const focusedElement =\n        position.node.nodeType == NodeType.Text\n            ? position.node\n            : position.node == position.element\n            ? position.element.childNodes.item(position.offset)\n            : position.element;\n\n    const data = checkBefore\n        ? {\n              class: DelimiterClasses.DELIMITER_BEFORE,\n              pairClass: DelimiterClasses.DELIMITER_AFTER,\n              isAtEndOrBeginning: position.isAtEnd,\n          }\n        : {\n              class: DelimiterClasses.DELIMITER_AFTER,\n              pairClass: DelimiterClasses.DELIMITER_BEFORE,\n              isAtEndOrBeginning: position.offset == 0,\n          };\n\n    const sibling = getNextSibling(editor, focusedElement, checkBefore);\n    if (data.isAtEndOrBeginning && sibling) {\n        const elAtCursor = editor.getElementAtCursor('.' + data.class, sibling);\n\n        if (elAtCursor && !!shouldHandle(elAtCursor)) {\n            return true;\n        }\n    }\n\n    const entityAtCursor =\n        focusedElement && editor.getElementAtCursor('.' + data.class, focusedElement);\n    return !!shouldHandle(entityAtCursor);\n\n    function shouldHandle(element: HTMLElement | null | undefined) {\n        if (!element) {\n            return false;\n        }\n\n        const { delimiterPair } = getRelatedElements(element, checkBefore, editor);\n\n        return (\n            delimiterPair &&\n            (delimiterPair.className || '').indexOf(data.pairClass) > -1 &&\n            cacheDelimiter(event, checkBefore, element)\n        );\n    }\n}\n\nfunction getNextSibling(editor: IEditor, element: Node, checkBefore: boolean) {\n    const traverser = getBlockTraverser(editor, element);\n    if (!traverser) {\n        return undefined;\n    }\n\n    const traverseFn = (t: IContentTraverser) =>\n        checkBefore ? t.getNextInlineElement() : t.getPreviousInlineElement();\n\n    let currentInline = traverser.currentInlineElement;\n    while (currentInline && currentInline.getContainerNode() === element) {\n        currentInline = traverseFn(traverser);\n    }\n    return currentInline?.getContainerNode();\n}\n\nfunction getBlockTraverser(editor: IEditor, element: Node | null | undefined) {\n    if (!element) {\n        return undefined;\n    }\n    const blockElement = editor.getBlockElementAtNode(element)?.getStartNode();\n    if (!blockElement || !isBlockElement(blockElement)) {\n        return undefined;\n    }\n    return ContentTraverser.createBodyTraverser(blockElement, element);\n}\n\nfunction cacheDelimiter(event: PluginEvent, checkBefore: boolean, delimiter?: HTMLElement | null) {\n    return cacheGetEventData(event, 'delimiter_cache_key_' + checkBefore, () => delimiter);\n}\n\nfunction cacheEntityBetweenDelimiter(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    checkBefore: boolean,\n    entity?: Element | null,\n    operation?: EntityOperation\n) {\n    const element = cacheGetEventData(\n        event,\n        'entity_delimiter_cache_key_' + checkBefore,\n        () => entity && editor.getElementAtCursor(getEntitySelector(), entity)\n    );\n\n    if (element && operation !== undefined) {\n        const entity = getEntityFromElement(element);\n\n        if (entity) {\n            triggerOperation(entity, editor, operation, event);\n        }\n    }\n\n    return element;\n}\n\nfunction triggerOperation(\n    entity: Entity,\n    editor: IEditor,\n    operation: EntityOperation,\n    event: PluginKeyboardEvent\n) {\n    const { nextElementSibling, previousElementSibling } = entity.wrapper;\n    editor.triggerPluginEvent(PluginEventType.EntityOperation, {\n        operation,\n        rawEvent: event.rawEvent,\n        entity,\n    });\n\n    if (entity.isReadonly && !isBlockElement(entity.wrapper)) {\n        if (event.rawEvent.defaultPrevented) {\n            editor.runAsync(() => {\n                if (!editor.contains(entity.wrapper)) {\n                    removeDelimiters(nextElementSibling, previousElementSibling);\n                } else {\n                    const [delimiterAfter] = addDelimiters(entity.wrapper);\n                    if (delimiterAfter) {\n                        editor.select(delimiterAfter, PositionType.After);\n                    }\n                }\n            });\n        } else if (\n            getDelimiterFromElement(nextElementSibling) &&\n            getDelimiterFromElement(previousElementSibling)\n        ) {\n            editor.select(createRange(<Node>previousElementSibling, <Node>nextElementSibling));\n        }\n    }\n}\n\nfunction removeDelimiters(\n    nextElementSibling: Element | null,\n    previousElementSibling: Element | null\n) {\n    [nextElementSibling, previousElementSibling].forEach(sibling => {\n        if (getDelimiterFromElement(sibling)) {\n            sibling?.parentElement?.removeChild(sibling);\n        }\n    });\n}\n\nfunction cacheGetCheckBefore(event: PluginKeyboardEvent, checkBefore?: boolean): boolean {\n    return !!cacheGetEventData(event, 'Check_Before', () => checkBefore);\n}\n\nfunction getRelatedElements(delimiter: HTMLElement, checkBefore: boolean, editor: IEditor) {\n    let entity: Element | null = null;\n    let delimiterPair: Element | null = null;\n    const traverser = getBlockTraverser(editor, delimiter);\n    if (!traverser) {\n        return { delimiterPair, entity };\n    }\n\n    const selector = `.${\n        checkBefore ? DelimiterClasses.DELIMITER_AFTER : DelimiterClasses.DELIMITER_BEFORE\n    }`;\n    const traverseFn = (t: IContentTraverser) =>\n        checkBefore ? t.getNextInlineElement() : t.getPreviousInlineElement();\n    const getElementFromInline = (element: InlineElement, selector: string) => {\n        const node = element?.getContainerNode();\n        return (node && editor.getElementAtCursor(selector, node)) ?? null;\n    };\n    const entitySelector = getEntitySelector();\n\n    let current = traverser.currentInlineElement;\n    while (current && (!entity || !delimiterPair)) {\n        entity = entity || getElementFromInline(current, entitySelector);\n        delimiterPair = delimiterPair || getElementFromInline(current, selector);\n\n        // If we found the entity but the next inline after the entity is not a delimiter,\n        // it means that the delimiter pair got removed or is invalid, return null instead.\n        if (entity && !delimiterPair && !getElementFromInline(current, entitySelector)) {\n            delimiterPair = null;\n            break;\n        }\n        current = traverseFn(traverser);\n    }\n\n    return { entity, delimiterPair };\n}\n\n/**\n * @internal\n */\nexport const EntityFeatures: Record<\n    keyof EntityFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    clickOnEntity: ClickOnEntityFeature,\n    escapeFromEntity: EscapeFromEntityFeature,\n    enterBeforeReadonlyEntity: EnterBeforeReadonlyEntityFeature,\n    backspaceAfterEntity: BackspaceAfterEntityFeature,\n    deleteBeforeEntity: DeleteBeforeEntityFeature,\n    moveBetweenDelimitersFeature: MoveBetweenDelimitersFeature,\n    removeEntityBetweenDelimiters: RemoveEntityBetweenDelimitersFeature,\n};\n","import getAutoBulletListStyle from '../utils/getAutoBulletListStyle';\nimport getAutoNumberingListStyle from '../utils/getAutoNumberingListStyle';\nimport {\n    Browser,\n    cacheGetEventData,\n    convertDecimalsToAlpha,\n    convertDecimalsToRoman,\n    createNumberDefinition,\n    createObjectDefinition,\n    createVListFromRegion,\n    findClosestElementAncestor,\n    getComputedStyle,\n    getMetadata,\n    getTagOfNode,\n    isBlockElement,\n    isNodeEmpty,\n    isPositionAtBeginningOf,\n    Position,\n    safeInstanceOf,\n    VList,\n    VListChain,\n} from 'roosterjs-editor-dom';\nimport {\n    blockFormat,\n    commitListChains,\n    setIndentation,\n    toggleBullet,\n    toggleNumbering,\n    toggleListType,\n} from 'roosterjs-editor-api';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    ListFeatureSettings,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\nimport {\n    Indentation,\n    Keys,\n    QueryScope,\n    ListType,\n    ExperimentalFeatures,\n    PositionType,\n    NumberingListType,\n    BulletListType,\n    KnownAnnounceStrings,\n    ChangeSource,\n} from 'roosterjs-editor-types';\n\nconst PREVIOUS_BLOCK_CACHE_KEY = 'previousBlock';\nconst NEXT_BLOCK_CACHE_KEY = 'nextBlock';\n\ninterface ListStyleMetadata {\n    orderedStyleType?: NumberingListType;\n    unorderedStyleType?: BulletListType;\n}\n\nconst ListStyleDefinitionMetadata = createObjectDefinition<ListStyleMetadata>(\n    {\n        orderedStyleType: createNumberDefinition(\n            true /** isOptional */,\n            undefined /** value **/,\n            NumberingListType.Min,\n            NumberingListType.Max\n        ),\n        unorderedStyleType: createNumberDefinition(\n            true /** isOptional */,\n            undefined /** value **/,\n            BulletListType.Min,\n            BulletListType.Max\n        ),\n    },\n    true /** isOptional */,\n    true /** allowNull */\n);\n\n/**\n * @internal Exported for unit testing\n * @returns\n */\nexport const getAnnounceDataForList = (editor: IEditor) => {\n    const li = editor.getElementAtCursor('li') as HTMLLIElement;\n    const list = editor.getElementAtCursor('OL,UL', li) as\n        | undefined\n        | HTMLOListElement\n        | HTMLUListElement;\n    if (li && safeInstanceOf(list, 'HTMLOListElement')) {\n        const vList = new VList(list);\n        const listItemIndex = vList.getListItemIndex(li);\n        let stringToAnnounce = listItemIndex.toString();\n        switch (list.style.listStyleType) {\n            case 'lower-alpha':\n            case 'lower-latin':\n            case 'upper-alpha':\n            case 'upper-latin':\n                stringToAnnounce = convertDecimalsToAlpha(listItemIndex - 1);\n                break;\n            case 'lower-roman':\n            case 'upper-roman':\n                stringToAnnounce = convertDecimalsToRoman(listItemIndex);\n                break;\n        }\n\n        return {\n            defaultStrings: KnownAnnounceStrings.AnnounceListItemNumberingIndentation,\n            formatStrings: [stringToAnnounce],\n        };\n    } else if (safeInstanceOf(list, 'HTMLUListElement')) {\n        return {\n            defaultStrings: KnownAnnounceStrings.AnnounceListItemBulletIndentation,\n        };\n    }\n    return undefined;\n};\n\nconst shouldHandleIndentationEvent = (indenting: boolean) => (\n    event: PluginKeyboardEvent,\n    editor: IEditor\n) => {\n    const { keyCode, altKey, shiftKey, ctrlKey, metaKey } = event.rawEvent;\n    return (\n        !ctrlKey &&\n        !metaKey &&\n        (keyCode === Keys.TAB\n            ? !altKey && shiftKey === !indenting\n            : shiftKey && altKey && keyCode === (indenting ? Keys.RIGHT : Keys.LEFT)) &&\n        cacheGetListElement(event, editor)\n    );\n};\n\nconst handleIndentationEvent = (indenting: boolean) => (\n    event: PluginKeyboardEvent,\n    editor: IEditor\n) => {\n    let currentElement: Node | null = null;\n    const isRTL =\n        event.rawEvent.keyCode !== Keys.TAB &&\n        (currentElement = editor.getElementAtCursor()) &&\n        getComputedStyle(currentElement, 'direction') == 'rtl';\n\n    editor.addUndoSnapshot(\n        () => {\n            setIndentation(\n                editor,\n                isRTL == indenting ? Indentation.Decrease : Indentation.Increase\n            );\n        },\n        ChangeSource.Format,\n        false /* canUndoByBackspace */,\n        {\n            getAnnounceData: () => getAnnounceDataForList(editor),\n        }\n    );\n\n    event.rawEvent.preventDefault();\n};\n\n/**\n * IndentWhenTab edit feature, provides the ability to indent current list when user press TAB\n */\nconst IndentWhenTab: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: shouldHandleIndentationEvent(true),\n    handleEvent: handleIndentationEvent(true),\n};\n\n/**\n * OutdentWhenShiftTab edit feature, provides the ability to outdent current list when user press Shift+TAB\n */\nconst OutdentWhenShiftTab: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: shouldHandleIndentationEvent(false),\n    handleEvent: handleIndentationEvent(false),\n    allowFunctionKeys: true,\n};\n\n/**\n * indentWhenAltShiftRight edit feature, provides the ability to indent or outdent current list when user press Alt+shift+Right\n */\nconst IndentWhenAltShiftRight: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.RIGHT],\n    shouldHandleEvent: shouldHandleIndentationEvent(true),\n    handleEvent: handleIndentationEvent(true),\n    allowFunctionKeys: true,\n    defaultDisabled: Browser.isMac,\n};\n\n/**\n * outdentWhenAltShiftLeft edit feature, provides the ability to indent or outdent current list when user press Alt+shift+Left\n */\nconst OutdentWhenAltShiftLeft: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.LEFT],\n    shouldHandleEvent: shouldHandleIndentationEvent(false),\n    handleEvent: handleIndentationEvent(false),\n    allowFunctionKeys: true,\n    defaultDisabled: Browser.isMac,\n};\n\n/**\n * MergeInNewLine edit feature, provides the ability to merge current line into a new line when user press\n * BACKSPACE at beginning of a list item\n */\nconst MergeInNewLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        let li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        let range = editor.getSelectionRange();\n        return li && range?.collapsed && isPositionAtBeginningOf(Position.getStart(range), li);\n    },\n    handleEvent: (event, editor) => {\n        let li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        if (li?.previousSibling) {\n            blockFormat(editor, (region, start, end) => {\n                const vList = createVListFromRegion(\n                    region,\n                    false /*includeSiblingList*/,\n                    li ?? undefined\n                );\n                if (vList && start && end) {\n                    vList.setIndentation(start, end, Indentation.Decrease, true /*softOutdent*/);\n                    vList.writeBack(\n                        editor.isFeatureEnabled(ExperimentalFeatures.ReuseAllAncestorListElements),\n                        editor.isFeatureEnabled(ExperimentalFeatures.DisableListChain)\n                    );\n                    event.rawEvent.preventDefault();\n                }\n            });\n        } else {\n            toggleListAndPreventDefault(event, editor);\n        }\n    },\n    defaultDisabled: true,\n};\n\n/**\n * OutdentWhenBackOn1stEmptyLine edit feature, provides the ability to outdent current item if user press\n * BACKSPACE at the first and empty line of a list\n */\nconst OutdentWhenBackOn1stEmptyLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        let li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        return (\n            li &&\n            isNodeEmpty(li) &&\n            !li.previousSibling &&\n            !li.getElementsByTagName('blockquote').length\n        );\n    },\n    handleEvent: toggleListAndPreventDefault,\n};\n\n/**\n * MaintainListChainWhenDelete edit feature, provides the ability to indent the list if user press\n * DELETE before the first item of a list\n */\nconst MaintainListChainWhenDelete: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.DELETE],\n    shouldHandleEvent: (event, editor) => {\n        const li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        const range = editor.getSelectionRange();\n        if (li || !range) {\n            return false;\n        }\n        const isAtEnd = Position.getEnd(range).isAtEnd;\n        const nextSibling = isAtEnd ? getCacheNextSibling(event, editor) : undefined;\n        const isAtEndAndBeforeLI = editor.getElementAtCursor('LI', nextSibling, event);\n        return isAtEndAndBeforeLI;\n    },\n    handleEvent: (event, editor) => {\n        const chains = getListChains(editor);\n        editor.runAsync(editor => commitListChains(editor, chains));\n    },\n};\n\n/**\n * OutdentWhenEnterOnEmptyLine edit feature, provides the ability to outdent current item if user press\n * ENTER at the beginning of an empty line of a list\n */\nconst OutdentWhenEnterOnEmptyLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) => {\n        let li = editor.getElementAtCursor('LI', undefined /*startFrom*/, event);\n        return !event.rawEvent.shiftKey && li && isNodeEmpty(li);\n    },\n    handleEvent: (event, editor) => {\n        editor.addUndoSnapshot(\n            () => toggleListAndPreventDefault(event, editor, false /* includeSiblingLists */),\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n    },\n    defaultDisabled: !Browser.isIE && !Browser.isChrome,\n};\n\n/**\n * @deprecated Use AutoBulletList and AutoNumberingList instead\n */\nconst AutoBullet: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.SPACE],\n    shouldHandleEvent: (event, editor) => {\n        return false;\n    },\n    handleEvent: (event, editor) => {},\n    defaultDisabled: true,\n};\n\n/**\n * AutoBulletList edit feature, provides the ability to automatically convert current line into a bullet list.\n */\nconst AutoBulletList: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.SPACE],\n    shouldHandleEvent: (event, editor) => {\n        if (!cacheGetListElement(event, editor)) {\n            return shouldTriggerList(event, editor, getAutoBulletListStyle, ListType.Unordered);\n        }\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        editor.insertContent('&nbsp;');\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(\n            () => {\n                let searcher = editor.getContentSearcherOfCursor();\n                if (!searcher) {\n                    return;\n                }\n                let textBeforeCursor = searcher.getSubStringBefore(5);\n                let textRange = searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/);\n                const listStyle = getAutoBulletListStyle(textBeforeCursor);\n\n                if (textRange) {\n                    prepareAutoBullet(editor, textRange);\n                    toggleBullet(\n                        editor,\n                        listStyle ?? undefined,\n                        'autoToggleList' /** apiNameOverride */\n                    );\n                }\n                searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/)?.deleteContents();\n            },\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n    },\n};\n\n/**\n * AutoNumberingList edit feature, provides the ability to automatically convert current line into a numbering list.\n */\nconst AutoNumberingList: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.SPACE],\n    shouldHandleEvent: (event, editor) => {\n        if (!cacheGetListElement(event, editor)) {\n            return shouldTriggerList(event, editor, getAutoNumberingListStyle, ListType.Ordered);\n        }\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        editor.insertContent('&nbsp;');\n        event.rawEvent.preventDefault();\n        editor.addUndoSnapshot(\n            () => {\n                const searcher = editor.getContentSearcherOfCursor();\n                if (!searcher) {\n                    return;\n                }\n                const textBeforeCursor = searcher.getSubStringBefore(5);\n                const textRange = searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/);\n\n                if (textRange) {\n                    const number = isFirstItemOfAList(textBeforeCursor)\n                        ? 1\n                        : parseInt(textBeforeCursor);\n\n                    const isLi = getPreviousListItem(editor, textRange);\n                    const listStyle = getAutoNumberingListStyle(textBeforeCursor) ?? undefined;\n                    prepareAutoBullet(editor, textRange);\n                    toggleNumbering(\n                        editor,\n                        isLi && number !== 1 ? undefined : number /** startNumber */,\n                        listStyle,\n                        'autoToggleList' /** apiNameOverride */\n                    );\n                }\n                searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/)?.deleteContents();\n            },\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        );\n    },\n};\n\nconst getPreviousListItem = (editor: IEditor, textRange: Range) => {\n    const blockElement = editor\n        .getBodyTraverser(textRange?.startContainer)\n        .getPreviousBlockElement();\n    const previousNode = blockElement?.getEndNode() ?? null;\n    return getTagOfNode(previousNode) === 'LI' ? previousNode : undefined;\n};\n\nconst getPreviousListType = (editor: IEditor, textRange: Range, listType: ListType) => {\n    const type = listType === ListType.Ordered ? 'orderedStyleType' : 'unorderedStyleType';\n    const listItem = getPreviousListItem(editor, textRange);\n    const list = listItem\n        ? findClosestElementAncestor(\n              listItem,\n              undefined /** root*/,\n              listType === ListType.Ordered ? 'ol' : 'ul'\n          )\n        : null;\n    const metadata = list ? getMetadata(list, ListStyleDefinitionMetadata) : null;\n    return metadata ? metadata[type] : null;\n};\n\nconst isFirstItemOfAList = (item: string) => {\n    const number = parseInt(item);\n    if (number && number === 1) {\n        return 1;\n    } else {\n        const letter = item.replace(/\\(|\\)|\\-|\\./g, '').trim();\n        return letter.length === 1 && ['i', 'a', 'I', 'A'].indexOf(letter) > -1 ? 1 : undefined;\n    }\n};\n\n/**\n * Maintain the list numbers in list chain\n * e.g. we have two lists:\n * 1, 2, 3 and 4, 5, 6\n * Now we delete list item 2, so the first one becomes \"1, 2\".\n * This edit feature can maintain the list number of the second list to become \"3, 4, 5\"\n */\nconst MaintainListChain: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER, Keys.TAB, Keys.DELETE, Keys.BACKSPACE, Keys.RANGE],\n    shouldHandleEvent: (event, editor) =>\n        editor\n            .queryElements('li', QueryScope.OnSelection)\n            .filter(li => !li.getElementsByTagName('blockquote').length).length > 0,\n    handleEvent: (event, editor) => {\n        const chains = getListChains(editor);\n        editor.runAsync(editor => commitListChains(editor, chains));\n    },\n};\n\nfunction getListChains(editor: IEditor) {\n    return VListChain.createListChains(editor.getSelectedRegions());\n}\n\nfunction getCacheNextSibling(event: PluginKeyboardEvent, editor: IEditor): Node | undefined {\n    const element = cacheGetEventData(event, 'nextSibling', () => {\n        const range = editor.getSelectionRange();\n        const pos = range && Position.getEnd(range).normalize();\n        const traverser = pos && editor.getBodyTraverser(pos.node);\n        return traverser?.getNextBlockElement()?.getStartNode();\n    });\n    return element;\n}\n\nfunction prepareAutoBullet(editor: IEditor, range: Range) {\n    const block = editor.getBlockElementAtNode(range.startContainer);\n    const endNode = block?.getEndNode();\n    if (endNode && getTagOfNode(endNode) != 'BR') {\n        const br = editor.getDocument().createElement('BR');\n        if (isBlockElement(endNode)) {\n            endNode.appendChild(br);\n        } else {\n            endNode.parentNode?.insertBefore(br, endNode.nextSibling);\n        }\n        editor.select(range.startContainer, range.startOffset);\n    }\n}\n\nfunction toggleListAndPreventDefault(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    includeSiblingLists: boolean = true\n) {\n    let listInfo = cacheGetListElement(event, editor);\n    if (listInfo) {\n        let listElement = listInfo[0];\n        let tag = getTagOfNode(listElement);\n\n        if (tag == 'UL' || tag == 'OL') {\n            toggleListType(\n                editor,\n                tag == 'UL' ? ListType.Unordered : ListType.Ordered,\n                undefined /* startNumber */,\n                includeSiblingLists\n            );\n        }\n\n        editor.focus();\n        event.rawEvent.preventDefault();\n    }\n}\n\nfunction cacheGetListElement(event: PluginKeyboardEvent, editor: IEditor) {\n    let li = editor.getElementAtCursor('LI,TABLE', undefined /*startFrom*/, event);\n    let listElement = li && getTagOfNode(li) == 'LI' && editor.getElementAtCursor('UL,OL', li);\n    return listElement ? [listElement, li] : null;\n}\n\nfunction shouldTriggerList<\n    T extends ListType,\n    K extends T extends ListType.Ordered ? NumberingListType : BulletListType\n>(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    getListStyle: (\n        text: string,\n        previousListChain?: VListChain[],\n        previousListStyle?: K\n    ) => K | null,\n    listType: T\n) {\n    const searcher = editor.getContentSearcherOfCursor(event);\n    if (!searcher) {\n        return false;\n    }\n    const textBeforeCursor = searcher.getSubStringBefore(4);\n    const traverser = editor.getBlockTraverser();\n    const text =\n        traverser && traverser.currentBlockElement\n            ? traverser.currentBlockElement.getTextContent().slice(0, textBeforeCursor.length)\n            : null;\n    const isATheBeginning = text && text === textBeforeCursor;\n    const listChains = getListChains(editor);\n    const textRange = searcher.getRangeFromText(textBeforeCursor, true /*exactMatch*/);\n    const previousListType =\n        textRange && <K | null>getPreviousListType(editor, textRange, listType);\n    const isFirstItem = isFirstItemOfAList(textBeforeCursor);\n    const listStyle = getListStyle(textBeforeCursor, listChains, previousListType ?? undefined);\n    const shouldTriggerNewListStyle =\n        isFirstItem ||\n        !previousListType ||\n        previousListType === listStyle ||\n        listType === ListType.Unordered;\n\n    return (\n        isATheBeginning &&\n        !searcher.getNearestNonTextInlineElement() &&\n        listStyle &&\n        shouldTriggerNewListStyle\n    );\n}\n\n/**\n * MergeListOnBackspaceAfterList edit feature, provides the ability to merge list on backspace on block after a list.\n */\nconst MergeListOnBackspaceAfterList: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        const target = editor.getElementAtCursor();\n        if (target) {\n            const cursorBlock = editor.getBlockElementAtNode(target)?.getStartNode() as HTMLElement;\n            const previousBlock = cursorBlock?.previousElementSibling ?? null;\n\n            if (isList(previousBlock)) {\n                const range = editor.getSelectionRange();\n                const searcher = editor.getContentSearcherOfCursor(event);\n                const textBeforeCursor = searcher?.getSubStringBefore(4);\n                const nearestInline = searcher?.getNearestNonTextInlineElement();\n\n                if (range && range.collapsed && textBeforeCursor === '' && !nearestInline) {\n                    const tempBlock = cursorBlock?.nextElementSibling;\n                    const nextBlock = isList(tempBlock) ? tempBlock : tempBlock?.firstChild;\n\n                    if (\n                        isList(nextBlock) &&\n                        getTagOfNode(previousBlock) == getTagOfNode(nextBlock)\n                    ) {\n                        const element = cacheGetEventData<HTMLOListElement | HTMLUListElement>(\n                            event,\n                            PREVIOUS_BLOCK_CACHE_KEY,\n                            () => previousBlock\n                        );\n                        const nextElement = cacheGetEventData<HTMLOListElement | HTMLUListElement>(\n                            event,\n                            NEXT_BLOCK_CACHE_KEY,\n                            () => nextBlock\n                        );\n\n                        return !!element && !!nextElement;\n                    }\n                }\n            }\n        }\n\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        editor.runAsync(editor => {\n            const previousList = cacheGetEventData<HTMLOListElement | HTMLUListElement | null>(\n                event,\n                PREVIOUS_BLOCK_CACHE_KEY,\n                () => null\n            );\n            const targetBlock = cacheGetEventData<HTMLOListElement | HTMLUListElement | null>(\n                event,\n                NEXT_BLOCK_CACHE_KEY,\n                () => null\n            );\n\n            const rangeBeforeWriteBack = editor.getSelectionRange();\n\n            if (previousList && targetBlock && rangeBeforeWriteBack) {\n                const fvList = new VList(previousList);\n                fvList.mergeVList(new VList(targetBlock));\n\n                let span = editor.getDocument().createElement('span');\n                span.id = 'restoreRange';\n                rangeBeforeWriteBack.insertNode(span);\n\n                fvList.writeBack();\n\n                span = editor.queryElements('#restoreRange')[0];\n\n                if (span.parentElement) {\n                    editor.select(new Position(span, PositionType.After));\n                    span.parentElement.removeChild(span);\n                }\n            }\n        });\n    },\n};\n\n/**\n * @internal\n */\nexport const ListFeatures: Record<\n    keyof ListFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    autoBullet: AutoBullet,\n    indentWhenTab: IndentWhenTab,\n    outdentWhenShiftTab: OutdentWhenShiftTab,\n    outdentWhenBackspaceOnEmptyFirstLine: OutdentWhenBackOn1stEmptyLine,\n    outdentWhenEnterOnEmptyLine: OutdentWhenEnterOnEmptyLine,\n    mergeInNewLineWhenBackspaceOnFirstChar: MergeInNewLine,\n    maintainListChain: MaintainListChain,\n    maintainListChainWhenDelete: MaintainListChainWhenDelete,\n    autoNumberingList: AutoNumberingList,\n    autoBulletList: AutoBulletList,\n    mergeListOnBackspaceAfterList: MergeListOnBackspaceAfterList,\n    outdentWhenAltShiftLeft: OutdentWhenAltShiftLeft,\n    indentWhenAltShiftRight: IndentWhenAltShiftRight,\n};\n\nfunction isList(element: Node | null | undefined): element is HTMLOListElement | HTMLOListElement {\n    return (\n        !!element &&\n        (safeInstanceOf(element, 'HTMLOListElement') || safeInstanceOf(element, 'HTMLUListElement'))\n    );\n}\n","import { cacheGetEventData, createRange, Position, wrap } from 'roosterjs-editor-dom';\nimport { ChangeSource, Keys, PositionType } from 'roosterjs-editor-types';\nimport type { CompatibleKeys } from 'roosterjs-editor-types/lib/compatibleTypes';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    MarkdownFeatureSettings,\n    NodePosition,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\n\nconst ZERO_WIDTH_SPACE = '\\u200B';\n\nfunction generateBasicMarkdownFeature(\n    key: Keys | CompatibleKeys,\n    triggerCharacter: string,\n    elementTag: string,\n    useShiftKey: boolean\n): BuildInEditFeature<PluginKeyboardEvent> {\n    return {\n        keys: [key],\n        shouldHandleEvent: (event, editor) =>\n            event.rawEvent.shiftKey === useShiftKey &&\n            !!cacheGetRangeForMarkdownOperation(event, editor, triggerCharacter),\n        handleEvent: (event, editor) => {\n            // runAsync is here to allow the event to complete so autocomplete will present the trigger character.\n            editor.runAsync(editor => {\n                handleMarkdownEvent(event, editor, triggerCharacter, elementTag);\n            });\n        },\n    };\n}\n\nfunction cacheGetRangeForMarkdownOperation(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    triggerCharacter: string\n): Range | null {\n    return cacheGetEventData(event, 'MARKDOWN_RANGE', (): Range | null => {\n        const searcher = editor.getContentSearcherOfCursor(event);\n\n        let startPosition: NodePosition | null = null;\n        let endPosition: NodePosition | null = null;\n        searcher?.forEachTextInlineElement(textInlineElement => {\n            if (endPosition && startPosition) {\n                return true;\n            }\n            const inlineTextContent = textInlineElement.getTextContent();\n\n            // special case for immediately preceding character being whitespace\n            if (inlineTextContent[inlineTextContent.length - 1].trim().length == 0) {\n                return false;\n            }\n\n            //if the text is pasted, it might create a inner element inside the text element,\n            // then is necessary to check the parent block to get whole text\n            const parentBlockText = textInlineElement.getParentBlock().getTextContent();\n\n            // special case for consecutive trigger characters\n            // check parent block in case of pasted text\n            if (parentBlockText[parentBlockText.length - 1].trim() === triggerCharacter) {\n                return false;\n            }\n\n            if (!endPosition) {\n                endPosition = textInlineElement.getStartPosition().move(inlineTextContent.length);\n            }\n            if (inlineTextContent[0] == triggerCharacter) {\n                startPosition = textInlineElement.getStartPosition();\n            } else {\n                let contentIndex = inlineTextContent.length - 1;\n                for (; contentIndex > 0; contentIndex--) {\n                    if (startPosition) {\n                        return true;\n                    }\n                    if (\n                        inlineTextContent[contentIndex] == triggerCharacter &&\n                        inlineTextContent[contentIndex - 1].trim().length == 0\n                    ) {\n                        startPosition = textInlineElement.getStartPosition().move(contentIndex);\n                        return true;\n                    }\n                }\n            }\n        });\n        return startPosition && endPosition && createRange(startPosition, endPosition);\n    });\n}\n\nfunction handleMarkdownEvent(\n    event: PluginKeyboardEvent,\n    editor: IEditor,\n    triggerCharacter: string,\n    elementTag: string\n) {\n    editor.addUndoSnapshot(\n        () => {\n            const range = cacheGetRangeForMarkdownOperation(event, editor, triggerCharacter);\n            if (!range) {\n                return;\n            }\n            const lastTypedTriggerPosition = new Position(range.endContainer, PositionType.End);\n            const hasLastTypedTrigger = range.endOffset + 1 <= lastTypedTriggerPosition.offset;\n            if (!!range && hasLastTypedTrigger) {\n                // get the text content range\n                const textContentRange = range.cloneRange();\n                textContentRange.setStart(\n                    textContentRange.startContainer,\n                    textContentRange.startOffset + 1\n                );\n\n                const text = textContentRange.extractContents().textContent;\n                const textNode = editor.getDocument().createTextNode(text ?? '');\n\n                // extract content and put it into a new element.\n                const elementToWrap = wrap(textNode, elementTag);\n                //include last typed character\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                range.deleteContents();\n\n                // ZWS here ensures we don't end up inside the newly created node.\n                const nonPrintedSpaceTextNode = editor\n                    .getDocument()\n                    .createTextNode(ZERO_WIDTH_SPACE);\n                range.insertNode(nonPrintedSpaceTextNode);\n                range.insertNode(elementToWrap);\n\n                editor.select(nonPrintedSpaceTextNode, PositionType.End);\n            }\n        },\n        ChangeSource.Format,\n        true /*canUndoByBackspace*/\n    );\n}\n\n/**\n * Markdown bold feature. Make bold text with markdown shortcuts.\n */\nconst MarkdownBold: BuildInEditFeature<PluginKeyboardEvent> = generateBasicMarkdownFeature(\n    Keys.EIGHT_ASTERISK,\n    '*',\n    'b',\n    true /* useShiftKey */\n);\n\n/**\n * Markdown italics feature. Make italic text with markdown shortcuts.\n */\nconst MarkdownItalic: BuildInEditFeature<PluginKeyboardEvent> = generateBasicMarkdownFeature(\n    Keys.DASH_UNDERSCORE,\n    '_',\n    'i',\n    true /* useShiftKey */\n);\n\n/**\n * Markdown strikethrough feature. MAke strikethrough text with markdown shortcuts.\n */\nconst MarkdownStrikethrough: BuildInEditFeature<PluginKeyboardEvent> = generateBasicMarkdownFeature(\n    Keys.GRAVE_TILDE,\n    '~',\n    's',\n    true /* useShiftKey */\n);\n\n/**\n * Markdown inline code feature. Marks specific text as inline code with markdown shortcuts.\n */\nconst MarkdownInlineCode: BuildInEditFeature<PluginKeyboardEvent> = generateBasicMarkdownFeature(\n    Keys.GRAVE_TILDE,\n    '`',\n    'code',\n    false /* useShiftKey */\n);\n\n/**\n * @internal\n */\nexport const MarkdownFeatures: Record<\n    keyof MarkdownFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    markdownBold: MarkdownBold,\n    markdownItalic: MarkdownItalic,\n    markdownStrikethru: MarkdownStrikethrough,\n    markdownInlineCode: MarkdownInlineCode,\n};\n","import { clearFormat } from 'roosterjs-editor-api';\nimport { Keys, PositionType } from 'roosterjs-editor-types';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    PluginKeyboardEvent,\n    QuoteFeatureSettings,\n} from 'roosterjs-editor-types';\nimport {\n    cacheGetEventData,\n    getTagOfNode,\n    isNodeEmpty,\n    safeInstanceOf,\n    splitBalancedNodeRange,\n    toArray,\n    unwrap,\n    wrap,\n} from 'roosterjs-editor-dom';\n\nconst QUOTE_TAG = 'BLOCKQUOTE';\nconst STRUCTURED_TAGS = [QUOTE_TAG, 'LI', 'TD', 'TH'].join(',');\n\n/**\n * UnquoteWhenBackOnEmpty1stLine edit feature, provides the ability to Unquote current line when\n * user press BACKSPACE on first and empty line of a BLOCKQUOTE\n */\nconst UnquoteWhenBackOnEmpty1stLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event, editor) => {\n        let childOfQuote = cacheGetQuoteChild(event, editor);\n        return childOfQuote && isNodeEmpty(childOfQuote) && !childOfQuote.previousSibling;\n    },\n    handleEvent: splitQuote,\n};\n\n/**\n * UnquoteWhenEnterOnEmptyLine edit feature, provides the ability to Unquote current line when\n * user press ENTER on an empty line of a BLOCKQUOTE\n */\nconst UnquoteWhenEnterOnEmptyLine: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: (event, editor) => {\n        let childOfQuote = cacheGetQuoteChild(event, editor);\n        let shift = event.rawEvent.shiftKey;\n        return !shift && childOfQuote && isNodeEmpty(childOfQuote);\n    },\n    handleEvent: (event, editor) =>\n        editor.addUndoSnapshot(\n            () => splitQuote(event, editor),\n            undefined /*changeSource*/,\n            true /*canUndoByBackspace*/\n        ),\n};\n\nfunction cacheGetQuoteChild(event: PluginKeyboardEvent, editor: IEditor): Node | null {\n    return cacheGetEventData(event, 'QUOTE_CHILD', () => {\n        let quote = editor.getElementAtCursor(STRUCTURED_TAGS);\n        if (quote && getTagOfNode(quote) == QUOTE_TAG) {\n            let pos = editor.getFocusedPosition();\n            let block = pos && editor.getBlockElementAtNode(pos.normalize().node);\n            if (block) {\n                let node =\n                    block.getStartNode() == quote\n                        ? block.getStartNode()\n                        : block.collapseToSingleElement();\n                return isNodeEmpty(node) ? node : null;\n            }\n        }\n\n        return null;\n    });\n}\n\nfunction splitQuote(event: PluginKeyboardEvent, editor: IEditor) {\n    editor.addUndoSnapshot(() => {\n        let childOfQuote = cacheGetQuoteChild(event, editor);\n        if (!childOfQuote) {\n            return;\n        }\n        if (getTagOfNode(childOfQuote) == QUOTE_TAG) {\n            childOfQuote = wrap(toArray(childOfQuote.childNodes));\n        }\n        const parent = splitBalancedNodeRange(childOfQuote);\n        const shouldClearFormat = !!parent && isStyledBlockquote(parent);\n        const newParent = parent && unwrap(parent);\n        editor.select(childOfQuote, PositionType.Begin);\n\n        if (shouldClearFormat) {\n            if (safeInstanceOf(newParent, 'HTMLLIElement')) {\n                newParent.style.removeProperty('color');\n            }\n            clearFormat(editor);\n        }\n    });\n    event.rawEvent.preventDefault();\n}\n\nconst isStyledBlockquote = (element: Node) => {\n    if (\n        element &&\n        safeInstanceOf(element, 'HTMLQuoteElement') &&\n        element.style.borderLeft &&\n        element.style.borderColor &&\n        element.style.paddingLeft &&\n        element.style.color\n    ) {\n        return true;\n    }\n    return false;\n};\n\n/**\n * @internal\n */\nexport const QuoteFeatures: Record<\n    keyof QuoteFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    unquoteWhenBackspaceOnEmptyFirstLine: UnquoteWhenBackOnEmpty1stLine,\n    unquoteWhenEnterOnEmptyLine: UnquoteWhenEnterOnEmptyLine,\n};\n","import { Browser, cacheGetEventData } from 'roosterjs-editor-dom';\nimport { FontSizeChange, Keys, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    PluginKeyboardEvent,\n    ShortcutFeatureSettings,\n} from 'roosterjs-editor-types';\nimport {\n    changeFontSize,\n    toggleBold,\n    toggleItalic,\n    toggleUnderline,\n    toggleBullet,\n    toggleNumbering,\n    clearFormat,\n} from 'roosterjs-editor-api';\n\ninterface ShortcutCommand {\n    winKey: number;\n    macKey: number;\n    action: (editor: IEditor) => any;\n}\n\nfunction createCommand(\n    winKey: number,\n    macKey: number,\n    action: (editor: IEditor) => any,\n    disabled: boolean = false\n) {\n    if (disabled) {\n        return null;\n    }\n    return {\n        winKey,\n        macKey,\n        action,\n    };\n}\n\nconst commands: ShortcutCommand[] = [\n    createCommand(Keys.Ctrl | Keys.B, Keys.Meta | Keys.B, toggleBold),\n    createCommand(Keys.Ctrl | Keys.I, Keys.Meta | Keys.I, toggleItalic),\n    createCommand(Keys.Ctrl | Keys.U, Keys.Meta | Keys.U, toggleUnderline),\n    createCommand(Keys.Ctrl | Keys.SPACE, Keys.Meta | Keys.SPACE, clearFormat),\n    createCommand(Keys.Ctrl | Keys.Z, Keys.Meta | Keys.Z, editor => editor.undo()),\n    createCommand(\n        Keys.ALT | Keys.BACKSPACE,\n        Keys.ALT | Keys.BACKSPACE,\n        editor => editor.undo(),\n        Browser.isMac /* Option+Backspace to be handled by browsers on Mac */\n    ),\n    createCommand(Keys.Ctrl | Keys.Y, Keys.Meta | Keys.Shift | Keys.Z, editor => editor.redo()),\n    createCommand(Keys.Ctrl | Keys.PERIOD, Keys.Meta | Keys.PERIOD, toggleBullet),\n    createCommand(Keys.Ctrl | Keys.FORWARD_SLASH, Keys.Meta | Keys.FORWARD_SLASH, toggleNumbering),\n    createCommand(\n        Keys.Ctrl | Keys.Shift | Keys.PERIOD,\n        Keys.Meta | Keys.Shift | Keys.PERIOD,\n        editor => changeFontSize(editor, FontSizeChange.Increase)\n    ),\n    createCommand(\n        Keys.Ctrl | Keys.Shift | Keys.COMMA,\n        Keys.Meta | Keys.Shift | Keys.COMMA,\n        editor => changeFontSize(editor, FontSizeChange.Decrease)\n    ),\n].filter((command): command is ShortcutCommand => !!command);\n\n/**\n * DefaultShortcut edit feature, provides shortcuts for the following features:\n * Ctrl/Meta+B: toggle bold style\n * Ctrl/Meta+I: toggle italic style\n * Ctrl/Meta+U: toggle underline style\n * Ctrl/Meta+Space: clear formatting\n * Alt+Backspace: undo\n * Ctrl/Meta+Z: undo\n * Ctrl+Y/Meta+Shift+Z: redo\n * Ctrl/Meta+PERIOD: toggle bullet list\n * Ctrl/Meta+/: toggle numbering list\n * Ctrl/Meta+Shift+>: increase font size\n * Ctrl/Meta+Shift+<: decrease font size\n */\nconst DefaultShortcut: BuildInEditFeature<PluginKeyboardEvent> = {\n    allowFunctionKeys: true,\n    keys: [\n        Keys.B,\n        Keys.I,\n        Keys.U,\n        Keys.Y,\n        Keys.Z,\n        Keys.COMMA,\n        Keys.PERIOD,\n        Keys.FORWARD_SLASH,\n        Keys.SPACE,\n        Keys.BACKSPACE,\n    ],\n    shouldHandleEvent: cacheGetCommand,\n    handleEvent: (event, editor) => {\n        let command = cacheGetCommand(event);\n        if (command) {\n            command.action(editor);\n            event.rawEvent.preventDefault();\n            event.rawEvent.stopPropagation();\n        }\n    },\n};\n\nfunction cacheGetCommand(event: PluginKeyboardEvent) {\n    return cacheGetEventData(event, 'DEFAULT_SHORT_COMMAND', () => {\n        let e = event.rawEvent;\n        let key =\n            // Need to check AltGraph isn't being pressed since some languages (e.g. Polski) use AltGr\n            // to input some special characters. In that case, ctrlKey and altKey are both true in Edge,\n            // but we should not trigger any shortcut function here. However, we still want to capture\n            // the ALT+BACKSPACE combination.\n            event.eventType == PluginEventType.KeyDown && !e.getModifierState('AltGraph')\n                ? e.which |\n                  (<number>(e.metaKey && Keys.Meta)) |\n                  (<number>(e.shiftKey && Keys.Shift)) |\n                  (<number>(e.ctrlKey && Keys.Ctrl)) |\n                  (<number>(e.altKey && Keys.ALT))\n                : 0;\n        return key && commands.filter(cmd => (Browser.isMac ? cmd.macKey : cmd.winKey) == key)[0];\n    });\n}\n\n/**\n * @internal\n */\nexport const ShortcutFeatures: Record<\n    keyof ShortcutFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    defaultShortcut: DefaultShortcut,\n};\n","import { Keys, KnownCreateElementDataIndex, PositionType } from 'roosterjs-editor-types';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    PluginKeyboardEvent,\n    StructuredNodeFeatureSettings,\n} from 'roosterjs-editor-types';\nimport {\n    cacheGetEventData,\n    isPositionAtBeginningOf,\n    Position,\n    getTagOfNode,\n    createElement,\n    getObjectKeys,\n} from 'roosterjs-editor-dom';\n\nconst CHILD_PARENT_TAG_MAP: { [childTag: string]: string } = {\n    TD: 'TABLE',\n    TH: 'TABLE',\n    LI: 'OL,UL',\n};\nconst CHILD_SELECTOR = getObjectKeys(CHILD_PARENT_TAG_MAP).join(',');\n\n/**\n * InsertLineBeforeStructuredNode edit feature, provides the ability to insert an empty line before\n * a structured element (bullet/numbering list, blockquote, table) if the element is at beginning of\n * document\n */\nconst InsertLineBeforeStructuredNodeFeature: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.ENTER],\n    shouldHandleEvent: cacheGetStructuredElement,\n    handleEvent: (event, editor) => {\n        let element = cacheGetStructuredElement(event, editor);\n        let div = createElement(\n            KnownCreateElementDataIndex.EmptyLine,\n            editor.getDocument()\n        ) as HTMLElement;\n        editor.addUndoSnapshot(() => {\n            element?.parentNode?.insertBefore(div, element);\n            // Select the new line when we are in table. This is the same behavior with Word\n            if (getTagOfNode(element) == 'TABLE') {\n                editor.select(new Position(div, PositionType.Begin).normalize());\n            }\n        });\n        event.rawEvent.preventDefault();\n    },\n    defaultDisabled: true,\n};\n\nfunction cacheGetStructuredElement(event: PluginKeyboardEvent, editor: IEditor) {\n    return cacheGetEventData(event, 'FIRST_STRUCTURE', () => {\n        // Provide a chance to keep browser default behavior by pressing SHIFT\n        let element = event.rawEvent.shiftKey ? null : editor.getElementAtCursor(CHILD_SELECTOR);\n\n        if (element) {\n            let range = editor.getSelectionRange();\n            if (\n                range &&\n                range.collapsed &&\n                isPositionAtBeginningOf(Position.getStart(range), element) &&\n                !editor.getBodyTraverser(element).getPreviousBlockElement()\n            ) {\n                return editor.getElementAtCursor(CHILD_PARENT_TAG_MAP[getTagOfNode(element)]);\n            }\n        }\n\n        return null;\n    });\n}\n\n/**\n * @internal\n */\nexport const StructuredNodeFeatures: Record<\n    keyof StructuredNodeFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    insertLineBeforeStructuredNodeFeature: InsertLineBeforeStructuredNodeFeature,\n};\n","import { editTable, setIndentation } from 'roosterjs-editor-api';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    PluginEvent,\n    TableFeatureSettings,\n    PluginKeyboardEvent,\n    TableSelectionRange,\n} from 'roosterjs-editor-types';\nimport {\n    Keys,\n    NodeType,\n    PositionType,\n    TableOperation,\n    SelectionRangeTypes,\n    Indentation,\n    ExperimentalFeatures,\n} from 'roosterjs-editor-types';\nimport {\n    cacheGetEventData,\n    contains,\n    getTagOfNode,\n    isVoidHtmlElement,\n    isWholeTableSelected,\n    Position,\n    VTable,\n} from 'roosterjs-editor-dom';\n\n/**\n * TabInTable edit feature, provides the ability to jump between cells when user press TAB in table\n */\nconst TabInTable: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && !cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        let shift = event.rawEvent.shiftKey;\n        let td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        let vtable = cacheVTable(event, td);\n\n        for (\n            let step = shift ? -1 : 1, row = vtable.row ?? 0, col = (vtable.col ?? 0) + step;\n            ;\n            col += step\n        ) {\n            const tableCells = vtable.cells ?? [];\n            if (col < 0 || col >= tableCells[row].length) {\n                row += step;\n                if (row < 0) {\n                    editor.select(vtable.table, PositionType.Before);\n                    break;\n                } else if (row >= tableCells.length) {\n                    editTable(editor, TableOperation.InsertBelow);\n                    break;\n                }\n                col = shift ? tableCells[row].length - 1 : 0;\n            }\n            let cell = vtable.getCell(row, col);\n            if (cell.td) {\n                const newPos = new Position(cell.td, PositionType.Begin).normalize();\n                editor.select(newPos);\n                break;\n            }\n        }\n        event.rawEvent.preventDefault();\n    },\n};\n\n/**\n * IndentTableOnTab edit feature, provides the ability to indent the table if it is all cells are selected.\n */\nconst IndentTableOnTab: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        event.rawEvent.preventDefault();\n\n        editor.addUndoSnapshot(() => {\n            let shift = event.rawEvent.shiftKey;\n            let selection = editor.getSelectionRangeEx() as TableSelectionRange;\n            let td = cacheGetTableCell(event, editor);\n            if (!td) {\n                return;\n            }\n            let vtable = cacheVTable(event, td);\n\n            if (shift && editor.getElementAtCursor('blockquote', vtable.table, event)) {\n                setIndentation(editor, Indentation.Decrease);\n            } else if (!shift) {\n                setIndentation(editor, Indentation.Increase);\n            }\n\n            if (selection.coordinates) {\n                editor.select(selection.table, selection.coordinates);\n            }\n        });\n    },\n};\n\n/**\n * UpDownInTable edit feature, provides the ability to jump to cell above/below when user press UP/DOWN\n * in table\n */\nconst UpDownInTable: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.UP, Keys.DOWN],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        cacheGetTableCell(event, editor) && !cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = new VTable(td);\n        const isUp = event.rawEvent.which == Keys.UP;\n        const step = isUp ? -1 : 1;\n        const hasShiftKey = event.rawEvent.shiftKey;\n        const selection = editor.getDocument().defaultView?.getSelection();\n        let targetTd: HTMLTableCellElement | null = null;\n\n        if (selection) {\n            let { anchorNode, anchorOffset } = selection;\n\n            for (\n                let row = vtable.row ?? 0;\n                row >= 0 && vtable.cells && row < vtable.cells.length;\n                row += step\n            ) {\n                let cell = vtable.getCell(row, vtable.col ?? 0);\n                if (cell.td && cell.td != td) {\n                    targetTd = cell.td;\n                    break;\n                }\n            }\n\n            editor.runAsync(editor => {\n                let newContainer = editor.getElementAtCursor();\n                if (\n                    contains(vtable.table, newContainer) &&\n                    !contains(td, newContainer, true /*treatSameNodeAsContain*/)\n                ) {\n                    let newPos = targetTd\n                        ? new Position(targetTd, PositionType.Begin)\n                        : new Position(\n                              vtable.table,\n                              isUp ? PositionType.Before : PositionType.After\n                          );\n                    if (hasShiftKey) {\n                        newPos =\n                            newPos.node.nodeType == NodeType.Element &&\n                            isVoidHtmlElement(newPos.node)\n                                ? new Position(\n                                      newPos.node,\n                                      newPos.isAtEnd ? PositionType.After : PositionType.Before\n                                  )\n                                : newPos;\n                        const selection = editor.getDocument().defaultView?.getSelection();\n                        if (anchorNode) {\n                            selection?.setBaseAndExtent(\n                                anchorNode,\n                                anchorOffset,\n                                newPos.node,\n                                newPos.offset\n                            );\n                        }\n                    } else {\n                        editor.select(newPos.normalize());\n                    }\n                }\n            });\n        }\n    },\n};\n\n/**\n * Requires @see ExperimentalFeatures.DeleteTableWithBackspace\n * Delete a table selected with the table selector pressing Backspace key\n */\nconst DeleteTableWithBackspace: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.BACKSPACE],\n    shouldHandleEvent: (event: PluginKeyboardEvent, editor: IEditor) =>\n        editor.isFeatureEnabled(ExperimentalFeatures.DeleteTableWithBackspace) &&\n        cacheIsWholeTableSelected(event, editor),\n    handleEvent: (event, editor) => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return;\n        }\n        const vtable = new VTable(td);\n        vtable.edit(TableOperation.DeleteTable);\n        vtable.writeBack();\n    },\n};\n\nfunction cacheGetTableCell(event: PluginEvent, editor: IEditor): HTMLTableCellElement | null {\n    return cacheGetEventData(event, 'TABLE_CELL_FOR_TABLE_FEATURES', () => {\n        let pos = editor.getFocusedPosition();\n        let firstTd = pos && editor.getElementAtCursor('TD,TH,LI', pos.node);\n        return (\n            firstTd && (getTagOfNode(firstTd) == 'LI' ? null : (firstTd as HTMLTableCellElement))\n        );\n    });\n}\n\nfunction cacheIsWholeTableSelected(event: PluginEvent, editor: IEditor) {\n    return cacheGetEventData(event, 'WHOLE_TABLE_SELECTED_FOR_FEATURES', () => {\n        const td = cacheGetTableCell(event, editor);\n        if (!td) {\n            return false;\n        }\n        let vtable = cacheVTable(event, td);\n        let selection = editor.getSelectionRangeEx();\n        return (\n            selection.type == SelectionRangeTypes.TableSelection &&\n            selection.coordinates &&\n            isWholeTableSelected(vtable, selection.coordinates)\n        );\n    });\n}\n\nfunction cacheVTable(event: PluginEvent, td: HTMLTableCellElement) {\n    return cacheGetEventData(event, 'VTABLE_FOR_TABLE_FEATURES', () => {\n        return new VTable(td);\n    });\n}\n\n/**\n * @internal\n */\nexport const TableFeatures: Record<\n    keyof TableFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    tabInTable: TabInTable,\n    upDownInTable: UpDownInTable,\n    indentTableOnTab: IndentTableOnTab,\n    deleteTableWithBackspace: DeleteTableWithBackspace,\n};\n","import { setIndentation } from 'roosterjs-editor-api';\nimport {\n    createRange,\n    getEntitySelector,\n    getTagOfNode,\n    Position,\n    queryElements,\n} from 'roosterjs-editor-dom';\nimport type {\n    BuildInEditFeature,\n    IEditor,\n    TextFeatureSettings,\n    PluginKeyboardEvent,\n    NodePosition,\n} from 'roosterjs-editor-types';\nimport {\n    Indentation,\n    Keys,\n    SelectionRangeTypes,\n    ContentPosition,\n    PositionType,\n    ExperimentalFeatures,\n    QueryScope,\n} from 'roosterjs-editor-types';\n\nconst TAB_SPACES = 6;\n\n/**\n * Requires @see ExperimentalFeatures.TabKeyTextFeatures to be enabled\n * Provides additional functionality when press Tab:\n *      If Whole Paragraph selected, indent paragraph,\n *      If range is collapsed, add tab spaces\n *      If range is not collapsed but not all the paragraph is selected, replace selection with Tab spaces\n *      If there are more than one block in the selection, indent all selection\n */\nconst IndentWhenTabText: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event, editor) => {\n        if (\n            editor.isFeatureEnabled(ExperimentalFeatures.TabKeyTextFeatures) &&\n            !event.rawEvent.shiftKey\n        ) {\n            let activeElement = editor.getDocument().activeElement as HTMLElement;\n            const listOrTable = editor.getElementAtCursor(\n                'LI,TABLE',\n                undefined /*startFrom*/,\n                event\n            );\n            const entity = editor.getElementAtCursor(\n                getEntitySelector(),\n                undefined /*startFrom*/,\n                event\n            );\n\n            return (\n                !listOrTable &&\n                (entity ? entity.isContentEditable : activeElement.isContentEditable)\n            );\n        }\n\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        const selection = editor.getSelectionRangeEx();\n        if (selection.type == SelectionRangeTypes.Normal) {\n            editor.addUndoSnapshot(() => {\n                if (selection.areAllCollapsed) {\n                    insertTab(editor, event);\n                } else {\n                    const { ranges } = selection;\n                    const range = ranges[0];\n                    if (shouldSetIndentation(editor, range)) {\n                        setIndentation(editor, Indentation.Increase);\n                    } else {\n                        const tempRange = createRange(range.startContainer, range.startOffset);\n                        ranges.forEach(range => range.deleteContents());\n                        editor.select(tempRange);\n                        insertTab(editor, event);\n                    }\n                }\n            });\n\n            event.rawEvent.preventDefault();\n        }\n    },\n};\n\n/**\n * Requires @see ExperimentalFeatures.TabKeyTextFeatures to be enabled\n * If Whole Paragraph selected, outdent paragraph on Tab press\n */\nconst OutdentWhenTabText: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [Keys.TAB],\n    shouldHandleEvent: (event, editor) => {\n        if (\n            event.rawEvent.shiftKey &&\n            editor.isFeatureEnabled(ExperimentalFeatures.TabKeyTextFeatures)\n        ) {\n            const selection = editor.getSelectionRangeEx();\n\n            return (\n                selection.type == SelectionRangeTypes.Normal &&\n                !selection.areAllCollapsed &&\n                editor.getElementAtCursor('blockquote', undefined, event) &&\n                !editor.getElementAtCursor('LI,TABLE', undefined /*startFrom*/, event) &&\n                shouldSetIndentation(editor, selection.ranges[0])\n            );\n        }\n\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        editor.addUndoSnapshot(() => setIndentation(editor, Indentation.Decrease));\n\n        event.rawEvent.preventDefault();\n    },\n};\n\n/**\n * @deprecated\n * Automatically transform -- into hyphen, if typed between two words.\n */\nconst AutoHyphen: BuildInEditFeature<PluginKeyboardEvent> = {\n    keys: [],\n    shouldHandleEvent: (event, editor) => {\n        return false;\n    },\n    handleEvent: (event, editor) => {\n        return false;\n    },\n    defaultDisabled: true,\n};\n\n/**\n * @internal\n */\nexport const TextFeatures: Record<\n    keyof TextFeatureSettings,\n    BuildInEditFeature<PluginKeyboardEvent>\n> = {\n    indentWhenTabText: IndentWhenTabText,\n    outdentWhenTabText: OutdentWhenTabText,\n    autoHyphen: AutoHyphen,\n};\n\nfunction shouldSetIndentation(editor: IEditor, range: Range): boolean {\n    let result: boolean = false;\n\n    const startPosition: NodePosition = Position.getStart(range);\n    const endPosition: NodePosition = Position.getEnd(range);\n    const firstBlock = editor.getBlockElementAtNode(startPosition.node);\n    const lastBlock = editor.getBlockElementAtNode(endPosition.node);\n\n    if (!firstBlock || !lastBlock) {\n        return false;\n    }\n\n    if (!firstBlock.equals(lastBlock)) {\n        //If the selections has more than one block, we indent all the blocks in the selection\n        return true;\n    } else {\n        //We only indent a single block if all the block is selected.\n        const blockStart = new Position(firstBlock.getStartNode(), PositionType.Begin);\n        const blockEnd = new Position(firstBlock.getEndNode(), PositionType.End);\n\n        const rangeBefore = createRange(blockStart, Position.getStart(range));\n        const rangeAfter = createRange(Position.getEnd(range), blockEnd);\n\n        if (!result && isRangeEmpty(rangeBefore) && isRangeEmpty(rangeAfter)) {\n            result = true;\n        }\n\n        return result;\n    }\n}\n\nfunction isRangeEmpty(range: Range) {\n    return (\n        range.toString() == '' &&\n        queryElements(\n            range.commonAncestorContainer as ParentNode,\n            'img,table,ul,ol',\n            null,\n            QueryScope.InSelection,\n            range\n        ).length == 0\n    );\n}\n\nfunction insertTab(editor: IEditor, event: PluginKeyboardEvent) {\n    const span = editor.getDocument().createElement('span');\n    let searcher = editor.getContentSearcherOfCursor(event);\n    if (!searcher) {\n        return;\n    }\n    const charsBefore = searcher.getSubStringBefore(Number.MAX_SAFE_INTEGER);\n    const numberOfChars = TAB_SPACES - (charsBefore.length % TAB_SPACES);\n    let span2: HTMLSpanElement | null = null;\n\n    let textContent = '';\n    for (let index = 0; index < numberOfChars; index++) {\n        textContent += '&ensp;';\n    }\n    editor.insertNode(span);\n    if (span.nextElementSibling && getTagOfNode(span.nextElementSibling) == 'A') {\n        span2 = editor.getDocument().createElement('span');\n        span2.textContent = ' ';\n        editor.insertNode(span2);\n        editor.select(createRange(span2, PositionType.Before));\n    }\n    editor.insertContent(textContent, {\n        position: ContentPosition.Range,\n        range: createRange(span, PositionType.Begin),\n        updateCursor: false,\n    });\n    editor.select(createRange(span, PositionType.After));\n    if (span2) {\n        editor.deleteNode(span2);\n    }\n}\n","import { AutoLinkFeatures } from './features/autoLinkFeatures';\nimport { CodeFeatures } from './features/codeFeatures';\nimport { CursorFeatures } from './features/cursorFeatures';\nimport { EntityFeatures } from './features/entityFeatures';\nimport { ListFeatures } from './features/listFeatures';\nimport { MarkdownFeatures } from './features/markdownFeatures';\nimport { QuoteFeatures } from './features/quoteFeatures';\nimport { ShortcutFeatures } from './features/shortcutFeatures';\nimport { StructuredNodeFeatures } from './features/structuredNodeFeatures';\nimport { TableFeatures } from './features/tableFeatures';\nimport { TextFeatures } from './features/textFeatures';\nimport type {\n    BuildInEditFeature,\n    ContentEditFeatureSettings,\n    PluginEvent,\n} from 'roosterjs-editor-types';\n\nconst allFeatures = {\n    ...ListFeatures,\n    ...QuoteFeatures,\n    ...TableFeatures,\n    ...StructuredNodeFeatures,\n    ...AutoLinkFeatures,\n    ...ShortcutFeatures,\n    ...CursorFeatures,\n    ...MarkdownFeatures,\n    ...EntityFeatures,\n    ...TextFeatures,\n    ...CodeFeatures,\n};\n\n/**\n * Get all content edit features provided by roosterjs\n */\nexport default function getAllFeatures() {\n    return allFeatures as Record<keyof ContentEditFeatureSettings, BuildInEditFeature<PluginEvent>>;\n}\n","export { default as ContentEdit } from './ContentEdit';\nexport { default as getAllFeatures } from './getAllFeatures';\n","/**\n * @internal\n * Convert english alphabet numbers into decimal numbers\n * @param letter The letter that needs to be converted\n * @returns\n */\nexport default function convertAlphaToDecimals(letter: string): number | null {\n    const alpha = letter.toLocaleLowerCase();\n    if (alpha) {\n        const size = alpha.length - 1;\n        const number = 26 * size + alpha.charCodeAt(size) - 96;\n        return number;\n    }\n    return null;\n}\n","import { BulletListType } from 'roosterjs-editor-types';\n\nconst bulletListType: Record<string, number> = {\n    '*': BulletListType.Disc,\n    '-': BulletListType.Dash,\n    '--': BulletListType.Square,\n    '->': BulletListType.LongArrow,\n    '-->': BulletListType.DoubleLongArrow,\n    '=>': BulletListType.UnfilledArrow,\n    '>': BulletListType.ShortArrow,\n    '—': BulletListType.Hyphen,\n};\n\nconst identifyBulletListType = (bullet: string): BulletListType | null => {\n    return bulletListType[bullet] || null;\n};\n\n/**\n * @internal\n * @param textBeforeCursor The trigger character\n * @returns The style of a bullet list triggered by a string\n */\nexport default function getAutoBulletListStyle(textBeforeCursor: string): BulletListType | null {\n    const trigger = textBeforeCursor.trim();\n    const bulletType = identifyBulletListType(trigger);\n    return bulletType;\n}\n","import convertAlphaToDecimals from './convertAlphaToDecimals';\nimport { NumberingListType } from 'roosterjs-editor-types';\nimport type { VListChain } from 'roosterjs-editor-dom';\n\nconst enum NumberingTypes {\n    Decimal = 1,\n    LowerAlpha = 2,\n    UpperAlpha = 3,\n    LowerRoman = 4,\n    UpperRoman = 5,\n}\n\nconst enum Character {\n    Dot = 1,\n    Dash = 2,\n    Parenthesis = 3,\n    DoubleParenthesis = 4,\n}\n\nconst characters: Record<string, number> = {\n    '.': Character.Dot,\n    '-': Character.Dash,\n    ')': Character.Parenthesis,\n};\n\nconst lowerRomanTypes = [\n    NumberingListType.LowerRoman,\n    NumberingListType.LowerRomanDash,\n    NumberingListType.LowerRomanDoubleParenthesis,\n    NumberingListType.LowerRomanParenthesis,\n];\nconst upperRomanTypes = [\n    NumberingListType.UpperRoman,\n    NumberingListType.UpperRomanDash,\n    NumberingListType.UpperRomanDoubleParenthesis,\n    NumberingListType.UpperRomanParenthesis,\n];\nconst numberingTriggers = ['1', 'a', 'A', 'I', 'i'];\nconst lowerRomanNumbers = ['i', 'v', 'x', 'l', 'c', 'd', 'm'];\nconst upperRomanNumbers = ['I', 'V', 'X', 'L', 'C', 'D', 'M'];\n\nconst identifyNumberingType = (text: string, previousListStyle?: NumberingListType) => {\n    if (!isNaN(parseInt(text))) {\n        return NumberingTypes.Decimal;\n    } else if (/[a-z]+/g.test(text)) {\n        if (\n            (previousListStyle != undefined &&\n                lowerRomanTypes.indexOf(previousListStyle) > -1 &&\n                lowerRomanNumbers.indexOf(text[0]) > -1) ||\n            (!previousListStyle && text === 'i')\n        ) {\n            return NumberingTypes.LowerRoman;\n        } else if (previousListStyle || (!previousListStyle && text === 'a')) {\n            return NumberingTypes.LowerAlpha;\n        }\n    } else if (/[A-Z]+/g.test(text)) {\n        if (\n            (previousListStyle != undefined &&\n                upperRomanTypes.indexOf(previousListStyle) > -1 &&\n                upperRomanNumbers.indexOf(text[0]) > -1) ||\n            (!previousListStyle && text === 'I')\n        ) {\n            return NumberingTypes.UpperRoman;\n        } else if (previousListStyle || (!previousListStyle && text === 'A')) {\n            return NumberingTypes.UpperAlpha;\n        }\n    }\n};\n\nconst numberingListTypes: Record<number, (char: number) => number | null> = {\n    [NumberingTypes.Decimal]: char => DecimalsTypes[char] || null,\n    [NumberingTypes.LowerAlpha]: char => LowerAlphaTypes[char] || null,\n    [NumberingTypes.UpperAlpha]: char => UpperAlphaTypes[char] || null,\n    [NumberingTypes.LowerRoman]: char => LowerRomanTypes[char] || null,\n    [NumberingTypes.UpperRoman]: char => UpperRomanTypes[char] || null,\n};\n\nconst UpperRomanTypes: Record<number, number> = {\n    [Character.Dot]: NumberingListType.UpperRoman,\n    [Character.Dash]: NumberingListType.UpperRomanDash,\n    [Character.Parenthesis]: NumberingListType.UpperRomanParenthesis,\n    [Character.DoubleParenthesis]: NumberingListType.UpperRomanDoubleParenthesis,\n};\n\nconst LowerRomanTypes: Record<number, number> = {\n    [Character.Dot]: NumberingListType.LowerRoman,\n    [Character.Dash]: NumberingListType.LowerRomanDash,\n    [Character.Parenthesis]: NumberingListType.LowerRomanParenthesis,\n    [Character.DoubleParenthesis]: NumberingListType.LowerRomanDoubleParenthesis,\n};\n\nconst UpperAlphaTypes: Record<number, number> = {\n    [Character.Dot]: NumberingListType.UpperAlpha,\n    [Character.Dash]: NumberingListType.UpperAlphaDash,\n    [Character.Parenthesis]: NumberingListType.UpperAlphaParenthesis,\n    [Character.DoubleParenthesis]: NumberingListType.UpperAlphaDoubleParenthesis,\n};\n\nconst LowerAlphaTypes: Record<number, number> = {\n    [Character.Dot]: NumberingListType.LowerAlpha,\n    [Character.Dash]: NumberingListType.LowerAlphaDash,\n    [Character.Parenthesis]: NumberingListType.LowerAlphaParenthesis,\n    [Character.DoubleParenthesis]: NumberingListType.LowerAlphaDoubleParenthesis,\n};\n\nconst DecimalsTypes: Record<number, number> = {\n    [Character.Dot]: NumberingListType.Decimal,\n    [Character.Dash]: NumberingListType.DecimalDash,\n    [Character.Parenthesis]: NumberingListType.DecimalParenthesis,\n    [Character.DoubleParenthesis]: NumberingListType.DecimalDoubleParenthesis,\n};\n\nconst identifyNumberingListType = (\n    numbering: string,\n    isDoubleParenthesis: boolean,\n    previousListStyle?: NumberingListType\n): NumberingListType | null => {\n    const separatorCharacter = isDoubleParenthesis\n        ? Character.DoubleParenthesis\n        : characters[numbering[numbering.length - 1]];\n    // if separator is not valid, no need to check if the number is valid.\n    if (separatorCharacter) {\n        const number = isDoubleParenthesis ? numbering.slice(1, -1) : numbering.slice(0, -1);\n        const numberingType = identifyNumberingType(number, previousListStyle);\n        return numberingType ? numberingListTypes[numberingType](separatorCharacter) : null;\n    }\n    return null;\n};\n\n/**\n * @internal\n * @param textBeforeCursor The trigger character\n * @param previousListChain @optional This parameters is used to keep the list chain, if the is not a new list\n * @param previousListStyle @optional The list style of the previous list\n * @returns The style of a numbering list triggered by a string\n */\nexport default function getAutoNumberingListStyle(\n    textBeforeCursor: string,\n    previousListChain?: VListChain[],\n    previousListStyle?: NumberingListType\n): NumberingListType | null {\n    const trigger = textBeforeCursor.trim();\n    const isDoubleParenthesis = trigger[0] === '(' && trigger[trigger.length - 1] === ')';\n    //Only the staring items ['1', 'a', 'A', 'I', 'i'] must trigger a new list. All the other triggers is used to keep the list chain.\n    //The index is always the characters before the last character\n    const listIndex = isDoubleParenthesis ? trigger.slice(1, -1) : trigger.slice(0, -1);\n\n    const indexNumber = parseInt(listIndex);\n    let index = !isNaN(indexNumber) ? indexNumber : convertAlphaToDecimals(listIndex);\n\n    if (!index || index < 1) {\n        return null;\n    }\n\n    if (previousListChain && index > 1) {\n        if (\n            (previousListChain.length < 1 && numberingTriggers.indexOf(listIndex) < 0) ||\n            (previousListChain?.length > 0 &&\n                !previousListChain[previousListChain.length - 1]?.canAppendAtCursor(index))\n        ) {\n            return null;\n        }\n    }\n\n    const numberingType = isValidNumbering(listIndex)\n        ? identifyNumberingListType(trigger, isDoubleParenthesis, previousListStyle)\n        : null;\n    return numberingType;\n}\n\n/**\n * Check if index has only numbers or only letters to avoid sequence of character such 1:1. trigger a list.\n * @param index\n * @returns\n */\nfunction isValidNumbering(index: string) {\n    return Number(index) || /^[A-Za-z\\s]*$/.test(index);\n}\n","import { createElement } from 'roosterjs-editor-dom';\nimport { KnownCreateElementDataIndex, PluginEventType } from 'roosterjs-editor-types';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * Context Menu options for ContextMenu plugin\n */\nexport interface ContextMenuOptions<T> {\n    /**\n     * Render function for the context menu\n     * @param container The container HTML element, it will be located at the mouse click position,\n     * so the callback just need to render menu content into this container\n     * @param onDismiss The onDismiss callback, some menu render need to know this callback so that\n     * it can handle the dismiss event\n     */\n    render: (container: HTMLElement, items: (T | null)[], onDismiss: () => void) => void;\n\n    /**\n     * Dismiss function for the context menu, it will be called when user wants to dismiss this context menu\n     * e.g. user click away so the menu should be dismissed\n     * @param container The container HTML element\n     */\n    dismiss?: (container: HTMLElement) => void;\n\n    /**\n     * Whether the default context menu is allowed. @default false\n     */\n    allowDefaultMenu?: boolean;\n}\n\n/**\n * An editor plugin that support showing a context menu using render() function from options parameter\n */\nexport default class ContextMenu<T> implements EditorPlugin {\n    private container: HTMLElement | null = null;\n    private editor: IEditor | null = null;\n    private isMenuShowing: boolean = false;\n\n    /**\n     * Create a new instance of ContextMenu class\n     * @param options An options object to determine how to show/hide the context menu\n     */\n    constructor(private options: ContextMenuOptions<T>) {}\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'ContextMenu';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.onDismiss();\n\n        if (this.container?.parentNode) {\n            this.container.parentNode.removeChild(this.container);\n            this.container = null;\n        }\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (event.eventType == PluginEventType.ContextMenu && event.items.length > 0) {\n            const { rawEvent, items } = event;\n\n            this.onDismiss();\n\n            if (!this.options.allowDefaultMenu) {\n                rawEvent.preventDefault();\n            }\n\n            if (this.initContainer(rawEvent.pageX, rawEvent.pageY)) {\n                this.options.render(this.container!, items as T[], this.onDismiss);\n                this.isMenuShowing = true;\n            }\n        }\n    }\n\n    private initContainer(x: number, y: number) {\n        if (!this.container && this.editor) {\n            this.container = createElement(\n                KnownCreateElementDataIndex.ContextMenuWrapper,\n                this.editor.getDocument()\n            ) as HTMLElement;\n            this.editor.getDocument().body.appendChild(this.container);\n        }\n        this.container?.style.setProperty('left', x + 'px');\n        this.container?.style.setProperty('top', y + 'px');\n        return !!this.container;\n    }\n\n    private onDismiss = () => {\n        if (this.container && this.isMenuShowing) {\n            this.options.dismiss?.(this.container);\n            this.isMenuShowing = false;\n        }\n    };\n}\n","export { default as ContextMenu, ContextMenuOptions } from './ContextMenu';\n","import { PluginEventType, PositionType } from 'roosterjs-editor-types';\nimport type { CustomReplacement, EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\nconst makeReplacement = (\n    sourceString: string,\n    replacementHTML: string,\n    matchSourceCaseSensitive: boolean,\n    shouldReplace?: (\n        replacement: CustomReplacement,\n        content: string,\n        sourceEditor?: IEditor\n    ) => boolean\n): CustomReplacement => ({\n    sourceString,\n    replacementHTML,\n    matchSourceCaseSensitive,\n    shouldReplace,\n});\n\nconst defaultReplacements: CustomReplacement[] = [\n    makeReplacement(':)', '🙂', true),\n    makeReplacement(';)', '😉', true),\n    makeReplacement(':O', '😲', true),\n    makeReplacement(':o', '😯', true),\n    makeReplacement('<3', '❤️', true),\n];\n\n/**\n * Wrapper for CustomReplaceContentEditFeature that provides an API for updating the\n * content edit feature\n */\nexport default class CustomReplacePlugin implements EditorPlugin {\n    private longestReplacementLength: number | null = null;\n    private editor: IEditor | null = null;\n    private replacements: CustomReplacement[] | null = null;\n    private replacementEndCharacters: Set<string> | null = null;\n\n    /**\n     * Create instance of CustomReplace plugin\n     * @param replacements Replacement rules. If not passed, a default replacement rule set will be applied\n     */\n    constructor(replacements: CustomReplacement[] = defaultReplacements) {\n        this.updateReplacements(replacements);\n    }\n\n    /**\n     * Set the replacements that this plugin is looking for.\n     * @param newReplacements new set of replacements for this plugin\n     */\n    updateReplacements(newReplacements: CustomReplacement[]) {\n        this.replacements = newReplacements;\n        this.longestReplacementLength = getLongestReplacementSourceLength(this.replacements);\n        this.replacementEndCharacters = getReplacementEndCharacters(this.replacements);\n    }\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'CustomReplace';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    public initialize(editor: IEditor): void {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    public dispose(): void {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    public onPluginEvent(event: PluginEvent) {\n        if (event.eventType != PluginEventType.Input || !this.editor || this.editor.isInIME()) {\n            return;\n        }\n\n        // Exit early on input events that do not insert a replacement's final character.\n        if (!event.rawEvent.data || !this.replacementEndCharacters?.has(event.rawEvent.data)) {\n            return;\n        }\n\n        // Get the matching replacement\n        const searcher = this.editor.getContentSearcherOfCursor(event);\n        if (!searcher || this.longestReplacementLength == null) {\n            return;\n        }\n        const stringToSearch = searcher.getSubStringBefore(this.longestReplacementLength);\n\n        const replacement = this.getMatchingReplacement(stringToSearch);\n\n        if (\n            !replacement ||\n            (replacement.shouldReplace &&\n                searcher &&\n                !replacement.shouldReplace(replacement, searcher.getWordBefore(), this.editor))\n        ) {\n            return;\n        }\n\n        // Reconstruct a selection of the text on the document that matches the\n        // replacement we selected.\n        const matchingText = searcher.getSubStringBefore(replacement.sourceString.length);\n        const matchingRange = searcher.getRangeFromText(matchingText, true /* exactMatch */);\n\n        // parse the html string off the dom and inline the resulting element.\n        const document = this.editor.getDocument();\n        const parsingSpan = document.createElement('span');\n        parsingSpan.innerHTML = this.editor.getTrustedHTMLHandler()(replacement.replacementHTML);\n        const nodeToInsert =\n            parsingSpan.childNodes.length == 1 ? parsingSpan.childNodes[0] : parsingSpan;\n\n        // Switch the node for the selection range\n        if (matchingRange) {\n            this.editor.addUndoSnapshot(\n                () => {\n                    matchingRange.deleteContents();\n                    matchingRange.insertNode(nodeToInsert);\n                    this.editor?.select(nodeToInsert, PositionType.End);\n                },\n                undefined /*changeSource*/,\n                true /*canUndoByBackspace*/\n            );\n        }\n    }\n\n    private getMatchingReplacement(stringToSearch: string): CustomReplacement | null {\n        if (stringToSearch.length == 0 || !this.replacements) {\n            return null;\n        }\n        const originalStringToSearch = stringToSearch.replace(/\\s/g, ' ');\n        const lowerCaseStringToSearch = originalStringToSearch.toLocaleLowerCase();\n        for (const replacement of this.replacements) {\n            const [sourceMatch, replacementMatch] = replacement.matchSourceCaseSensitive\n                ? [originalStringToSearch, replacement.sourceString]\n                : [lowerCaseStringToSearch, replacement.sourceString.toLocaleLowerCase()];\n\n            if (\n                sourceMatch.substring(sourceMatch.length - replacementMatch.length) ==\n                replacementMatch\n            ) {\n                return replacement;\n            }\n        }\n        return null;\n    }\n}\n\nfunction getLongestReplacementSourceLength(replacements: CustomReplacement[]): number {\n    return Math.max.apply(\n        null,\n        replacements.map(replacement => replacement.sourceString.length)\n    );\n}\n\nfunction getReplacementEndCharacters(replacements: CustomReplacement[]): Set<string> {\n    const endChars = new Set<string>();\n    for (let replacement of replacements) {\n        const sourceString = replacement.sourceString;\n        if (sourceString.length == 0) {\n            continue;\n        }\n        const lastChar = sourceString[sourceString.length - 1];\n        if (!replacement.matchSourceCaseSensitive) {\n            endChars.add(lastChar.toLocaleLowerCase());\n            endChars.add(lastChar.toLocaleUpperCase());\n        } else {\n            endChars.add(lastChar);\n        }\n    }\n    return endChars;\n}\n","export { default as CustomReplace } from './CustomReplace';\n","import { ChangeSource, PluginEventType } from 'roosterjs-editor-types';\nimport { commitListChains } from 'roosterjs-editor-api';\nimport { VListChain } from 'roosterjs-editor-dom';\nimport type { EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\nimport type { CompatibleChangeSource } from 'roosterjs-editor-types/lib/compatibleTypes';\n\n/**\n * Maintain list numbers of list chain when content is modified by cut/paste/drag&drop\n */\nexport default class CutPasteListChain implements EditorPlugin {\n    private chains: VListChain[] | null = null;\n    private expectedChangeSource: ChangeSource | CompatibleChangeSource | null = null;\n    private editor: IEditor | null = null;\n    private disposer: (() => void) | null = null;\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'CutPasteListChain';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.disposer = this.editor.addDomEventHandler('drop', this.onDrop);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.BeforeCutCopy:\n                if (event.isCut) {\n                    this.cacheListChains(ChangeSource.Cut);\n                }\n                break;\n\n            case PluginEventType.BeforePaste:\n                this.cacheListChains(ChangeSource.Paste);\n                break;\n\n            case PluginEventType.ContentChanged:\n                if (\n                    this.chains &&\n                    this.chains.length > 0 &&\n                    this.expectedChangeSource == event.source &&\n                    this.editor\n                ) {\n                    commitListChains(this.editor, this.chains);\n                    this.chains = null;\n                    this.expectedChangeSource = null;\n                }\n                break;\n        }\n    }\n\n    private onDrop = () => {\n        this.cacheListChains(ChangeSource.Drop);\n    };\n\n    private cacheListChains(source: ChangeSource) {\n        const selectedRegions = this.editor?.getSelectedRegions();\n        if (selectedRegions) {\n            this.chains = VListChain.createListChains(selectedRegions);\n            this.expectedChangeSource = source;\n        }\n    }\n}\n","export { default as CutPasteListChain } from './CutPasteListChain';\n","import { ChangeSource, Keys, PluginEventType } from 'roosterjs-editor-types';\nimport { isCharacterValue, isCtrlOrMetaPressed, matchLink } from 'roosterjs-editor-dom';\nimport type { DOMEventHandler, EditorPlugin, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * An editor plugin that show a tooltip for existing link\n */\nexport default class HyperLink implements EditorPlugin {\n    private originalHref: string | null = null;\n    private trackedLink: HTMLAnchorElement | null = null;\n    private editor: IEditor | null = null;\n    private disposer: (() => void) | null = null;\n\n    /**\n     * Create a new instance of HyperLink class\n     * @param getTooltipCallback A callback function to get tooltip text for an existing hyperlink.\n     * Default value is to return the href itself. If null, there will be no tooltip text.\n     * @param target (Optional) Target window name for hyperlink. If null, will use \"_blank\"\n     * @param onLinkClick (Optional) Open link callback (return false to use default behavior)\n     */\n    constructor(\n        private getTooltipCallback: (href: string, a: HTMLAnchorElement) => string = href => href,\n        private target?: string,\n        private onLinkClick?: (anchor: HTMLAnchorElement, mouseEvent: MouseEvent) => boolean | void\n    ) {}\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Hyperlink';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    public initialize(editor: IEditor): void {\n        this.editor = editor;\n        this.disposer = editor.addDomEventHandler({\n            mouseover: <DOMEventHandler>this.onMouse,\n            mouseout: <DOMEventHandler>this.onMouse,\n            blur: <DOMEventHandler>this.onBlur,\n        });\n    }\n\n    protected onMouse = (e: MouseEvent) => {\n        const a = this.editor?.getElementAtCursor(\n            'a[href]',\n            <Node>e.target\n        ) as HTMLAnchorElement | null;\n        const href = a && this.tryGetHref(a);\n\n        if (href) {\n            this.editor?.setEditorDomAttribute(\n                'title',\n                e.type == 'mouseover' ? this.getTooltipCallback(href, a) : null\n            );\n        }\n    };\n\n    protected onBlur = (e: FocusEvent) => {\n        if (this.trackedLink) {\n            this.updateLinkHrefIfShouldUpdate();\n        }\n\n        this.resetLinkTracking();\n    };\n\n    /**\n     * Dispose this plugin\n     */\n    public dispose(): void {\n        if (this.disposer) {\n            this.disposer();\n            this.disposer = null;\n        }\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    public onPluginEvent(event: PluginEvent): void {\n        if (\n            event.eventType == PluginEventType.MouseUp ||\n            (event.eventType == PluginEventType.KeyUp &&\n                (!this.isContentEditValue(event.rawEvent) || event.rawEvent.which == Keys.SPACE)) ||\n            event.eventType == PluginEventType.ContentChanged\n        ) {\n            const anchor = this.editor?.getElementAtCursor(\n                'A[href]',\n                undefined /*startFrom*/,\n                event\n            ) as HTMLAnchorElement | null;\n\n            const shouldCheckUpdateLink =\n                (anchor && anchor !== this.trackedLink) ||\n                event.eventType == PluginEventType.KeyUp ||\n                event.eventType == PluginEventType.ContentChanged;\n\n            if (\n                event.eventType == PluginEventType.ContentChanged &&\n                event.source == ChangeSource.Keyboard &&\n                this.trackedLink != anchor &&\n                anchor\n            ) {\n                // For Keyboard event that causes content change (mostly come from Content Model), this tracked list may be staled.\n                // So we need to get an up-to-date link element\n                // TODO: This is a temporary solution. Later when Content Model can fully take over this behavior, we can remove this code.\n                this.trackedLink = anchor;\n            }\n\n            if (\n                this.trackedLink &&\n                (shouldCheckUpdateLink || this.tryGetHref(this.trackedLink) !== this.originalHref)\n            ) {\n                // If cursor has moved out of previously tracked link\n                // update link href if display text doesn't match href anymore.\n                if (shouldCheckUpdateLink) {\n                    this.updateLinkHrefIfShouldUpdate();\n                }\n\n                // If the link's href value was edited, or the cursor has moved out of the\n                // previously tracked link, stop tracking the link.\n                this.resetLinkTracking();\n            }\n\n            // Cache link and href value if its href attribute currently matches its display text\n            if (!this.trackedLink && anchor && this.doesLinkDisplayMatchHref(anchor)) {\n                this.trackedLink = anchor;\n                this.originalHref = this.tryGetHref(anchor);\n            }\n        }\n\n        if (event.eventType == PluginEventType.MouseUp) {\n            const anchor = this.editor?.getElementAtCursor(\n                'A',\n                <Node>event.rawEvent.srcElement\n            ) as HTMLAnchorElement | null;\n\n            if (anchor) {\n                if (this.onLinkClick && this.onLinkClick(anchor, event.rawEvent) !== false) {\n                    return;\n                }\n\n                let href: string | null;\n                if (\n                    (href = this.tryGetHref(anchor)) &&\n                    isCtrlOrMetaPressed(event.rawEvent) &&\n                    event.rawEvent.button === 0\n                ) {\n                    event.rawEvent.preventDefault();\n                    try {\n                        const target = this.target || '_blank';\n                        const window = this.editor?.getDocument().defaultView;\n                        window?.open(href, target);\n                    } catch {}\n                }\n            }\n        }\n    }\n\n    /**\n     * Try get href from an anchor element\n     * The reason this is put in a try-catch is that\n     * it has been seen that accessing href may throw an exception, in particular on IE/Edge\n     */\n    private tryGetHref(anchor: HTMLAnchorElement): string | null {\n        try {\n            return anchor ? anchor.href : null;\n        } catch {\n            return null;\n        }\n    }\n\n    /**\n     * Determines if KeyboardEvent is meant to edit content\n     */\n    private isContentEditValue(event: KeyboardEvent): boolean {\n        return (\n            isCharacterValue(event) || event.which == Keys.BACKSPACE || event.which == Keys.DELETE\n        );\n    }\n\n    /**\n     * Updates the href of the tracked link if the display text doesn't match href anymore\n     */\n    private updateLinkHrefIfShouldUpdate() {\n        if (this.trackedLink && !this.doesLinkDisplayMatchHref(this.trackedLink)) {\n            this.updateLinkHref();\n        }\n    }\n\n    /**\n     * Clears the tracked link and its original href value so that it's back to default state\n     */\n    private resetLinkTracking() {\n        this.trackedLink = null;\n        this.originalHref = '';\n    }\n\n    /**\n     * Compares the normalized URL of inner text of element to its href to see if they match.\n     */\n    private doesLinkDisplayMatchHref(element: HTMLAnchorElement): boolean {\n        if (element) {\n            let display = element.innerText.trim();\n\n            // We first escape the display text so that any text passed into the regex is not\n            // treated as a special character.\n            let escapedDisplay = display.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            let rule = new RegExp(`^(?:https?:\\\\/\\\\/)?${escapedDisplay}\\\\/?`, 'i');\n            let href = this.tryGetHref(element);\n            if (href !== null) {\n                return rule.test(href);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Update href of an element in place to new display text if it's a valid URL\n     */\n    private updateLinkHref() {\n        if (this.trackedLink) {\n            let linkData = matchLink(this.trackedLink.innerText.trim());\n            if (linkData !== null) {\n                this.editor?.addUndoSnapshot(() => {\n                    this.trackedLink!.href = linkData!.normalizedUrl;\n                });\n            }\n        }\n    }\n}\n","export { default as HyperLink } from './HyperLink';\n","import applyChange from './editInfoUtils/applyChange';\nimport canRegenerateImage from './api/canRegenerateImage';\nimport DragAndDropHelper from '../../pluginUtils/DragAndDropHelper';\nimport getGeneratedImageSize from './editInfoUtils/getGeneratedImageSize';\nimport { Cropper, getCropHTML } from './imageEditors/Cropper';\nimport { deleteEditInfo, getEditInfoFromImage } from './editInfoUtils/editInfo';\nimport { getRotateHTML, Rotator, updateRotateHandleState } from './imageEditors/Rotator';\nimport { ImageEditElementClass } from './types/ImageEditElementClass';\nimport { MIN_HEIGHT_WIDTH } from './constants/constants';\nimport { tryToConvertGifToPng } from './editInfoUtils/tryToConvertGifToPng';\nimport type { DNDDirectionX, DnDDirectionY } from './types/DragAndDropContext';\nimport type DragAndDropContext from './types/DragAndDropContext';\nimport type DragAndDropHandler from '../../pluginUtils/DragAndDropHandler';\nimport type ImageEditInfo from './types/ImageEditInfo';\nimport type ImageHtmlOptions from './types/ImageHtmlOptions';\nimport {\n    arrayPush,\n    Browser,\n    createElement,\n    getComputedStyle,\n    getObjectKeys,\n    safeInstanceOf,\n    toArray,\n    unwrap,\n    wrap,\n} from 'roosterjs-editor-dom';\nimport type { OnShowResizeHandle } from './imageEditors/Resizer';\nimport {\n    Resizer,\n    doubleCheckResize,\n    getSideResizeHTML,\n    getCornerResizeHTML,\n    getResizeBordersHTML,\n} from './imageEditors/Resizer';\nimport type {\n    ImageEditOptions,\n    EditorPlugin,\n    IEditor,\n    PluginEvent,\n    CreateElementData,\n    ModeIndependentColor,\n} from 'roosterjs-editor-types';\nimport {\n    ImageEditOperation,\n    PluginEventType,\n    KnownCreateElementDataIndex,\n    SelectionRangeTypes,\n    ChangeSource,\n} from 'roosterjs-editor-types';\nimport type { CompatibleImageEditOperation } from 'roosterjs-editor-types/lib/compatibleTypes';\n\nconst PI = Math.PI;\nconst DIRECTIONS = 8;\nconst DirectionRad = (PI * 2) / DIRECTIONS;\nconst DirectionOrder = ['nw', 'n', 'ne', 'e', 'se', 's', 'sw', 'w'];\n\n/**\n * Default image edit options\n */\nconst DefaultOptions: Required<ImageEditOptions> = {\n    borderColor: '#DB626C',\n    minWidth: 10,\n    minHeight: 10,\n    preserveRatio: false,\n    minRotateDeg: 5,\n    imageSelector: 'img',\n    rotateIconHTML: '',\n    disableCrop: false,\n    disableRotate: false,\n    disableSideResize: false,\n    onSelectState: ImageEditOperation.ResizeAndRotate,\n};\n\n/**\n * Map the image edit operation to a function that returns editing elements HTML to help\n * build image editing UI\n */\nconst ImageEditHTMLMap = {\n    [ImageEditOperation.CornerResize]: getCornerResizeHTML,\n    [ImageEditOperation.SideResize]: getSideResizeHTML,\n    [ImageEditOperation.Rotate]: getRotateHTML,\n    [ImageEditOperation.Crop]: getCropHTML,\n};\n\n/**\n * Default background colors for rotate handle\n */\nconst LIGHT_MODE_BGCOLOR = 'white';\nconst DARK_MODE_BGCOLOR = '#333';\n\n/**\n * ImageEdit plugin provides the ability to edit an inline image in editor, including image resizing, rotation and cropping\n */\nexport default class ImageEdit implements EditorPlugin {\n    protected editor: IEditor | null = null;\n    protected options: ImageEditOptions;\n    private disposer: (() => void) | null = null;\n\n    // Allowed editing operations\n    private allowedOperations: ImageEditOperation;\n\n    // Current editing image\n    private image: HTMLImageElement | null = null;\n\n    // Image cloned from the current editing image\n    private clonedImage: HTMLImageElement | null = null;\n\n    // The image wrapper\n    private wrapper: HTMLSpanElement | null = null;\n\n    // Current edit info of the image. All changes user made will be stored in this object.\n    // We use this object to update the editing UI, and finally we will use this object to generate\n    // the new image if necessary\n    private editInfo: ImageEditInfo | null = null;\n\n    // Src of the image before current editing\n    private lastSrc: string | null = null;\n\n    // Drag and drop helper objects\n    private dndHelpers: DragAndDropHelper<DragAndDropContext, any>[] = [];\n\n    /**\n     * Identify if the image was resized by the user.\n     */\n    private wasResized: boolean = false;\n\n    /**\n     * The span element that wraps the image and opens shadow dom\n     */\n    private shadowSpan: HTMLSpanElement | null = null;\n\n    /**\n     * The span element that wraps the image and opens shadow dom\n     */\n    private isCropping: boolean = false;\n\n    /**\n     * If the image is a gif, this is the png source of the gif image\n     */\n    private pngSource: string | null = null;\n\n    /**\n     * Create a new instance of ImageEdit\n     * @param options Image editing options\n     * @param onShowResizeHandle An optional callback to allow customize resize handle element of image resizing.\n     * To customize the resize handle element, add this callback and change the attributes of elementData then it\n     * will be picked up by ImageEdit code\n     */\n    constructor(options?: ImageEditOptions, private onShowResizeHandle?: OnShowResizeHandle) {\n        this.options = {\n            ...DefaultOptions,\n            ...(options || {}),\n        };\n\n        this.allowedOperations =\n            ImageEditOperation.CornerResize |\n            (this.options.disableCrop ? 0 : ImageEditOperation.Crop) |\n            (this.options.disableRotate ? 0 : ImageEditOperation.Rotate) |\n            (this.options.disableSideResize ? 0 : ImageEditOperation.SideResize);\n    }\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'ImageEdit';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.disposer = editor.addDomEventHandler({\n            blur: () => this.onBlur(),\n            dragstart: e => {\n                if (this.image) {\n                    e.preventDefault();\n                }\n            },\n        });\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.clearDndHelpers();\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param e PluginEvent object\n     */\n    onPluginEvent(e: PluginEvent) {\n        switch (e.eventType) {\n            case PluginEventType.SelectionChanged:\n                if (\n                    e.selectionRangeEx &&\n                    e.selectionRangeEx.type === SelectionRangeTypes.ImageSelection &&\n                    this.options &&\n                    this.options.onSelectState !== undefined\n                ) {\n                    this.setEditingImage(e.selectionRangeEx.image, this.options.onSelectState);\n                }\n\n                break;\n            case PluginEventType.MouseDown:\n                // When left click in a image that already in editing mode, do not quit edit mode\n                const mouseTarget = e.rawEvent.target;\n                const button = e.rawEvent.button;\n                if (\n                    this.shadowSpan !== mouseTarget ||\n                    (this.shadowSpan === mouseTarget && button !== 0) ||\n                    this.isCropping\n                ) {\n                    this.setEditingImage(null);\n                }\n                break;\n            case PluginEventType.MouseUp:\n                // When mouse up, if the image and the shadow span exists, the editing mode is on.\n                // To make sure the selection did not jump to the shadow root, reselect the image.\n                if (this.image && this.shadowSpan) {\n                    this.editor?.select(this.image);\n                }\n                break;\n            case PluginEventType.KeyDown:\n                this.setEditingImage(null);\n                break;\n            case PluginEventType.ContentChanged:\n                //After contentChanged event, the current image wrapper may not be valid any more, remove all of them if any\n                this.removeWrapper();\n                break;\n\n            case PluginEventType.ExtractContentWithDom:\n                // When extract content, remove all image info since they may not be valid when load the content again\n                if (this.options?.imageSelector) {\n                    toArray(e.clonedRoot.querySelectorAll(this.options.imageSelector)).forEach(\n                        img => {\n                            deleteEditInfo(img as HTMLImageElement);\n                        }\n                    );\n                }\n                break;\n            case PluginEventType.BeforeDispose:\n                this.removeWrapper();\n                break;\n        }\n    }\n\n    /**\n     * Check if the given image edit operation is allowed by this plugin\n     * @param operation The image edit operation to check\n     * @returns True means it is allowed, otherwise false\n     */\n    isOperationAllowed(operation: ImageEditOperation): boolean {\n        return !!(this.allowedOperations & operation);\n    }\n\n    /**\n     * Set current image for edit. If there is already image in editing, it will quit editing mode and any pending editing\n     * operation will be submitted\n     * @param image The image to edit\n     * @param operation The editing operation\n     */\n    setEditingImage(\n        image: HTMLImageElement,\n        operation: ImageEditOperation | CompatibleImageEditOperation\n    ): void;\n\n    /**\n     * Stop editing image. If there is already image in editing, it will quit editing mode and any pending editing\n     * operation will be submitted\n     * @param image The image to edit\n     * @param selectImage True to select this image after quit editing mode\n     */\n    setEditingImage(image: null, selectImage?: boolean): void;\n\n    setEditingImage(\n        image: HTMLImageElement | null,\n        operationOrSelect?: ImageEditOperation | CompatibleImageEditOperation | boolean\n    ) {\n        let operation =\n            typeof operationOrSelect === 'number' ? operationOrSelect : ImageEditOperation.None;\n        const selectImage = typeof operationOrSelect === 'number' ? false : !!operationOrSelect;\n\n        if (\n            !image &&\n            this.image &&\n            this.editor &&\n            this.editInfo &&\n            this.lastSrc &&\n            this.clonedImage\n        ) {\n            // When there is image in editing, clean up any cached objects and elements\n            this.clearDndHelpers();\n\n            // If the image is a gif we change the editing image to a new png image, then we need to change the\n            // image source to the original gif image\n            if (this.pngSource) {\n                this.clonedImage.src = this.editInfo.src;\n            }\n\n            // Apply the changes, and add undo snapshot if necessary\n            applyChange(\n                this.editor,\n                this.image,\n                this.editInfo,\n                this.lastSrc,\n                this.wasResized || this.isCropping,\n                this.clonedImage\n            );\n\n            // Remove editing wrapper\n            this.removeWrapper();\n\n            this.editor.addUndoSnapshot(() => this.image, ChangeSource.ImageResize);\n\n            if (selectImage) {\n                this.editor.select(this.image);\n            }\n\n            this.pngSource = null;\n            this.image = null;\n            this.editInfo = null;\n            this.lastSrc = null;\n            this.clonedImage = null;\n            this.isCropping = false;\n        }\n\n        if (!this.image && image?.isContentEditable && this.editor) {\n            // If there is new image to edit, enter editing mode for this image\n            this.editor.addUndoSnapshot();\n            this.image = image;\n\n            // Get initial edit info\n            this.editInfo = getEditInfoFromImage(image);\n\n            //Check if the image is a gif and convert it to a png\n            this.pngSource = tryToConvertGifToPng(this.editInfo);\n\n            //Check if the image was resized by the user\n            this.wasResized = checkIfImageWasResized(this.image);\n\n            operation =\n                (canRegenerateImage(image) ? operation : ImageEditOperation.Resize) &\n                this.allowedOperations;\n\n            // Create and update editing wrapper and elements\n            this.createWrapper(operation);\n            this.updateWrapper();\n\n            // Init drag and drop\n            this.dndHelpers = [\n                ...this.createDndHelpers(ImageEditElementClass.ResizeHandle, Resizer),\n                ...this.createDndHelpers(ImageEditElementClass.RotateHandle, Rotator),\n                ...this.createDndHelpers(ImageEditElementClass.CropHandle, Cropper),\n                ...this.createDndHelpers(ImageEditElementClass.CropContainer, Cropper),\n            ];\n\n            this.editor.select(this.image);\n        }\n    }\n\n    /**\n     * Flip the image.\n     * @param image The image to be flipped\n     * @param direction\n     */\n    public flipImage(image: HTMLImageElement, direction: 'vertical' | 'horizontal') {\n        this.image = image;\n        this.editInfo = getEditInfoFromImage(image);\n        const { angleRad } = this.editInfo;\n        const isInVerticalPostion =\n            (angleRad >= Math.PI / 2 && angleRad < (3 * Math.PI) / 4) ||\n            (angleRad <= -Math.PI / 2 && angleRad > (-3 * Math.PI) / 4);\n        if (isInVerticalPostion) {\n            if (direction === 'horizontal') {\n                this.editInfo.flippedVertical = !this.editInfo.flippedVertical;\n            } else {\n                this.editInfo.flippedHorizontal = !this.editInfo.flippedHorizontal;\n            }\n        } else {\n            if (direction === 'vertical') {\n                this.editInfo.flippedVertical = !this.editInfo.flippedVertical;\n            } else {\n                this.editInfo.flippedHorizontal = !this.editInfo.flippedHorizontal;\n            }\n        }\n        this.createWrapper(ImageEditOperation.Rotate);\n        this.updateWrapper();\n        this.setEditingImage(null);\n        this.editor?.select(image);\n    }\n\n    /**\n     * Rotate the image in radian angle.\n     * @param image The image to be rotated\n     * @param angleRad The angle in radian that the image must be rotated.\n     */\n    public rotateImage(image: HTMLImageElement, angleRad: number) {\n        this.image = image;\n        this.editInfo = getEditInfoFromImage(image);\n        this.editInfo.angleRad = this.editInfo.angleRad + angleRad;\n        this.createWrapper(ImageEditOperation.Rotate);\n        this.updateWrapper();\n        this.setEditingImage(null);\n        this.editor?.select(image);\n    }\n\n    /**\n     * quit editing mode when editor lose focus\n     */\n    private onBlur = () => {\n        this.setEditingImage(null, false /* selectImage */);\n    };\n    /**\n     * Create editing wrapper for the image\n     */\n    private createWrapper(operation: ImageEditOperation | CompatibleImageEditOperation) {\n        if (this.image && this.editor && this.options && this.editInfo) {\n            //Clone the image and insert the clone in a entity\n            this.clonedImage = this.image.cloneNode(true) as HTMLImageElement;\n            this.clonedImage.removeAttribute('id');\n            this.clonedImage.style.removeProperty('max-width');\n            this.clonedImage.style.width = this.editInfo.widthPx + 'px';\n            this.clonedImage.style.height = this.editInfo.heightPx + 'px';\n            this.wrapper = createElement(\n                KnownCreateElementDataIndex.ImageEditWrapper,\n                this.image.ownerDocument\n            ) as HTMLSpanElement;\n            this.wrapper?.firstChild?.appendChild(this.clonedImage);\n            this.wrapper.style.display = Browser.isSafari ? 'inline-block' : 'inline-flex';\n\n            // Cache current src so that we can compare it after edit see if src is changed\n            this.lastSrc = this.image.getAttribute('src');\n\n            // Set image src to original src to help show editing UI, also it will be used when regenerate image dataURL after editing\n            if (this.clonedImage) {\n                this.clonedImage.src = this.pngSource ?? this.editInfo.src;\n                this.clonedImage.style.position = 'absolute';\n            }\n\n            // Get HTML for all edit elements (resize handle, rotate handle, crop handle and overlay, ...) and create HTML element\n            const options: ImageHtmlOptions = {\n                borderColor: getColorString(this.options.borderColor!, this.editor.isDarkMode()),\n                rotateIconHTML: this.options.rotateIconHTML!,\n                rotateHandleBackColor: this.editor.isDarkMode()\n                    ? DARK_MODE_BGCOLOR\n                    : LIGHT_MODE_BGCOLOR,\n                isSmallImage: isASmallImage(this.editInfo.widthPx, this.editInfo.heightPx),\n            };\n            const htmlData: CreateElementData[] = [getResizeBordersHTML(options)];\n\n            getObjectKeys(ImageEditHTMLMap).forEach(thisOperation => {\n                const element = ImageEditHTMLMap[thisOperation](options, this.onShowResizeHandle);\n                if ((operation & thisOperation) == thisOperation && element) {\n                    arrayPush(htmlData, element);\n                }\n            });\n\n            htmlData.forEach(data => {\n                const element = createElement(data, this.image!.ownerDocument);\n                if (element && this.wrapper) {\n                    this.wrapper.appendChild(element);\n                }\n            });\n            this.insertImageWrapper(this.wrapper);\n        }\n    }\n\n    private insertImageWrapper(wrapper: HTMLSpanElement) {\n        if (this.image) {\n            this.shadowSpan = wrap(this.image, 'span');\n            if (this.shadowSpan) {\n                const shadowRoot = this.shadowSpan.attachShadow({\n                    mode: 'open',\n                });\n\n                this.shadowSpan.style.verticalAlign = 'bottom';\n                wrapper.style.fontSize = '24px';\n\n                shadowRoot.appendChild(wrapper);\n            }\n        }\n    }\n\n    /**\n     * Remove the temp wrapper of the image\n     */\n    private removeWrapper = () => {\n        if (this.shadowSpan) {\n            unwrap(this.shadowSpan);\n        }\n        this.wrapper = null;\n        this.shadowSpan = null;\n    };\n\n    /**\n     * Update image edit elements to reflect current editing result\n     * @param context\n     */\n    private updateWrapper = (context?: DragAndDropContext) => {\n        const wrapper = this.wrapper;\n        if (\n            wrapper &&\n            this.editInfo &&\n            this.image &&\n            this.clonedImage &&\n            this.options &&\n            this.shadowSpan?.parentElement\n        ) {\n            // Prepare: get related editing elements\n            const cropContainers = getEditElements(wrapper, ImageEditElementClass.CropContainer);\n            const cropOverlays = getEditElements(wrapper, ImageEditElementClass.CropOverlay);\n            const resizeHandles = getEditElements(wrapper, ImageEditElementClass.ResizeHandle);\n            const rotateCenter = getEditElements(wrapper, ImageEditElementClass.RotateCenter)[0];\n            const rotateHandle = getEditElements(wrapper, ImageEditElementClass.RotateHandle)[0];\n            const cropHandles = getEditElements(wrapper, ImageEditElementClass.CropHandle);\n\n            // Cropping and resizing will show different UI, so check if it is cropping here first\n            this.isCropping = cropContainers.length == 1 && cropOverlays.length == 4;\n            const {\n                angleRad,\n                bottomPercent,\n                leftPercent,\n                rightPercent,\n                topPercent,\n                flippedHorizontal,\n                flippedVertical,\n            } = this.editInfo;\n\n            // Width/height of the image\n            const {\n                targetWidth,\n                targetHeight,\n                originalWidth,\n                originalHeight,\n                visibleWidth,\n                visibleHeight,\n            } = getGeneratedImageSize(this.editInfo, this.isCropping);\n\n            const marginHorizontal = (targetWidth - visibleWidth) / 2;\n            const marginVertical = (targetHeight - visibleHeight) / 2;\n            const cropLeftPx = originalWidth * leftPercent;\n            const cropRightPx = originalWidth * rightPercent;\n            const cropTopPx = originalHeight * topPercent;\n            const cropBottomPx = originalHeight * bottomPercent;\n\n            // Update size and margin of the wrapper\n            wrapper.style.margin = `${marginVertical}px ${marginHorizontal}px`;\n            wrapper.style.transform = `rotate(${angleRad}rad)`;\n            setWrapperSizeDimensions(wrapper, this.image, visibleWidth, visibleHeight);\n\n            // Update the text-alignment to avoid the image to overflow if the parent element have align center or right\n            // or if the direction is Right To Left\n            wrapper.style.textAlign = isRtl(this.shadowSpan.parentElement) ? 'right' : 'left';\n\n            // Update size of the image\n            this.clonedImage.style.width = getPx(originalWidth);\n            this.clonedImage.style.height = getPx(originalHeight);\n\n            //Update flip direction\n            setFlipped(this.clonedImage.parentElement, flippedHorizontal, flippedVertical);\n\n            if (this.isCropping) {\n                // For crop, we also need to set position of the overlays\n                setSize(\n                    cropContainers[0],\n                    cropLeftPx,\n                    cropTopPx,\n                    cropRightPx,\n                    cropBottomPx,\n                    undefined,\n                    undefined\n                );\n                setSize(cropOverlays[0], 0, 0, cropRightPx, undefined, undefined, cropTopPx);\n                setSize(cropOverlays[1], undefined, 0, 0, cropBottomPx, cropRightPx, undefined);\n                setSize(cropOverlays[2], cropLeftPx, undefined, 0, 0, undefined, cropBottomPx);\n                setSize(cropOverlays[3], 0, cropTopPx, undefined, 0, cropLeftPx, undefined);\n\n                updateHandleCursor(cropHandles, angleRad);\n            } else {\n                // For rotate/resize, set the margin of the image so that cropped part won't be visible\n                this.clonedImage.style.margin = `${-cropTopPx}px 0 0 ${-cropLeftPx}px`;\n\n                // Double check resize\n                if (context?.elementClass == ImageEditElementClass.ResizeHandle) {\n                    const clientWidth = wrapper.clientWidth;\n                    const clientHeight = wrapper.clientHeight;\n                    this.wasResized = true;\n                    doubleCheckResize(\n                        this.editInfo,\n                        this.options.preserveRatio || false,\n                        clientWidth,\n                        clientHeight\n                    );\n\n                    this.updateWrapper();\n                }\n\n                const viewport = this.editor?.getVisibleViewport();\n                const isSmall = isASmallImage(targetWidth, targetHeight);\n                if (rotateHandle && rotateCenter && viewport) {\n                    updateRotateHandleState(\n                        viewport,\n                        angleRad,\n                        wrapper,\n                        rotateCenter,\n                        rotateHandle,\n                        isSmall\n                    );\n                }\n\n                updateSideHandlesVisibility(resizeHandles, isSmall);\n\n                updateHandleCursor(resizeHandles, angleRad);\n            }\n        }\n    };\n\n    /**\n     * Create drag and drop helpers\n     * @param wrapper\n     * @param elementClass\n     * @param dragAndDrop\n     */\n    private createDndHelpers(\n        elementClass: ImageEditElementClass,\n        dragAndDrop: DragAndDropHandler<DragAndDropContext, any>\n    ): DragAndDropHelper<DragAndDropContext, any>[] {\n        const wrapper = this.wrapper;\n        return wrapper && this.editInfo\n            ? getEditElements(wrapper, elementClass).map(\n                  element =>\n                      new DragAndDropHelper<DragAndDropContext, any>(\n                          element,\n                          {\n                              editInfo: this.editInfo!,\n                              options: this.options,\n                              elementClass,\n                              x: element.dataset.x as DNDDirectionX,\n                              y: element.dataset.y as DnDDirectionY,\n                          },\n                          this.updateWrapper,\n                          dragAndDrop,\n                          this.editor ? this.editor.getZoomScale() : 1\n                      )\n              )\n            : [];\n    }\n\n    /**\n     * Clean up drag and drop helpers\n     */\n    private clearDndHelpers() {\n        this.dndHelpers?.forEach(helper => helper.dispose());\n        this.dndHelpers = [];\n    }\n}\n\nfunction setSize(\n    element: HTMLElement,\n    left: number | undefined,\n    top: number | undefined,\n    right: number | undefined,\n    bottom: number | undefined,\n    width: number | undefined,\n    height: number | undefined\n) {\n    element.style.left = left !== undefined ? getPx(left) : element.style.left;\n    element.style.top = top !== undefined ? getPx(top) : element.style.top;\n    element.style.right = right !== undefined ? getPx(right) : element.style.right;\n    element.style.bottom = bottom !== undefined ? getPx(bottom) : element.style.bottom;\n    element.style.width = width !== undefined ? getPx(width) : element.style.width;\n    element.style.height = height !== undefined ? getPx(height) : element.style.height;\n}\n\nfunction setWrapperSizeDimensions(\n    wrapper: HTMLElement,\n    image: HTMLImageElement,\n    width: number,\n    height: number\n) {\n    const hasBorder = image.style.borderStyle;\n    if (hasBorder) {\n        const borderWidth = image.style.borderWidth ? 2 * parseInt(image.style.borderWidth) : 2;\n        wrapper.style.width = getPx(width + borderWidth);\n        wrapper.style.height = getPx(height + borderWidth);\n        return;\n    }\n    wrapper.style.width = getPx(width);\n    wrapper.style.height = getPx(height);\n}\n\nfunction getPx(value: number): string {\n    return value + 'px';\n}\n\nfunction getEditElements(wrapper: HTMLElement, elementClass: ImageEditElementClass): HTMLElement[] {\n    return toArray(wrapper.querySelectorAll('.' + elementClass)) as HTMLElement[];\n}\n\nfunction isRtl(element: Node): boolean {\n    return safeInstanceOf(element, 'HTMLElement')\n        ? getComputedStyle(element, 'direction') == 'rtl'\n        : false;\n}\n\nfunction handleRadIndexCalculator(angleRad: number): number {\n    let idx = Math.round(angleRad / DirectionRad) % DIRECTIONS;\n    return idx < 0 ? idx + DIRECTIONS : idx;\n}\n\nfunction rotateHandles(angleRad: number, y: string = '', x: string = ''): string {\n    const radIndex = handleRadIndexCalculator(angleRad);\n    const originalDirection = y + x;\n    const originalIndex = DirectionOrder.indexOf(originalDirection);\n    const rotatedIndex = originalIndex >= 0 && originalIndex + radIndex;\n    return rotatedIndex ? DirectionOrder[rotatedIndex % DIRECTIONS] : '';\n}\n\n/**\n * Rotate the resizer and cropper handles according to the image position.\n * @param handles The resizer handles.\n * @param angleRad The angle that the image was rotated.\n */\nfunction updateHandleCursor(handles: HTMLElement[], angleRad: number) {\n    handles.forEach(handle => {\n        const { y, x } = handle.dataset;\n        handle.style.cursor = `${rotateHandles(angleRad, y, x)}-resize`;\n    });\n}\n\nfunction updateSideHandlesVisibility(handles: HTMLElement[], isSmall: boolean) {\n    handles.forEach(handle => {\n        const { y, x } = handle.dataset;\n        const coordinate = (y ?? '') + (x ?? '');\n        const directions = ['n', 's', 'e', 'w'];\n        const isSideHandle = directions.indexOf(coordinate) > -1;\n        handle.style.display = isSideHandle && isSmall ? 'none' : '';\n    });\n}\n\n/**\n * Check if the current image was resized by the user\n * @param image the current image\n * @returns if the user resized the image, returns true, otherwise, returns false\n */\nfunction checkIfImageWasResized(image: HTMLImageElement): boolean {\n    const { width, height, style } = image;\n    const isMaxWidthInitial =\n        style.maxWidth === '' || style.maxWidth === 'initial' || style.maxWidth === 'auto';\n    if (\n        isMaxWidthInitial &&\n        (isFixedNumberValue(style.height) ||\n            isFixedNumberValue(style.width) ||\n            isFixedNumberValue(width) ||\n            isFixedNumberValue(height))\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction isFixedNumberValue(value: string | number) {\n    const numberValue = typeof value === 'string' ? parseInt(value) : value;\n    return !isNaN(numberValue);\n}\n\nfunction isASmallImage(widthPx: number, heightPx: number): boolean {\n    return widthPx && heightPx && (widthPx < MIN_HEIGHT_WIDTH || heightPx < MIN_HEIGHT_WIDTH)\n        ? true\n        : false;\n}\n\nfunction getColorString(color: string | ModeIndependentColor, isDarkMode: boolean): string {\n    if (typeof color === 'string') {\n        return color.trim();\n    }\n    return isDarkMode ? color.darkModeColor.trim() : color.lightModeColor.trim();\n}\n\nfunction setFlipped(\n    element: HTMLElement | null,\n    flippedHorizontally?: boolean,\n    flippedVertically?: boolean\n) {\n    if (element) {\n        element.style.transform = `scale(${flippedHorizontally ? -1 : 1}, ${\n            flippedVertically ? -1 : 1\n        })`;\n    }\n}\n","/**\n * Check if we can regenerate edited image from the source image.\n * An image can't regenerate result when there is CORS issue of the source content.\n * @param img The image element to test\n * @returns True when we can regenerate the edited image, otherwise false\n */\nexport default function canRegenerateImage(img: HTMLImageElement): boolean {\n    if (!img) {\n        return false;\n    }\n\n    try {\n        const canvas = img.ownerDocument.createElement('canvas');\n        canvas.width = 10;\n        canvas.height = 10;\n        const context = canvas.getContext('2d');\n        if (context) {\n            context.drawImage(img, 0, 0);\n            context.getImageData(0, 0, 1, 1);\n            return true;\n        }\n\n        return false;\n    } catch {\n        return false;\n    }\n}\n","import getTargetSizeByPercentage from '../editInfoUtils/getTargetSizeByPercentage';\nimport { getEditInfoFromImage } from '../editInfoUtils/editInfo';\n\n/**\n * Check if the image is already resized to the given percentage\n * @param image The image to check\n * @param percentage The percentage to check\n */\nexport default function isResizedTo(image: HTMLImageElement, percentage: number): boolean {\n    const editInfo = getEditInfoFromImage(image);\n    if (editInfo) {\n        const { width, height } = getTargetSizeByPercentage(editInfo, percentage);\n        return (\n            Math.round(width) == Math.round(editInfo.widthPx) &&\n            Math.round(height) == Math.round(editInfo.heightPx)\n        );\n    }\n    return false;\n}\n","import { ChangeSource } from 'roosterjs-editor-types';\nimport { deleteEditInfo } from '../editInfoUtils/editInfo';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * Remove explicit width & height attributes on the image element.\n * @param editor The editor that contains the image\n * @param image The image to remove w/h from\n */\nexport default function resetImage(editor: IEditor, image: HTMLImageElement) {\n    editor.addUndoSnapshot(() => {\n        image.style.width = '';\n        image.style.height = '';\n        image.style.maxWidth = '100%';\n        image.removeAttribute('width');\n        image.removeAttribute('height');\n        deleteEditInfo(image);\n    }, ChangeSource.ImageResize);\n}\n","import applyChange from '../editInfoUtils/applyChange';\nimport getTargetSizeByPercentage from '../editInfoUtils/getTargetSizeByPercentage';\nimport isResizedTo from './isResizedTo';\nimport { ChangeSource } from 'roosterjs-editor-types';\nimport { getEditInfoFromImage } from '../editInfoUtils/editInfo';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * Resize the image by percentage of its natural size. If the image is cropped or rotated,\n * the final size will also calculated with crop and rotate info.\n * @param editor The editor that contains the image\n * @param image The image to resize\n * @param percentage Percentage to resize to\n * @param minWidth Minimum width\n * @param minHeight Minimum height\n */\nexport default function resizeByPercentage(\n    editor: IEditor,\n    image: HTMLImageElement,\n    percentage: number,\n    minWidth: number,\n    minHeight: number\n) {\n    const editInfo = getEditInfoFromImage(image);\n\n    if (!isResizedTo(image, percentage)) {\n        loadImage(image, image.src, () => {\n            if (!editor.isDisposed() && editor.contains(image) && editInfo) {\n                const lastSrc = image.getAttribute('src');\n                const { width, height } = getTargetSizeByPercentage(editInfo, percentage);\n                editInfo.widthPx = Math.max(width, minWidth);\n                editInfo.heightPx = Math.max(height, minHeight);\n\n                editor.addUndoSnapshot(() => {\n                    applyChange(editor, image, editInfo, lastSrc || '', true /*wasResized*/);\n                }, ChangeSource.ImageResize);\n                editor.select(image);\n            }\n        });\n    }\n}\n\nfunction loadImage(img: HTMLImageElement, src: string, callback: () => void) {\n    img.onload = () => {\n        img.onload = null;\n        img.onerror = null;\n        callback();\n    };\n    img.onerror = () => {\n        img.onload = null;\n        img.onerror = null;\n        callback();\n    };\n    img.src = src;\n}\n","import type { DNDDirectionX, DnDDirectionY } from '../types/DragAndDropContext';\n\nexport const RESIZE_HANDLE_SIZE = 10;\nexport const RESIZE_HANDLE_MARGIN = 6;\n\nexport const ROTATE_SIZE = 32;\nexport const ROTATE_GAP = 15;\nexport const DEG_PER_RAD = 180 / Math.PI;\nexport const DEFAULT_ROTATE_HANDLE_HEIGHT = ROTATE_SIZE / 2 + ROTATE_GAP;\nexport const ROTATE_ICON_MARGIN = 8;\nexport const ROTATION: Record<string, number> = {\n    sw: 0,\n    nw: 90,\n    ne: 180,\n    se: 270,\n};\nexport const Xs: DNDDirectionX[] = ['w', '', 'e'];\nexport const Ys: DnDDirectionY[] = ['s', '', 'n'];\n\nexport const ROTATE_WIDTH = 1;\nexport const ROTATE_HANDLE_TOP = ROTATE_GAP + RESIZE_HANDLE_MARGIN;\nexport const CROP_HANDLE_SIZE = 22;\nexport const CROP_HANDLE_WIDTH = 7;\nexport const XS_CROP: DNDDirectionX[] = ['w', 'e'];\nexport const YS_CROP: DnDDirectionY[] = ['s', 'n'];\n\nexport const MIN_HEIGHT_WIDTH = 3 * RESIZE_HANDLE_SIZE + 2 * RESIZE_HANDLE_MARGIN;\n","import checkEditInfoState, { ImageEditInfoState } from './checkEditInfoState';\nimport generateDataURL from './generateDataURL';\nimport getGeneratedImageSize from './getGeneratedImageSize';\nimport { deleteEditInfo, getEditInfoFromImage, saveEditInfo } from './editInfo';\nimport { PluginEventType } from 'roosterjs-editor-types';\nimport type ImageEditInfo from '../types/ImageEditInfo';\nimport type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Apply changes from the edit info of an image, write result to the image\n * @param editor The editor object that contains the image\n * @param image The image to apply the change\n * @param editInfo Edit info that contains the changed information of the image\n * @param previousSrc Last src value of the image before the change was made\n * @param wasResizedOrCropped if the image was resized or cropped apply the new image dimensions\n * @param editingImage (optional) Image in editing state\n */\nexport default function applyChange(\n    editor: IEditor,\n    image: HTMLImageElement,\n    editInfo: ImageEditInfo,\n    previousSrc: string,\n    wasResizedOrCropped: boolean,\n    editingImage?: HTMLImageElement\n) {\n    let newSrc = '';\n\n    const initEditInfo = getEditInfoFromImage(editingImage ?? image);\n    const state = checkEditInfoState(editInfo, initEditInfo);\n\n    switch (state) {\n        case ImageEditInfoState.ResizeOnly:\n            // For resize only case, no need to generate a new image, just reuse the original one\n            newSrc = editInfo.src;\n            break;\n        case ImageEditInfoState.SameWithLast:\n            // For SameWithLast case, image may be resized but the content is still the same with last one,\n            // so no need to create a new image, but just reuse last one\n            newSrc = previousSrc;\n            break;\n        case ImageEditInfoState.FullyChanged:\n            // For other cases (cropped, rotated, ...) we need to create a new image to reflect the change\n            newSrc = generateDataURL(editingImage ?? image, editInfo);\n            break;\n    }\n\n    const srcChanged = newSrc != previousSrc;\n\n    if (srcChanged) {\n        // If the src is changed, fire an EditImage event so that plugins knows that a new image is used, and can\n        // replace the new src with some other string and it will be used and set to the image\n        const event = editor.triggerPluginEvent(PluginEventType.EditImage, {\n            image: image,\n            originalSrc: editInfo.src,\n            previousSrc,\n            newSrc,\n        });\n        newSrc = event.newSrc;\n    }\n\n    if (newSrc == editInfo.src) {\n        // If newSrc is the same with original one, it means there is only size change, but no rotation, no cropping,\n        // so we don't need to keep edit info, we can delete it\n        deleteEditInfo(image);\n    } else {\n        // Otherwise, save the new edit info to the image so that next time when we edit the same image, we know\n        // the edit info\n        saveEditInfo(image, editInfo);\n    }\n\n    // Write back the change to image, and set its new size\n    const { targetWidth, targetHeight } = getGeneratedImageSize(editInfo);\n    image.src = newSrc;\n\n    if (wasResizedOrCropped || state == ImageEditInfoState.FullyChanged) {\n        image.width = targetWidth;\n        image.height = targetHeight;\n        // Remove width/height style so that it won't affect the image size, since style width/height has higher priority\n        image.style.removeProperty('width');\n        image.style.removeProperty('height');\n        image.style.removeProperty('max-width');\n    }\n}\n","import type { CropInfo, ResizeInfo, RotateInfo } from '../types/ImageEditInfo';\nimport type ImageEditInfo from '../types/ImageEditInfo';\n\nconst RESIZE_KEYS: (keyof ResizeInfo)[] = ['widthPx', 'heightPx'];\nconst ROTATE_KEYS: (keyof RotateInfo)[] = ['angleRad'];\nconst CROP_KEYS: (keyof CropInfo)[] = [\n    'leftPercent',\n    'rightPercent',\n    'topPercent',\n    'bottomPercent',\n];\nconst ROTATE_CROP_KEYS: (keyof RotateInfo | keyof CropInfo)[] = [...ROTATE_KEYS, ...CROP_KEYS];\nconst ALL_KEYS = [...ROTATE_CROP_KEYS, ...RESIZE_KEYS];\n\n/**\n * @internal\n * State of an edit info object for image editing.\n * It is returned by checkEditInfoState() function\n */\nexport const enum ImageEditInfoState {\n    /**\n     * Invalid edit info. It means the given edit info object is either null,\n     * or not all its member are of correct type\n     */\n    Invalid,\n\n    /**\n     * The edit info shows that it is only potentially edited by resizing action.\n     * Image is not rotated or cropped, or event not changed at all.\n     */\n    ResizeOnly,\n\n    /**\n     * When compare with another edit info, this value can be returned when both current\n     * edit info and the other one are not been rotated, and they have same cropping\n     * percentages. So that they can share the same image src, only width and height\n     * need to be adjusted.\n     */\n    SameWithLast,\n\n    /**\n     * When this value is returned, it means the image is edited by either cropping or\n     * rotation, or both. Image source can't be reused, need to generate a new image src\n     * data uri.\n     */\n    FullyChanged,\n}\n\n/**\n * @internal\n * Check the state of an edit info\n * @param editInfo The edit info to check\n * @param compareTo An optional edit info to compare to\n * @returns If the source edit info is not valid (wrong type, missing field, ...), returns Invalid.\n * If the source edit info doesn't contain any rotation or cropping, returns ResizeOnly\n * If the compare edit info exists, and both of them don't contain rotation, and the have same cropping values,\n * returns SameWithLast. Otherwise, returns FullyChanged\n */\nexport default function checkEditInfoState(\n    editInfo: ImageEditInfo,\n    compareTo?: ImageEditInfo\n): ImageEditInfoState {\n    if (!editInfo || !editInfo.src || ALL_KEYS.some(key => !isNumber(editInfo[key]))) {\n        return ImageEditInfoState.Invalid;\n    } else if (\n        ROTATE_CROP_KEYS.every(key => areSameNumber(editInfo[key], 0)) &&\n        !editInfo.flippedHorizontal &&\n        !editInfo.flippedVertical &&\n        (!compareTo || (compareTo && editInfo.angleRad === compareTo.angleRad))\n    ) {\n        return ImageEditInfoState.ResizeOnly;\n    } else if (\n        compareTo &&\n        ROTATE_KEYS.every(key => areSameNumber(editInfo[key], 0)) &&\n        ROTATE_KEYS.every(key => areSameNumber(compareTo[key], 0)) &&\n        CROP_KEYS.every(key => areSameNumber(editInfo[key], compareTo[key])) &&\n        compareTo.flippedHorizontal === editInfo.flippedHorizontal &&\n        compareTo.flippedVertical === editInfo.flippedVertical\n    ) {\n        return ImageEditInfoState.SameWithLast;\n    } else {\n        return ImageEditInfoState.FullyChanged;\n    }\n}\n\nfunction isNumber(o: any): o is number {\n    return typeof o === 'number';\n}\n\nfunction areSameNumber(n1: number, n2: number) {\n    return Math.abs(n1 - n2) < 1e-3;\n}\n","import checkEditInfoState, { ImageEditInfoState } from './checkEditInfoState';\nimport { getMetadata, removeMetadata, setMetadata } from 'roosterjs-editor-dom';\nimport type ImageEditInfo from '../types/ImageEditInfo';\n\n/**\n * @internal\n * Save edit info to image\n * @param image The image to save edit info to\n * @param editInfo The edit info to save\n */\nexport function saveEditInfo(image: HTMLImageElement, editInfo: ImageEditInfo) {\n    if (image) {\n        setMetadata(image, editInfo);\n    }\n}\n\n/**\n * @internal\n * Delete edit info of an image if any\n * @param image The image to delete edit info from\n */\nexport function deleteEditInfo(image: HTMLImageElement) {\n    if (image) {\n        removeMetadata(image);\n    }\n}\n\n/**\n * @internal\n * Get image edit info from an image. If the image doesn't have edit info, create one from this image.\n * When create new edit info, it will have width/height set to the image's current client width/height, and\n * natural width/height set to the image's natural width/height, src set to its current src, and all\n * other fields set to 0.\n * @param image The image to get edit info from\n */\nexport function getEditInfoFromImage(image: HTMLImageElement): ImageEditInfo {\n    const obj = getMetadata<ImageEditInfo>(image);\n    return !obj || checkEditInfoState(obj) == ImageEditInfoState.Invalid\n        ? getInitialEditInfo(image)\n        : obj;\n}\n\nfunction getInitialEditInfo(image: HTMLImageElement): ImageEditInfo {\n    return {\n        src: image.getAttribute('src') || '',\n        widthPx: image.clientWidth,\n        heightPx: image.clientHeight,\n        naturalWidth: image.naturalWidth,\n        naturalHeight: image.naturalHeight,\n        leftPercent: 0,\n        rightPercent: 0,\n        topPercent: 0,\n        bottomPercent: 0,\n        angleRad: 0,\n    };\n}\n","import getGeneratedImageSize from './getGeneratedImageSize';\nimport type ImageEditInfo from '../types/ImageEditInfo';\n\n/**\n * @internal\n * Generate new dataURL from an image and edit info\n * @param image The image to generate data URL from. It is supposed to have original src loaded\n * @param editInfo Edit info of the image\n * @returns A BASE64 encoded string with image prefix that represents the content of the generated image.\n * If there are rotate/crop/resize info in the edit info, the generated image will also reflect the result.\n * It is possible to throw exception since the original image may not be able to read its content from\n * the code, so better check canRegenerateImage() of the image first.\n * @throws Exception when fail to generate dataURL from canvas\n */\nexport default function generateDataURL(image: HTMLImageElement, editInfo: ImageEditInfo): string {\n    const {\n        angleRad: angle,\n        widthPx: width,\n        heightPx: height,\n        bottomPercent: bottom,\n        leftPercent: left,\n        rightPercent: right,\n        topPercent: top,\n        naturalWidth,\n        naturalHeight,\n    } = editInfo;\n    const imageWidth = naturalWidth * (1 - left - right);\n    const imageHeight = naturalHeight * (1 - top - bottom);\n\n    // Adjust the canvas size and scaling for high display resolution\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const canvas = document.createElement('canvas');\n    const { targetWidth, targetHeight } = getGeneratedImageSize(editInfo);\n    canvas.width = targetWidth * devicePixelRatio;\n    canvas.height = targetHeight * devicePixelRatio;\n\n    const context = canvas.getContext('2d');\n    if (context) {\n        context.scale(devicePixelRatio, devicePixelRatio);\n        context.translate(targetWidth / 2, targetHeight / 2);\n        context.rotate(angle);\n        context.scale(editInfo.flippedHorizontal ? -1 : 1, editInfo.flippedVertical ? -1 : 1);\n        context.drawImage(\n            image,\n            naturalWidth * left,\n            naturalHeight * top,\n            imageWidth,\n            imageHeight,\n            -width / 2,\n            -height / 2,\n            width,\n            height\n        );\n    }\n\n    return canvas.toDataURL('image/png', 1.0);\n}\n","import type GeneratedImageSize from '../types/GeneratedImageSize';\nimport type ImageEditInfo from '../types/ImageEditInfo';\n\n/**\n * @internal\n * Calculate the target size of an image.\n * For image that is not rotated, target size is the same with resizing/cropping size.\n * For image that is rotated, target size is calculated from resizing/cropping size and its rotate angle\n * Say an image is resized to 100w*100h, cropped 25% on each side, then rotated 45deg, so that cropped size\n * will be (both height and width) 100*(1-0.25-0,25) = 50px, then final image size will be 50*sqrt(2) = 71px\n * @param editInfo The edit info to calculate size from\n * @param beforeCrop True to calculate the full size of original image before crop, false to calculate the size\n * after crop\n * @returns A GeneratedImageSize object which contains original, visible and target target width and height of the image\n */\nexport default function getGeneratedImageSize(\n    editInfo: ImageEditInfo,\n    beforeCrop?: boolean\n): GeneratedImageSize {\n    const {\n        widthPx: width,\n        heightPx: height,\n        angleRad: angle,\n        leftPercent: left,\n        rightPercent: right,\n        topPercent: top,\n        bottomPercent: bottom,\n    } = editInfo;\n\n    // Original image size before crop and rotate\n    const originalWidth = width / (1 - left - right);\n    const originalHeight = height / (1 - top - bottom);\n\n    // Visible size\n    const visibleWidth = beforeCrop ? originalWidth : width;\n    const visibleHeight = beforeCrop ? originalHeight : height;\n\n    // Target size after crop and rotate\n    const targetWidth =\n        Math.abs(visibleWidth * Math.cos(angle)) + Math.abs(visibleHeight * Math.sin(angle));\n    const targetHeight =\n        Math.abs(visibleWidth * Math.sin(angle)) + Math.abs(visibleHeight * Math.cos(angle));\n\n    return {\n        targetWidth,\n        targetHeight,\n        originalWidth,\n        originalHeight,\n        visibleWidth,\n        visibleHeight,\n    };\n}\n","import type ImageEditInfo from '../types/ImageEditInfo';\nimport type ImageSize from '../types/ImageSize';\n\n/**\n * @internal\n * Get target size of an image with a percentage\n * @param editInfo\n * @param percentage\n * @returns [width, height] array\n */\nexport default function getTargetSizeByPercentage(\n    editInfo: ImageEditInfo,\n    percentage: number\n): ImageSize {\n    const {\n        naturalWidth,\n        naturalHeight,\n        leftPercent: left,\n        topPercent: top,\n        rightPercent: right,\n        bottomPercent: bottom,\n    } = editInfo;\n    const width = naturalWidth * (1 - left - right) * percentage;\n    const height = naturalHeight * (1 - top - bottom) * percentage;\n    return { width, height };\n}\n","import generateDataURL from './generateDataURL';\nimport type ImageEditInfo from '../types/ImageEditInfo';\n\n/**\n * @internal\n * Check if the image is a gif, if true, use canvas to convert it to a png.\n * If the image is not a gif, return null.\n * @param image to be converted\n * @returns the converted image data url or null, if the image is not a gif\n */\nexport function tryToConvertGifToPng(editInfo: ImageEditInfo) {\n    const { src, widthPx, heightPx, naturalHeight, naturalWidth } = editInfo;\n    if (src.indexOf('.gif') > -1 || src.indexOf('image/gif') > -1) {\n        try {\n            const image = document.createElement('img');\n            image.src = src;\n            const newEditInfo = {\n                src: src,\n                widthPx: widthPx,\n                heightPx: heightPx,\n                naturalWidth: naturalWidth,\n                naturalHeight: naturalHeight,\n                leftPercent: 0,\n                rightPercent: 0,\n                topPercent: 0,\n                bottomPercent: 0,\n                angleRad: 0,\n            };\n            return generateDataURL(image, newEditInfo);\n        } catch {\n            return null;\n        }\n    }\n    return null;\n}\n","import { ImageEditElementClass } from '../types/ImageEditElementClass';\nimport { rotateCoordinate } from './Resizer';\nimport type { DNDDirectionX, DnDDirectionY } from '../types/DragAndDropContext';\nimport type DragAndDropContext from '../types/DragAndDropContext';\nimport type DragAndDropHandler from '../../../pluginUtils/DragAndDropHandler';\nimport type { CreateElementData } from 'roosterjs-editor-types';\nimport type { CropInfo } from '../types/ImageEditInfo';\nimport {\n    CROP_HANDLE_SIZE,\n    CROP_HANDLE_WIDTH,\n    ROTATION,\n    XS_CROP,\n    YS_CROP,\n} from '../constants/constants';\n\n/**\n * @internal\n * Crop handle for DragAndDropHelper\n */\nexport const Cropper: DragAndDropHandler<DragAndDropContext, CropInfo> = {\n    onDragStart: ({ editInfo }) => ({ ...editInfo }),\n    onDragging: ({ editInfo, x, y, options }, e, base, dx, dy) => {\n        [dx, dy] = rotateCoordinate(dx, dy, editInfo.angleRad);\n\n        const {\n            widthPx,\n            heightPx,\n            leftPercent,\n            rightPercent,\n            topPercent,\n            bottomPercent,\n        } = editInfo;\n        const { minWidth, minHeight } = options;\n        const widthPercent = 1 - leftPercent - rightPercent;\n        const heightPercent = 1 - topPercent - bottomPercent;\n\n        if (\n            widthPercent > 0 &&\n            heightPercent > 0 &&\n            minWidth !== undefined &&\n            minHeight !== undefined\n        ) {\n            const fullWidth = widthPx / widthPercent;\n            const fullHeight = heightPx / heightPercent;\n            const newLeft =\n                x != 'e'\n                    ? crop(base.leftPercent, dx, fullWidth, rightPercent, minWidth)\n                    : leftPercent;\n            const newRight =\n                x != 'w'\n                    ? crop(base.rightPercent, -dx, fullWidth, leftPercent, minWidth)\n                    : rightPercent;\n            const newTop =\n                y != 's'\n                    ? crop(base.topPercent, dy, fullHeight, bottomPercent, minHeight)\n                    : topPercent;\n            const newBottom =\n                y != 'n'\n                    ? crop(base.bottomPercent, -dy, fullHeight, topPercent, minHeight)\n                    : bottomPercent;\n\n            editInfo.leftPercent = newLeft;\n            editInfo.rightPercent = newRight;\n            editInfo.topPercent = newTop;\n            editInfo.bottomPercent = newBottom;\n            editInfo.widthPx = fullWidth * (1 - newLeft - newRight);\n            editInfo.heightPx = fullHeight * (1 - newTop - newBottom);\n\n            return true;\n        } else {\n            return false;\n        }\n    },\n};\n\nfunction crop(\n    basePercentage: number,\n    deltaValue: number,\n    fullValue: number,\n    currentPercentage: number,\n    minValue: number\n): number {\n    const maxValue = fullValue * (1 - currentPercentage) - minValue;\n    const newValue = fullValue * basePercentage + deltaValue;\n    const validValue = Math.max(Math.min(newValue, maxValue), 0);\n    return validValue / fullValue;\n}\n\n/**\n * @internal\n * Get HTML for crop elements, including 4 overlays (to show dark shadow), 1 container and 4 crop handles\n */\nexport function getCropHTML(): CreateElementData[] {\n    const overlayHTML: CreateElementData = {\n        tag: 'div',\n        style: 'position:absolute;background-color:rgb(0,0,0,0.5);pointer-events:none',\n        className: ImageEditElementClass.CropOverlay,\n    };\n    const containerHTML: CreateElementData = {\n        tag: 'div',\n        style: 'position:absolute;overflow:hidden',\n        className: ImageEditElementClass.CropContainer,\n        children: [],\n    };\n    if (containerHTML) {\n        XS_CROP.forEach(x =>\n            YS_CROP.forEach(y => containerHTML.children?.push(getCropHTMLInternal(x, y)))\n        );\n    }\n    return [containerHTML, overlayHTML, overlayHTML, overlayHTML, overlayHTML];\n}\n\nfunction getCropHTMLInternal(x: DNDDirectionX, y: DnDDirectionY): CreateElementData {\n    const leftOrRight = x == 'w' ? 'left' : 'right';\n    const topOrBottom = y == 'n' ? 'top' : 'bottom';\n    const rotation = ROTATION[y + x];\n\n    return {\n        tag: 'div',\n        className: ImageEditElementClass.CropHandle,\n        style: `position:absolute;pointer-events:auto;cursor:${y}${x}-resize;${leftOrRight}:0;${topOrBottom}:0;width:${CROP_HANDLE_SIZE}px;height:${CROP_HANDLE_SIZE}px;transform:rotate(${rotation}deg)`,\n        dataset: { x, y },\n        children: getCropHandleHTML(),\n    };\n}\n\nfunction getCropHandleHTML(): CreateElementData[] {\n    const result: CreateElementData[] = [];\n    [0, 1].forEach(layer =>\n        [0, 1].forEach(dir => {\n            result.push(getCropHandleHTMLInternal(layer, dir));\n        })\n    );\n    return result;\n}\n\nfunction getCropHandleHTMLInternal(layer: number, dir: number): CreateElementData {\n    const position =\n        dir == 0\n            ? `right:${layer}px;height:${CROP_HANDLE_WIDTH - layer * 2}px;`\n            : `top:${layer}px;width:${CROP_HANDLE_WIDTH - layer * 2}px;`;\n    const bgColor = layer == 0 ? 'white' : 'black';\n\n    return {\n        tag: 'div',\n        style: `position:absolute;left:${layer}px;bottom:${layer}px;${position};background-color:${bgColor}`,\n    };\n}\n","import { ImageEditElementClass } from '../types/ImageEditElementClass';\nimport { RESIZE_HANDLE_MARGIN, RESIZE_HANDLE_SIZE, Xs, Ys } from '../constants/constants';\nimport type { DNDDirectionX, DnDDirectionY } from '../types/DragAndDropContext';\nimport type DragAndDropContext from '../types/DragAndDropContext';\nimport type DragAndDropHandler from '../../../pluginUtils/DragAndDropHandler';\nimport type { ResizeInfo } from '../types/ImageEditInfo';\nimport type ImageEditInfo from '../types/ImageEditInfo';\nimport type ImageHtmlOptions from '../types/ImageHtmlOptions';\nimport type { CreateElementData } from 'roosterjs-editor-types';\n\n/**\n * An optional callback to allow customize resize handle element of image resizing.\n * To customize the resize handle element, add this callback and change the attributes of elementData then it\n * will be picked up by ImageEdit code\n */\nexport interface OnShowResizeHandle {\n    (elementData: CreateElementData, x: DNDDirectionX, y: DnDDirectionY): void;\n}\n\nconst enum HandleTypes {\n    SquareHandles,\n    CircularHandlesCorner,\n}\n\n/**\n * @internal\n * The resize drag and drop handler\n */\nexport const Resizer: DragAndDropHandler<DragAndDropContext, ResizeInfo> = {\n    onDragStart: ({ editInfo }) => ({ ...editInfo }),\n    onDragging: ({ x, y, editInfo, options }, e, base, deltaX, deltaY) => {\n        const ratio =\n            base.widthPx > 0 && base.heightPx > 0 ? (base.widthPx * 1.0) / base.heightPx : 0;\n\n        [deltaX, deltaY] = rotateCoordinate(deltaX, deltaY, editInfo.angleRad);\n        if (options.minWidth !== undefined && options.minHeight !== undefined) {\n            const horizontalOnly = x == '';\n            const verticalOnly = y == '';\n            const shouldPreserveRatio =\n                !(horizontalOnly || verticalOnly) && (options.preserveRatio || e.shiftKey);\n            let newWidth = horizontalOnly\n                ? base.widthPx\n                : Math.max(base.widthPx + deltaX * (x == 'w' ? -1 : 1), options.minWidth);\n            let newHeight = verticalOnly\n                ? base.heightPx\n                : Math.max(base.heightPx + deltaY * (y == 'n' ? -1 : 1), options.minHeight);\n\n            if (shouldPreserveRatio && ratio > 0) {\n                if (ratio > 1) {\n                    // first sure newHeight is right，calculate newWidth\n                    newWidth = newHeight * ratio;\n                    if (newWidth < options.minWidth) {\n                        newWidth = options.minWidth;\n                        newHeight = newWidth / ratio;\n                    }\n                } else {\n                    // first sure newWidth is right，calculate newHeight\n                    newHeight = newWidth / ratio;\n                    if (newHeight < options.minHeight) {\n                        newHeight = options.minHeight;\n                        newWidth = newHeight * ratio;\n                    }\n                }\n            }\n            editInfo.widthPx = newWidth;\n            editInfo.heightPx = newHeight;\n            return true;\n        } else {\n            return false;\n        }\n    },\n};\n\n/**\n * @internal Calculate the rotated x and y distance for mouse moving\n * @param x Original x distance\n * @param y Original y distance\n * @param angle Rotated angle, in radian\n * @returns rotated x and y distances\n */\nexport function rotateCoordinate(x: number, y: number, angle: number): [number, number] {\n    if (x == 0 && y == 0) {\n        return [0, 0];\n    }\n    const hypotenuse = Math.sqrt(x * x + y * y);\n    angle = Math.atan2(y, x) - angle;\n    return [hypotenuse * Math.cos(angle), hypotenuse * Math.sin(angle)];\n}\n\n/**\n * @internal\n * Double check if the changed size can satisfy current width of container.\n * When resize an image and preserve ratio, its size can be limited by the size of container.\n * So we need to check the actual size and calculate the size again\n * @param editInfo Edit info of the image\n * @param preserveRatio Whether w/h ratio need to be preserved\n * @param actualWidth Actual width of the image after resize\n * @param actualHeight Actual height of the image after resize\n */\nexport function doubleCheckResize(\n    editInfo: ImageEditInfo,\n    preserveRatio: boolean,\n    actualWidth: number,\n    actualHeight: number\n) {\n    let { widthPx, heightPx } = editInfo;\n    const ratio = heightPx > 0 ? widthPx / heightPx : 0;\n\n    actualWidth = Math.floor(actualWidth);\n    actualHeight = Math.floor(actualHeight);\n    widthPx = Math.floor(widthPx);\n    heightPx = Math.floor(heightPx);\n\n    editInfo.widthPx = actualWidth;\n    editInfo.heightPx = actualHeight;\n\n    if (preserveRatio && ratio > 0 && (widthPx !== actualWidth || heightPx !== actualHeight)) {\n        if (actualWidth < widthPx) {\n            editInfo.heightPx = actualWidth / ratio;\n        } else {\n            editInfo.widthPx = actualHeight * ratio;\n        }\n    }\n}\n\n/**\n * @internal\n * Get HTML for resize handles at the corners\n */\nexport function getCornerResizeHTML(\n    { borderColor: resizeBorderColor }: ImageHtmlOptions,\n    onShowResizeHandle?: OnShowResizeHandle\n): CreateElementData[] {\n    const result: CreateElementData[] = [];\n\n    Xs.forEach(x =>\n        Ys.forEach(y => {\n            let elementData =\n                (x == '') == (y == '')\n                    ? getResizeHandleHTML(\n                          x,\n                          y,\n                          resizeBorderColor,\n                          HandleTypes.CircularHandlesCorner\n                      )\n                    : null;\n            if (onShowResizeHandle && elementData) {\n                onShowResizeHandle(elementData, x, y);\n            }\n            if (elementData) {\n                result.push(elementData);\n            }\n        })\n    );\n    return result;\n}\n\n/**\n * @internal\n * Get HTML for resize handles on the sides\n */\nexport function getSideResizeHTML(\n    { borderColor: resizeBorderColor }: ImageHtmlOptions,\n    onShowResizeHandle?: OnShowResizeHandle\n): CreateElementData[] {\n    const result: CreateElementData[] = [];\n    Xs.forEach(x =>\n        Ys.forEach(y => {\n            let elementData =\n                (x == '') != (y == '')\n                    ? getResizeHandleHTML(\n                          x,\n                          y,\n                          resizeBorderColor,\n                          HandleTypes.CircularHandlesCorner\n                      )\n                    : null;\n            if (onShowResizeHandle && elementData) {\n                onShowResizeHandle(elementData, x, y);\n            }\n            if (elementData) {\n                result.push(elementData);\n            }\n        })\n    );\n    return result;\n}\n\n/**\n * @internal\n * Get HTML for resize borders\n */\nexport function getResizeBordersHTML({\n    borderColor: resizeBorderColor,\n}: ImageHtmlOptions): CreateElementData {\n    return {\n        tag: 'div',\n        style: `position:absolute;left:0;right:0;top:0;bottom:0;border:solid 2px ${resizeBorderColor};pointer-events:none;`,\n    };\n}\n\nfunction getResizeHandleHTML(\n    x: DNDDirectionX,\n    y: DnDDirectionY,\n    borderColor: string,\n    handleTypes: HandleTypes\n): CreateElementData | null {\n    const leftOrRight = x == 'w' ? 'left' : 'right';\n    const topOrBottom = y == 'n' ? 'top' : 'bottom';\n    const leftOrRightValue = x == '' ? '50%' : '0px';\n    const topOrBottomValue = y == '' ? '50%' : '0px';\n    const direction = y + x;\n    return x == '' && y == ''\n        ? null\n        : {\n              tag: 'div',\n              style: `position:absolute;${leftOrRight}:${leftOrRightValue};${topOrBottom}:${topOrBottomValue}`,\n              children: [\n                  {\n                      tag: 'div',\n                      style: setHandleStyle[handleTypes](\n                          direction,\n                          topOrBottom,\n                          leftOrRight,\n                          borderColor\n                      ),\n                      className: ImageEditElementClass.ResizeHandle,\n                      dataset: { x, y },\n                  },\n              ],\n          };\n}\n\nconst setHandleStyle: Record<\n    HandleTypes,\n    (direction: string, topOrBottom: string, leftOrRight: string, borderColor: string) => string\n> = {\n    0: (direction, leftOrRight, topOrBottom, borderColor) =>\n        `position:relative;width:${RESIZE_HANDLE_SIZE}px;height:${RESIZE_HANDLE_SIZE}px;background-color: ${borderColor};cursor:${direction}-resize;${topOrBottom}:-${RESIZE_HANDLE_MARGIN}px;${leftOrRight}:-${RESIZE_HANDLE_MARGIN}px;`,\n    1: (direction, leftOrRight, topOrBottom) =>\n        `position:relative;width:${RESIZE_HANDLE_SIZE}px;height:${RESIZE_HANDLE_SIZE}px;background-color: #FFFFFF;cursor:${direction}-resize;${topOrBottom}:-${RESIZE_HANDLE_MARGIN}px;${leftOrRight}:-${RESIZE_HANDLE_MARGIN}px;border-radius:100%;border: 2px solid #bfbfbf;box-shadow: 0px 0.36316px 1.36185px rgba(100, 100, 100, 0.25);`,\n};\n","import { ImageEditElementClass } from '../types/ImageEditElementClass';\nimport type DragAndDropContext from '../types/DragAndDropContext';\nimport type DragAndDropHandler from '../../../pluginUtils/DragAndDropHandler';\nimport type ImageHtmlOptions from '../types/ImageHtmlOptions';\nimport type { CreateElementData, Rect } from 'roosterjs-editor-types';\nimport type { RotateInfo } from '../types/ImageEditInfo';\nimport {\n    DEFAULT_ROTATE_HANDLE_HEIGHT,\n    DEG_PER_RAD,\n    RESIZE_HANDLE_MARGIN,\n    ROTATE_GAP,\n    ROTATE_HANDLE_TOP,\n    ROTATE_ICON_MARGIN,\n    ROTATE_SIZE,\n    ROTATE_WIDTH,\n} from '../constants/constants';\n\n/**\n * @internal\n * The rotate drag and drop handler\n */\nexport const Rotator: DragAndDropHandler<DragAndDropContext, RotateInfo> = {\n    onDragStart: ({ editInfo }) => ({ ...editInfo }),\n    onDragging: ({ editInfo, options }, e, base, deltaX, deltaY) => {\n        const distance = editInfo.heightPx / 2 + DEFAULT_ROTATE_HANDLE_HEIGHT;\n        const newX = distance * Math.sin(base.angleRad) + deltaX;\n        const newY = distance * Math.cos(base.angleRad) - deltaY;\n        let angleInRad = Math.atan2(newX, newY);\n\n        if (!e.altKey && options && options.minRotateDeg !== undefined) {\n            const angleInDeg = angleInRad * DEG_PER_RAD;\n            const adjustedAngleInDeg =\n                Math.round(angleInDeg / options.minRotateDeg) * options.minRotateDeg;\n            angleInRad = adjustedAngleInDeg / DEG_PER_RAD;\n        }\n\n        if (editInfo.angleRad != angleInRad) {\n            editInfo.angleRad = angleInRad;\n            return true;\n        } else {\n            return false;\n        }\n    },\n};\n\n/**\n * @internal\n * Move rotate handle. When image is very close to the border of editor, rotate handle may not be visible.\n * Fix it by reduce the distance from image to rotate handle\n */\nexport function updateRotateHandleState(\n    editorRect: Rect,\n    angleRad: number,\n    wrapper: HTMLElement,\n    rotateCenter: HTMLElement,\n    rotateHandle: HTMLElement,\n    isSmallImage: boolean\n) {\n    if (isSmallImage) {\n        rotateCenter.style.display = 'none';\n        rotateHandle.style.display = 'none';\n        return;\n    } else {\n        rotateCenter.style.display = '';\n        rotateHandle.style.display = '';\n        const rotateCenterRect = rotateCenter.getBoundingClientRect();\n        const wrapperRect = wrapper.getBoundingClientRect();\n        const ROTATOR_HEIGHT = ROTATE_SIZE + ROTATE_GAP + RESIZE_HANDLE_MARGIN;\n        if (rotateCenterRect && wrapperRect) {\n            let adjustedDistance = Number.MAX_SAFE_INTEGER;\n            const angle = angleRad * DEG_PER_RAD;\n\n            if (angle < 45 && angle > -45 && wrapperRect.top - editorRect.top < ROTATOR_HEIGHT) {\n                const top = rotateCenterRect.top - editorRect.top;\n                adjustedDistance = top;\n            } else if (\n                angle <= -80 &&\n                angle >= -100 &&\n                wrapperRect.left - editorRect.left < ROTATOR_HEIGHT\n            ) {\n                const left = rotateCenterRect.left - editorRect.left;\n                adjustedDistance = left;\n            } else if (\n                angle >= 80 &&\n                angle <= 100 &&\n                editorRect.right - wrapperRect.right < ROTATOR_HEIGHT\n            ) {\n                const right = rotateCenterRect.right - editorRect.right;\n                adjustedDistance = Math.min(editorRect.right - wrapperRect.right, right);\n            } else if (\n                (angle <= -160 || angle >= 160) &&\n                editorRect.bottom - wrapperRect.bottom < ROTATOR_HEIGHT\n            ) {\n                const bottom = rotateCenterRect.bottom - editorRect.bottom;\n                adjustedDistance = Math.min(editorRect.bottom - wrapperRect.bottom, bottom);\n            }\n\n            const rotateGap = Math.max(Math.min(ROTATE_GAP, adjustedDistance), 0);\n            const rotateTop = Math.max(Math.min(ROTATE_SIZE, adjustedDistance - rotateGap), 0);\n            rotateCenter.style.top = -rotateGap - RESIZE_HANDLE_MARGIN + 'px';\n            rotateCenter.style.height = rotateGap + 'px';\n            rotateHandle.style.top = -rotateTop + 'px';\n        }\n    }\n}\n\n/**\n * @internal\n * Get HTML for rotate elements, including the rotate handle with icon, and a line between the handle and the image\n */\nexport function getRotateHTML({\n    borderColor,\n    rotateHandleBackColor,\n}: ImageHtmlOptions): CreateElementData[] {\n    const handleLeft = ROTATE_SIZE / 2;\n    return [\n        {\n            tag: 'div',\n            className: ImageEditElementClass.RotateCenter,\n            style: `position:absolute;left:50%;width:1px;background-color:${borderColor};top:${-ROTATE_HANDLE_TOP}px;height:${ROTATE_GAP}px;margin-left:${-ROTATE_WIDTH}px;`,\n            children: [\n                {\n                    tag: 'div',\n                    className: ImageEditElementClass.RotateHandle,\n                    style: `position:absolute;background-color:${rotateHandleBackColor};border:solid 1px ${borderColor};border-radius:50%;width:${ROTATE_SIZE}px;height:${ROTATE_SIZE}px;left:-${\n                        handleLeft + ROTATE_WIDTH\n                    }px;cursor:move;top:${-ROTATE_SIZE}px;`,\n                    children: [getRotateIconHTML(borderColor)],\n                },\n            ],\n        },\n    ];\n}\n\nfunction getRotateIconHTML(borderColor: string): CreateElementData {\n    return {\n        tag: 'svg',\n        namespace: 'http://www.w3.org/2000/svg',\n        style: `width:16px;height:16px;margin: ${ROTATE_ICON_MARGIN}px ${ROTATE_ICON_MARGIN}px`,\n        children: [\n            {\n                tag: 'path',\n                namespace: 'http://www.w3.org/2000/svg',\n                attributes: {\n                    d: 'M 10.5,10.0 A 3.8,3.8 0 1 1 6.7,6.3',\n                    transform: 'matrix(1.1 1.1 -1.1 1.1 11.6 -10.8)',\n                    ['fill-opacity']: '0',\n                    stroke: borderColor,\n                },\n            },\n            {\n                tag: 'path',\n                namespace: 'http://www.w3.org/2000/svg',\n                attributes: {\n                    d: 'M12.0 3.648l.884-.884.53 2.298-2.298-.53z',\n                    stroke: borderColor,\n                },\n            },\n        ],\n    };\n}\n","export { default as ImageEdit } from './ImageEdit';\nexport { default as canRegenerateImage } from './api/canRegenerateImage';\nexport { default as resizeByPercentage } from './api/resizeByPercentage';\nexport { default as isResizedTo } from './api/isResizedTo';\nexport { default as resetImage } from './api/resetImage';\nexport { OnShowResizeHandle } from './imageEditors/Resizer';\nexport { DNDDirectionX, DnDDirectionY } from './types/DragAndDropContext';\n","import ImageEdit from '../ImageEdit/ImageEdit';\nimport { ImageEditOperation } from 'roosterjs-editor-types';\n\n/**\n * @deprecated Use ImageEdit plugin instead\n */\nexport default class ImageResize extends ImageEdit {\n    /**\n     * Create a new instance of ImageResize\n     * @param minWidth Minimum width of image when resize in pixel, default value is 10\n     * @param minHeight Minimum height of image when resize in pixel, default value is 10\n     * @param selectionBorderColor Color of resize border and handles, default value is #DB626C\n     * @param forcePreserveRatio Whether always preserve width/height ratio when resize, default value is false\n     * @param resizableImageSelector Selector for picking which image is resizable (e.g. for all images not placeholders), note\n     * that the tag must be IMG regardless what the selector is\n     */\n    constructor(\n        minWidth: number = 10,\n        minHeight: number = 10,\n        selectionBorderColor: string = '#DB626C',\n        forcePreserveRatio: boolean = false,\n        resizableImageSelector: string = 'img'\n    ) {\n        super({\n            minHeight,\n            minWidth,\n            borderColor: selectionBorderColor,\n            preserveRatio: forcePreserveRatio,\n            imageSelector: resizableImageSelector,\n        });\n    }\n\n    /**\n     * @deprecated\n     */\n    showResizeHandle(img: HTMLImageElement) {\n        this.setEditingImage(img, ImageEditOperation.Resize);\n    }\n\n    /**\n     * @deprecated\n     */\n    hideResizeHandle(selectImageAfterUnSelect?: boolean) {\n        this.setEditingImage(null /*image*/, selectImageAfterUnSelect);\n    }\n}\n","export { default as ImageResize } from './ImageResize';\n","import convertPasteContentForSingleImage from './imageConverter/convertPasteContentForSingleImage';\nimport convertPastedContentForLI from './commonConverter/convertPastedContentForLI';\nimport convertPastedContentFromExcel from './excelConverter/convertPastedContentFromExcel';\nimport convertPastedContentFromOfficeOnline from './officeOnlineConverter/convertPastedContentFromOfficeOnline';\nimport convertPastedContentFromPowerPoint from './pptConverter/convertPastedContentFromPowerPoint';\nimport convertPastedContentFromWord from './wordConverter/convertPastedContentFromWord';\nimport handleLineMerge from './lineMerge/handleLineMerge';\nimport sanitizeHtmlColorsFromPastedContent from './sanitizeHtmlColorsFromPastedContent/sanitizeHtmlColorsFromPastedContent';\nimport sanitizeLinks from './sanitizeLinks/sanitizeLinks';\nimport { chainSanitizerCallback, getPasteSource } from 'roosterjs-editor-dom';\nimport { KnownPasteSourceType, PasteType, PluginEventType } from 'roosterjs-editor-types';\n\nimport type {\n    HtmlSanitizerOptions,\n    EditorPlugin,\n    IEditor,\n    PluginEvent,\n} from 'roosterjs-editor-types';\n\nconst GOOGLE_SHEET_NODE_NAME = 'google-sheets-html-origin';\n\n/**\n * Paste plugin, handles BeforePaste event and reformat some special content, including:\n * 1. Content copied from Word\n * 2. Content copied from Excel\n * 3. Content copied from Word Online or OneNote Online\n */\nexport default class Paste implements EditorPlugin {\n    private editor: IEditor | null = null;\n\n    /**\n     * Construct a new instance of Paste class\n     * @param unknownTagReplacement Replace solution of unknown tags, default behavior is to replace with SPAN\n     * @param convertSingleImageBody When enabled, if clipboard HTML contains a single image, we reuse the image without modifying the src attribute.\n     *                               When disabled, pasted image src attribute will use the dataUri from clipboard data -- By Default disabled.\n     */\n    constructor(\n        private unknownTagReplacement: string = 'SPAN',\n        private convertSingleImageBody: boolean = false\n    ) {}\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Paste';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (this.editor && event.eventType == PluginEventType.BeforePaste) {\n            const { fragment, sanitizingOption } = event;\n            const trustedHTMLHandler = this.editor.getTrustedHTMLHandler();\n\n            switch (getPasteSource(event, this.convertSingleImageBody)) {\n                case KnownPasteSourceType.WordDesktop:\n                    // Handle HTML copied from Word\n                    convertPastedContentFromWord(event);\n                    break;\n                case KnownPasteSourceType.ExcelDesktop:\n                case KnownPasteSourceType.ExcelOnline:\n                    if (\n                        event.pasteType === PasteType.Normal ||\n                        event.pasteType === PasteType.MergeFormat\n                    ) {\n                        // Handle HTML copied from Excel\n                        convertPastedContentFromExcel(event, trustedHTMLHandler);\n                    }\n                    break;\n                case KnownPasteSourceType.PowerPointDesktop:\n                    convertPastedContentFromPowerPoint(event, trustedHTMLHandler);\n                    break;\n                case KnownPasteSourceType.WacComponents:\n                    convertPastedContentFromOfficeOnline(fragment, sanitizingOption);\n                    break;\n                case KnownPasteSourceType.GoogleSheets:\n                    sanitizingOption.additionalTagReplacements[GOOGLE_SHEET_NODE_NAME] = '*';\n                    break;\n                case KnownPasteSourceType.SingleImage:\n                    convertPasteContentForSingleImage(event, trustedHTMLHandler);\n                    break;\n                case KnownPasteSourceType.Default:\n                    convertPastedContentForLI(fragment);\n                    handleLineMerge(fragment);\n                    break;\n            }\n            sanitizeLinks(sanitizingOption);\n            sanitizeHtmlColorsFromPastedContent(sanitizingOption);\n            sanitizeBlockStyles(sanitizingOption);\n\n            // Replace unknown tags with SPAN\n            sanitizingOption.unknownTagReplacement = this.unknownTagReplacement;\n        }\n    }\n}\n\nfunction sanitizeBlockStyles(sanitizingOption: Required<HtmlSanitizerOptions>) {\n    chainSanitizerCallback(sanitizingOption.cssStyleCallbacks, 'display', (value: string) => {\n        return value != 'flex'; // return whether we keep the style\n    });\n}\n","import {\n    changeElementTag,\n    getTagOfNode,\n    toArray,\n    wrap,\n    safeInstanceOf,\n} from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Convert content copied from Teams to be well-formed\n */\nexport default function convertPastedContentForLI(fragment: DocumentFragment) {\n    // Sometimes it is possible that we get LI nodes directly under DIV.\n    // In that case we need to convert DIV to UL. It is also possible to be OL, but we don't know it.\n    // So always assume it is UL here, and later user can change it.\n    if (isPureLiNode(fragment)) {\n        wrap(toArray(fragment.childNodes), 'UL');\n    } else if (\n        safeInstanceOf(fragment.firstChild, 'HTMLElement') &&\n        isPureLiNode(fragment.firstChild)\n    ) {\n        changeElementTag(fragment.firstChild as HTMLElement, 'UL');\n    }\n}\n\nfunction isPureLiNode(node: ParentNode & Node) {\n    if (node && !node.nextSibling && ['OL', 'UL', 'MENU'].indexOf(getTagOfNode(node)) < 0) {\n        let hasLi = false;\n        if (\n            toArray(node.childNodes).every(childNode => {\n                if (safeInstanceOf(childNode, 'Text') && !childNode.nodeValue?.trim()) {\n                    return true;\n                } else if (getTagOfNode(childNode) == 'LI') {\n                    hasLi = true;\n                    return true;\n                } else {\n                    return false;\n                }\n            }) &&\n            hasLi\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { chainSanitizerCallback, getTagOfNode, moveChildNodes } from 'roosterjs-editor-dom';\nimport type { BeforePasteEvent, TrustedHTMLHandler } from 'roosterjs-editor-types';\n\nconst LAST_TD_END_REGEX = /<\\/\\s*td\\s*>((?!<\\/\\s*tr\\s*>)[\\s\\S])*$/i;\nconst LAST_TR_END_REGEX = /<\\/\\s*tr\\s*>((?!<\\/\\s*table\\s*>)[\\s\\S])*$/i;\nconst LAST_TR_REGEX = /<tr[^>]*>[^<]*/i;\nconst LAST_TABLE_REGEX = /<table[^>]*>[^<]*/i;\nconst DEFAULT_BORDER_STYLE = 'solid 1px #d4d4d4';\n\n/**\n * @internal\n * Convert pasted content from Excel, add borders when source doc doesn't have a border\n * @param event The BeforePaste event\n */\nexport default function convertPastedContentFromExcel(\n    event: BeforePasteEvent,\n    trustedHTMLHandler: TrustedHTMLHandler\n) {\n    const { fragment, sanitizingOption, htmlBefore, clipboardData } = event;\n    const html = clipboardData.html ? excelHandler(clipboardData.html, htmlBefore) : undefined;\n\n    if (html && clipboardData.html != html) {\n        const doc = new DOMParser().parseFromString(trustedHTMLHandler(html), 'text/html');\n        moveChildNodes(fragment, doc?.body);\n    }\n\n    // For Excel Online\n    const firstChild = fragment.firstChild;\n    if (firstChild && firstChild.childNodes.length > 0 && getTagOfNode(firstChild) == 'DIV') {\n        const tableFound = Array.from(firstChild.childNodes).every((child: Node) => {\n            // Tables pasted from Excel Online should be of the format: 0 to N META tags and 1 TABLE tag\n            return getTagOfNode(child) == 'META'\n                ? true\n                : getTagOfNode(child) == 'TABLE' && child == firstChild.lastChild;\n        });\n\n        // Extract Table from Div\n        if (tableFound && firstChild.lastChild) {\n            event.fragment.replaceChildren(firstChild.lastChild);\n        }\n    }\n\n    chainSanitizerCallback(sanitizingOption.elementCallbacks, 'TD', element => {\n        if (element.style.borderStyle == 'none') {\n            element.style.border = DEFAULT_BORDER_STYLE;\n        }\n        return true;\n    });\n}\n\n/**\n * @internal Export for test only\n * @param html Source html\n */\nexport function excelHandler(html: string, htmlBefore: string): string {\n    if (html.match(LAST_TD_END_REGEX)) {\n        const trMatch = htmlBefore.match(LAST_TR_REGEX);\n        const tr = trMatch ? trMatch[0] : '<TR>';\n        html = tr + html + '</TR>';\n    }\n    if (html.match(LAST_TR_END_REGEX)) {\n        let tableMatch = htmlBefore.match(LAST_TABLE_REGEX);\n        let table = tableMatch ? tableMatch[0] : '<TABLE>';\n        html = table + html + '</TABLE>';\n    }\n\n    return html;\n}\n","import { moveChildNodes } from 'roosterjs-editor-dom';\nimport type { BeforePasteEvent, TrustedHTMLHandler } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Convert pasted content if there are HTML and Image data in the Clipboard\n * @param event The BeforePaste event\n */\nexport default function convertPasteContentForSingleImage(\n    event: BeforePasteEvent,\n    trustedHTMLHandler: TrustedHTMLHandler\n) {\n    const { fragment, clipboardData } = event;\n    const { html, image } = clipboardData;\n\n    if (html && image) {\n        //If there are Html in the clipboard, and the html body only have one img children, use the HTML\n        const doc = new DOMParser().parseFromString(trustedHTMLHandler(html), 'text/html');\n        moveChildNodes(fragment, doc?.body);\n    }\n}\n","export { default as Paste } from './Paste';\n","import {\n    changeElementTag,\n    ContentTraverser,\n    findClosestElementAncestor,\n    getBlockElementAtNode,\n    getNextLeafSibling,\n    getPreviousLeafSibling,\n    getTagOfNode,\n} from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Process pasted content, if there are multiple blocks that are not wrapped by a shared ancestor node,\n * change the tag of first and last node to be SPAN so that it will be merged into current block\n * @param root Root node of content to process\n */\nexport default function handleLineMerge(root: Node) {\n    const traverser = ContentTraverser.createBodyTraverser(root);\n    const blocks: { start: Node; end: Node }[] = [];\n\n    for (\n        let block = traverser?.currentBlockElement;\n        block;\n        block = traverser.getNextBlockElement()\n    ) {\n        blocks.push({\n            start: block.getStartNode(),\n            end: block.getEndNode(),\n        });\n    }\n\n    if (blocks.length > 0) {\n        const blocksLength = blocks.length - 1;\n        processBlock(blocks[0]);\n        processBlock(blocks[blocksLength]);\n        checkAndAddBr(root, blocks[0], true /*isFirst*/);\n        checkAndAddBr(root, blocks[blocksLength], false /*isFirst*/, blocks[0]);\n    }\n}\n\nfunction processBlock(block: { start: Node; end: Node }) {\n    const { start, end } = block;\n\n    if (start == end && getTagOfNode(start) == 'DIV') {\n        const node = changeElementTag(start as HTMLElement, 'SPAN') as Node;\n        block.start = node;\n        block.end = node;\n\n        if (node && node.lastChild && getTagOfNode(node.lastChild) == 'BR') {\n            node.removeChild(node.lastChild);\n        }\n    } else if (getTagOfNode(end) == 'BR') {\n        const node = end.ownerDocument?.createTextNode('');\n        if (node) {\n            end.parentNode?.insertBefore(node, end);\n            block.end = node;\n            end.parentNode?.removeChild(end);\n        }\n    }\n}\n\nfunction checkAndAddBr(\n    root: Node,\n    block: { start: Node; end: Node },\n    isFirst: boolean,\n    firstBlock?: { start: Node; end: Node }\n) {\n    const blockElement = getBlockElementAtNode(root, block.start);\n    const sibling = isFirst\n        ? getNextLeafSibling(root, block.end)\n        : getPreviousLeafSibling(root, block.start);\n\n    if (!sibling) {\n        return;\n    }\n\n    if (blockElement?.contains(sibling)) {\n        const br = block.start.ownerDocument?.createElement('br');\n        if (br) {\n            const blockToUse = isFirst ? block.end : block.start;\n            blockToUse.parentNode?.insertBefore(br, isFirst ? block.end.nextSibling : block.start);\n        }\n    } else if (\n        firstBlock &&\n        firstBlock.end == firstBlock.start &&\n        getTagOfNode(firstBlock.end) == 'SPAN'\n    ) {\n        // If the first block and the last block are Siblings, add a BR before so the only two\n        // lines that are being pasted are not merged.\n        const previousSibling = getPreviousLeafSibling(root, block.start);\n        if (\n            firstBlock.end.contains(previousSibling) &&\n            !findClosestElementAncestor(block.start, root, 'li')\n        ) {\n            const br = block.start.ownerDocument?.createElement('br');\n            if (br) {\n                block.start.parentNode?.insertBefore(br, block.start);\n            }\n        }\n    }\n}\n","/**\n * @internal\n * Type that holds all the info of a consecutive list item block.\n */\nexport default interface ListItemBlock {\n    /**\n     * The first element in block of list item from pasted word online document.\n     */\n    startElement: Element | null;\n\n    /**\n     * The last element in block of list item from pasted word online document.\n     */\n    endElement: Element | null;\n\n    /**\n     * The position where the processed bulleted list should be inserted.\n     */\n    insertPositionNode: Node | null;\n\n    /**\n     * The list of containers that wraps each list item.\n     */\n    listItemContainers: Element[];\n}\n\n/**\n * @internal\n * Initialize an empty ListItemBlock\n */\nexport function createListItemBlock(listItem: Element | null = null): ListItemBlock {\n    return {\n        startElement: listItem,\n        endElement: listItem,\n        insertPositionNode: null,\n        listItemContainers: listItem ? [listItem] : [],\n    };\n}\n","import { chainSanitizerCallback } from 'roosterjs-editor-dom';\nimport type { HtmlSanitizerOptions } from 'roosterjs-editor-types';\nimport convertPastedContentFromWordOnline, {\n    isWordOnlineWithList,\n} from './convertPastedContentFromWordOnline';\n\nconst WAC_IDENTIFY_SELECTOR =\n    'ul[class^=\"BulletListStyle\"]>.OutlineElement,ol[class^=\"NumberListStyle\"]>.OutlineElement,span.WACImageContainer';\nconst TABLE_TEMP_ELEMENTS_QUERY = [\n    'TableInsertRowGapBlank',\n    'TableColumnResizeHandle',\n    'TableCellTopBorderHandle',\n    'TableCellLeftBorderHandle',\n    'TableHoverColumnHandle',\n    'TableHoverRowHandle',\n]\n    .map(className => `.${className}`)\n    .join(',');\n/**\n * @internal\n * Convert pasted content from Office Online\n * Once it is known that the document is from WAC\n * We need to remove the display property and margin from all the list item\n * @param event The BeforePaste event\n */\nexport default function convertPastedContentFromOfficeOnline(\n    fragment: DocumentFragment,\n    sanitizingOption: Required<HtmlSanitizerOptions>\n) {\n    fragment.querySelectorAll(WAC_IDENTIFY_SELECTOR).forEach((el: Element) => {\n        const element = el as HTMLElement;\n        element.style.removeProperty('display');\n        element.style.removeProperty('margin');\n    });\n    // call conversion function if the pasted content is from word online and\n    // has list element in the pasted content.\n    if (isWordOnlineWithList(fragment)) {\n        convertPastedContentFromWordOnline(fragment);\n    }\n\n    // Remove \"border:none\" for image to fix image resize behavior\n    // We found a problem that when paste an image with \"border:none\" then the resize border will be\n    // displayed incorrectly when resize it. So we need to drop this style\n    chainSanitizerCallback(\n        sanitizingOption.cssStyleCallbacks,\n        'border',\n        (value, element) => element.tagName != 'IMG' || value != 'none'\n    );\n\n    fragment\n        .querySelectorAll(TABLE_TEMP_ELEMENTS_QUERY)\n        .forEach(node => node.parentElement?.removeChild(node));\n}\n","import { createListItemBlock } from './ListItemBlock';\nimport type ListItemBlock from './ListItemBlock';\n\nimport {\n    splitParentNode,\n    getNextLeafSibling,\n    getFirstLeafNode,\n    getTagOfNode,\n    collapseNodes,\n    unwrap,\n    toArray,\n    safeInstanceOf,\n} from 'roosterjs-editor-dom';\n\nconst WORD_ONLINE_IDENTIFYING_SELECTOR =\n    'div.ListContainerWrapper>ul[class^=\"BulletListStyle\"],div.ListContainerWrapper>ol[class^=\"NumberListStyle\"],span.WACImageContainer > img';\nconst LIST_CONTAINER_ELEMENT_CLASS_NAME = 'ListContainerWrapper';\nconst IMAGE_CONTAINER_ELEMENT_CLASS_NAME = 'WACImageContainer';\n\n//When the list style is a symbol and the value is not in the clipboard, WordOnline\nconst VALID_LIST_STYLE_CHAR_CODES = [\n    '111', //'o'\n    '9643', //'▫'\n    '9830', //'♦'\n];\n\n/**\n * @internal\n */\nexport function isWordOnlineWithList(fragment: DocumentFragment): boolean {\n    return !!(fragment && fragment.querySelector(WORD_ONLINE_IDENTIFYING_SELECTOR));\n}\n\n// Word Online pasted content DOM structure as of July 12th 2019\n//<html>\n//  <body>\n//      <div class='OutlineGroup'>  ----------> this layer may exist depend on the content user paste\n//          <div class=\"OutlineElement\">  ----------> text content\n//              <p></p>\n//          </div>\n//          <div class=\"ListItemWrapper\">  ----------> list items: for unordered list, all the items on the same level is under the same wrapper\n//              <ul>                                       list items in the same list can be divided into different ListItemWrapper\n//                  <li></li>                              list items in the same list can also be divided into different Outline Group;\n//                  <li></li>\n//              </ul>\n//          </div>\n//      </div>\n//      <div class='OutlineGroup'>\n//          <div class=\"ListItemWrapper\">  ----------> list items: for ordered list, each items has it's own wrapper\n//              <ol>\n//                  <li></li>\n//              </ol>\n//          </div>\n//          <div class=\"ListItemWrapper\">\n//              <ol>\n//                  <li></li>\n//              </ol>\n//          </div>\n//      </div>\n//  </body>\n//</html>\n//\n\n/**\n * @internal\n * Convert text copied from word online into text that's workable with rooster editor\n * @param fragment Document fragment that is being pasted into editor.\n */\nexport default function convertPastedContentFromWordOnline(fragment: DocumentFragment) {\n    sanitizeListItemContainer(fragment);\n    const listItemBlocks: ListItemBlock[] = getListItemBlocks(fragment);\n\n    listItemBlocks.forEach(itemBlock => {\n        // There are cases where consecutive List Elements are separated into different nodes:\n        // <div>\n        //   <div>\n        //      <ol></ol>\n        //   </div>\n        //   <div>\n        //      <ol></ol>\n        //   </div>\n        // </div>\n        // <div>\n        //   <div>\n        //      <ol></ol>\n        //   </div>\n        // </div>\n        // in the above case we want to collapse the two root level div into one and unwrap the list item nodes.\n        // after the following flattening the list will become following:\n        //\n        // <div>\n        //    <ol></ol>\n        // </div>\n        // <div>\n        //    <ol></ol>\n        // </div>\n        // <div>\n        //    <ol></ol>\n        // </div>\n        // Then we are start processing.\n        flattenListBlock(fragment, itemBlock);\n\n        // Find the node to insertBefore, which is next sibling node of the end of a listItemBlock.\n        itemBlock.insertPositionNode = itemBlock.endElement?.nextSibling ?? null;\n\n        let convertedListElement: Element | undefined = undefined;\n        const doc = fragment.ownerDocument;\n\n        itemBlock.listItemContainers.forEach(listItemContainer => {\n            let listType: 'OL' | 'UL' | null = getContainerListType(listItemContainer); // list type that is contained by iterator.\n            if (listType) {\n                // Initialize processed element with proper listType if this is the first element\n                if (!convertedListElement) {\n                    convertedListElement = createNewList(listItemContainer, doc, listType);\n                }\n\n                // Get all list items(<li>) in the current iterator element.\n                const currentListItems = toArray(listItemContainer.querySelectorAll('li'));\n                currentListItems.forEach(item => {\n                    // If item is in root level and the type of list changes then\n                    // insert the current list into body and then reinitialize the convertedListElement\n                    // Word Online is using data-aria-level to determine the the depth of the list item.\n                    const itemLevel = parseInt(item.getAttribute('data-aria-level') ?? '');\n                    // In first level list, there are cases where a consecutive list item DIV may have different list type\n                    // When that happens we need to insert the processed elements into the document, then change the list type\n                    // and keep the processing going.\n                    if (\n                        convertedListElement &&\n                        getTagOfNode(convertedListElement) != listType &&\n                        itemLevel == 1 &&\n                        listType\n                    ) {\n                        insertConvertedListToDoc(convertedListElement, fragment, itemBlock);\n                        convertedListElement = createNewList(listItemContainer, doc, listType);\n                    }\n                    if (convertedListElement && listType) {\n                        insertListItem(convertedListElement, item, listType, doc);\n                    }\n                });\n            }\n        });\n        if (convertedListElement) {\n            insertConvertedListToDoc(convertedListElement, fragment, itemBlock);\n        }\n\n        // Once we finish the process the list items and put them into a list.\n        // After inserting the processed element,\n        // we need to remove all the non processed node from the parent node.\n        const parentContainer = itemBlock.startElement?.parentNode;\n        if (parentContainer) {\n            itemBlock.listItemContainers.forEach(listItemContainer => {\n                parentContainer.removeChild(listItemContainer);\n            });\n        }\n    });\n\n    const imageNodes = getImageNodes(fragment);\n    imageNodes.forEach(node => {\n        //   Structure when pasting Word Wac Image as of 10/22/2021\n        //   <span class='WACImageContainer'>\n        //        <img class=\"WACImage\" >\n        //        <span style=\"display:block\">\n        //        </span>\n        //   </span>\n        //\n        //   Since the second span inside of WACImageContainer have style display block it displays an additional space at the bottom of the image.\n        //   Removing the nodes that are not img will resolve the additional space\n        if (safeInstanceOf(node, 'HTMLSpanElement')) {\n            node.childNodes.forEach(childNode => {\n                if (getTagOfNode(childNode) != 'IMG') {\n                    childNode.parentElement?.removeChild(childNode);\n                }\n            });\n        }\n    });\n}\n\nfunction createNewList(listItemContainer: Element, doc: Document, tag: 'OL' | 'UL') {\n    const newList = doc.createElement(tag);\n    const startAttribute = listItemContainer.firstElementChild?.getAttribute('start');\n    if (startAttribute) {\n        newList.setAttribute('start', startAttribute);\n    }\n    return newList;\n}\n\n/**\n * The node processing is based on the premise of only ol/ul is in ListContainerWrapper class\n * However the html might be malformed, this function is to split all the other elements out of ListContainerWrapper\n * @param fragment pasted document that contains all the list element.\n */\nfunction sanitizeListItemContainer(fragment: DocumentFragment) {\n    const listItemContainerListEl = toArray(\n        fragment.querySelectorAll(WORD_ONLINE_IDENTIFYING_SELECTOR)\n    );\n    listItemContainerListEl.forEach(el => {\n        const replaceRegex = new RegExp(`\\\\b${LIST_CONTAINER_ELEMENT_CLASS_NAME}\\\\b`, 'g');\n        if (el.previousSibling) {\n            const prevParent = splitParentNode(el, true) as HTMLElement;\n            prevParent.className = prevParent.className.replace(replaceRegex, '');\n        }\n        if (el.nextSibling) {\n            const nextParent = splitParentNode(el, false) as HTMLElement;\n            nextParent.className = nextParent.className.replace(replaceRegex, '');\n        }\n    });\n}\n\n/**\n * Take all the list items in the document, and group the consecutive list times in a list block;\n * @param fragment pasted document that contains all the list element.\n */\nfunction getListItemBlocks(fragment: DocumentFragment): ListItemBlock[] {\n    const listElements = fragment.querySelectorAll('.' + LIST_CONTAINER_ELEMENT_CLASS_NAME);\n    const result: ListItemBlock[] = [];\n    let curListItemBlock: ListItemBlock | null = null;\n    for (let i = 0; i < listElements.length; i++) {\n        let curItem = listElements[i];\n        if (!curListItemBlock) {\n            curListItemBlock = createListItemBlock(curItem);\n        } else {\n            const { listItemContainers } = curListItemBlock;\n            const lastItemInCurBlock = listItemContainers[listItemContainers.length - 1];\n            if (\n                curItem == lastItemInCurBlock.nextSibling ||\n                (lastItemInCurBlock.parentNode &&\n                    getFirstLeafNode(curItem) ==\n                        getNextLeafSibling(lastItemInCurBlock.parentNode, lastItemInCurBlock))\n            ) {\n                listItemContainers.push(curItem);\n                curListItemBlock.endElement = curItem;\n            } else {\n                curListItemBlock.endElement = lastItemInCurBlock;\n                result.push(curListItemBlock);\n                curListItemBlock = createListItemBlock(curItem);\n            }\n        }\n    }\n\n    if (curListItemBlock && curListItemBlock.listItemContainers.length > 0) {\n        result.push(curListItemBlock);\n    }\n\n    return result;\n}\n\n/**\n * Flatten the list items, so that all the consecutive list items are under the same parent.\n * @param fragment Root element of that contains the element.\n * @param listItemBlock The list item block needed to be flattened.\n */\nfunction flattenListBlock(fragment: DocumentFragment, listItemBlock: ListItemBlock) {\n    if (listItemBlock.startElement && listItemBlock.endElement) {\n        const collapsedListItemSections = collapseNodes(\n            fragment,\n            listItemBlock.startElement,\n            listItemBlock.endElement,\n            true\n        );\n        collapsedListItemSections.forEach(section => {\n            if (getTagOfNode(section.firstChild) == 'DIV') {\n                unwrap(section);\n            }\n        });\n    }\n}\n\n/**\n * Get the list type that the container contains. If there is no list in the container\n * return null;\n * @param listItemContainer Container that contains a list\n */\nfunction getContainerListType(listItemContainer: Element): 'OL' | 'UL' | null {\n    const tag = getTagOfNode(listItemContainer.firstChild);\n    return tag == 'UL' || tag == 'OL' ? tag : null;\n}\n\n/**\n * Insert list item into the correct position of a list\n * @param listRootElement Root element of the list that is accepting a coming element.\n * @param itemToInsert List item that needed to be inserted.\n * @param listType Type of list(ul/ol)\n */\nfunction insertListItem(\n    listRootElement: Element,\n    itemToInsert: HTMLElement,\n    listType: 'UL' | 'OL',\n    doc: HTMLDocument\n): void {\n    if (!listType) {\n        return;\n    }\n    // Get item level from 'data-aria-level' attribute\n    let itemLevel = parseInt(itemToInsert.getAttribute('data-aria-level') ?? '');\n\n    // Try to reuse the List Marker\n    let style = itemToInsert.getAttribute('data-leveltext');\n    if (\n        listType == 'UL' &&\n        style &&\n        VALID_LIST_STYLE_CHAR_CODES.indexOf(style.charCodeAt(0).toString()) > -1\n    ) {\n        itemToInsert.style.listStyleType = `\"${style}  \"`;\n    }\n\n    let curListLevel = listRootElement; // Level iterator to find the correct place for the current element.\n    // if the itemLevel is 1 it means the level iterator is at the correct place.\n    while (itemLevel > 1) {\n        if (!curListLevel.firstChild) {\n            // If the current level is empty, create empty list within the current level\n            // then move the level iterator into the next level.\n            curListLevel.appendChild(doc.createElement(listType));\n            if (curListLevel.firstElementChild) {\n                curListLevel = curListLevel.firstElementChild;\n            }\n        } else {\n            // If the current level is not empty, the last item in the needs to be a UL or OL\n            // and the level iterator should move to the UL/OL at the last position.\n            let lastChild = curListLevel.lastElementChild;\n            let lastChildTag = getTagOfNode(lastChild);\n            if (lastChild && (lastChildTag == 'UL' || lastChildTag == 'OL')) {\n                // If the last child is a list(UL/OL), then move the level iterator to last child.\n                curListLevel = lastChild;\n            } else {\n                // If the last child is not a list, then append a new list to the level\n                // and move the level iterator to the new level.\n                curListLevel.appendChild(doc.createElement(listType));\n                if (curListLevel.lastElementChild) {\n                    curListLevel = curListLevel.lastElementChild;\n                }\n            }\n        }\n        itemLevel--;\n    }\n\n    // Once the level iterator is at the right place, then append the list item in the level.\n    curListLevel.appendChild(itemToInsert);\n}\n\n/**\n * Insert the converted list item into the correct place.\n * @param convertedListElement List element that is converted from list item block\n * @param fragment Root element of that contains the converted listItemBlock\n * @param listItemBlock List item block that was converted.\n */\nfunction insertConvertedListToDoc(\n    convertedListElement: Element,\n    fragment: DocumentFragment,\n    listItemBlock: ListItemBlock\n) {\n    if (!convertedListElement) {\n        return;\n    }\n\n    const { insertPositionNode } = listItemBlock;\n    if (insertPositionNode) {\n        const parentNode = insertPositionNode.parentNode;\n        if (parentNode) {\n            parentNode.insertBefore(convertedListElement, insertPositionNode);\n        }\n    } else {\n        const parentNode = listItemBlock.startElement?.parentNode;\n        if (parentNode) {\n            parentNode.appendChild(convertedListElement);\n        } else {\n            fragment.appendChild(convertedListElement);\n        }\n    }\n}\n\nfunction getImageNodes(fragment: DocumentFragment) {\n    return fragment.querySelectorAll('.' + IMAGE_CONTAINER_ELEMENT_CLASS_NAME);\n}\n","import { moveChildNodes } from 'roosterjs-editor-dom';\nimport type { BeforePasteEvent, TrustedHTMLHandler } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Convert pasted content from PowerPoint\n * @param event The BeforePaste event\n */\nexport default function convertPastedContentFromPowerPoint(\n    event: BeforePasteEvent,\n    trustedHTMLHandler: TrustedHTMLHandler\n) {\n    const { fragment, clipboardData } = event;\n\n    if (clipboardData.html && !clipboardData.text && clipboardData.image) {\n        // It is possible that PowerPoint copied both image and HTML but not plain text.\n        // We always prefer HTML if any.\n        const doc = new DOMParser().parseFromString(\n            trustedHTMLHandler(clipboardData.html),\n            'text/html'\n        );\n\n        moveChildNodes(fragment, doc?.body);\n    }\n}\n","/**\n * @internal\n * List of deprecated colors that should be removed\n */\n\nexport const DeprecatedColorList: string[] = [\n    'activeborder',\n    'activecaption',\n    'appworkspace',\n    'background',\n    'buttonhighlight',\n    'buttonshadow',\n    'captiontext',\n    'inactiveborder',\n    'inactivecaption',\n    'inactivecaptiontext',\n    'infobackground',\n    'infotext',\n    'menu',\n    'menutext',\n    'scrollbar',\n    'threeddarkshadow',\n    'threedface',\n    'threedhighlight',\n    'threedlightshadow',\n    'threedfhadow',\n    'window',\n    'windowframe',\n    'windowtext',\n];\n","import { chainSanitizerCallback } from 'roosterjs-editor-dom';\nimport { DeprecatedColorList } from './deprecatedColorList';\nimport type { HtmlSanitizerOptions } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Remove the deprecated colors from pasted content\n * @param sanitizingOption the sanitizingOption of BeforePasteEvent\n * */\nexport default function sanitizeHtmlColorsFromPastedContent(\n    sanitizingOption: Required<HtmlSanitizerOptions>\n) {\n    ['color', 'background-color'].forEach(property => {\n        chainSanitizerCallback(\n            sanitizingOption.cssStyleCallbacks,\n            property,\n            (value: string) => DeprecatedColorList.indexOf(value) < 0\n        );\n    });\n}\n","import { chainSanitizerCallback } from 'roosterjs-editor-dom';\nimport type { HtmlSanitizerOptions } from 'roosterjs-editor-types';\n\nconst SUPPORTED_PROTOCOLS = ['http:', 'https:', 'notes:', 'mailto:', 'onenote:'];\n\n/**\n * @internal\n * Clear local paths and remove link\n * @param sanitizingOption the sanitizingOption of BeforePasteEvent\n * */\nexport default function sanitizeLinks(sanitizingOption: Required<HtmlSanitizerOptions>) {\n    chainSanitizerCallback(\n        sanitizingOption.attributeCallbacks,\n        'href',\n        (value: string, element: HTMLElement) => validateLink(value, element)\n    );\n}\n\nfunction validateLink(link: string, htmlElement: HTMLElement) {\n    let url;\n    try {\n        url = new URL(link);\n    } catch {\n        url = undefined;\n    }\n\n    /* whitelist supported protocols */\n    if (url && SUPPORTED_PROTOCOLS.indexOf(url.protocol) > -1) {\n        return link;\n    }\n    htmlElement.removeAttribute('href');\n    return '';\n}\n","import type ListMetadata from './ListMetadata';\n\n/**\n * @internal\n * Holds the ids for the lists already seen for a specified level\n */\nexport default interface LevelLists {\n    /**\n     * The metadata for the lists seen at  this level\n     * key: word list id, value: list metadata\n     */\n    listsMetadata: { [key: string]: ListMetadata };\n\n    /** Unique id of the list currently at this level */\n    currentUniqueListId: number;\n}\n\n/**\n * @internal\n * create an empty LevelLists\n */\nexport function createLevelLists(): LevelLists {\n    return {\n        listsMetadata: {},\n        currentUniqueListId: -1,\n    };\n}\n","import { createLevelLists } from './LevelLists';\nimport type LevelLists from './LevelLists';\nimport type ListItemMetadata from './ListItemMetadata';\nimport type ListMetadata from './ListMetadata';\n\n/**\n * @internal\n * Contains the state of the WordConverter when called back after yielding\n */\nexport default interface WordConverterArguments {\n    /** The list of element nodes being processed */\n    nodes: NodeListOf<HTMLElement>;\n\n    /** The index of the element currently being processed */\n    currentIndex: number;\n\n    /**\n     * Holds the metadata for all the lists we have found\n     * key: unique list id, value: list metadata\n     */\n    lists: { [key: string]: ListMetadata };\n\n    /**\n     * Stores the list item meta data of the items we\n     * have found that need to be converted\n     */\n    listItems: ListItemMetadata[];\n\n    /**\n     * This array holds the list id of the lists we are processing\n     * that are next to each other.. This list will be used to determine\n     * if list items are next to each other or if they are separated...\n     * Separated items are ignored from the conversion\n     */\n\n    currentListIdsByLevels: LevelLists[];\n\n    /** Remembers the item that was last processed  */\n    lastProcessedItem: HTMLElement | null;\n}\n\n/**\n * @internal\n * create an empty WordConverterArguments\n */\nexport function createWordConverterArguments(\n    nodes: NodeListOf<HTMLElement>\n): WordConverterArguments {\n    return {\n        nodes: nodes,\n        currentIndex: 0,\n        lists: {},\n        listItems: [],\n        currentListIdsByLevels: [createLevelLists()],\n        lastProcessedItem: null,\n    };\n}\n","import { NodeType } from 'roosterjs-editor-types';\n\n/** NodeId attribute */\nconst NODE_ID_ATTRIBUTE_NAME = 'NodeId';\n\n/**\n * @internal\n * Custom data for dom elements\n */\nexport default interface WordCustomData {\n    /** The dict storing custom data, key is element Id, value is dictionary */\n    dict: { [key: string]: { [key: string]: number } };\n\n    /** Next node Id to use */\n    nextNodeId: number;\n}\n\n/**\n * @internal\n * Create an empty WordCustomData\n */\nexport function createCustomData(): WordCustomData {\n    return {\n        dict: {},\n        nextNodeId: 1,\n    };\n}\n\n/**\n * @internal\n * Sets the specified object data\n */\nexport function setObject(wordCustomData: WordCustomData, element: Node, key: string, value: any) {\n    // Get the id for the element\n    if (element.nodeType == NodeType.Element) {\n        let id = getAndSetNodeId(wordCustomData, element as HTMLElement);\n        if (id != '') {\n            // Get the values for the element\n            if (!wordCustomData.dict[id]) {\n                // First time dictionary creation\n                wordCustomData.dict[id] = {};\n            }\n            wordCustomData.dict[id][key] = value;\n        }\n    }\n}\n\n/**\n * @internal\n * Reads the specified object data\n */\nexport function getObject(wordCustomData: WordCustomData, element: Node, key: string): any {\n    if (element.nodeType == NodeType.Element) {\n        let id = getAndSetNodeId(wordCustomData, element as HTMLElement);\n        if (id != '') {\n            return wordCustomData.dict[id] && wordCustomData.dict[id][key];\n        }\n    }\n\n    return null;\n}\n\n/**\n * Get the unique id for the specified node...\n */\nfunction getAndSetNodeId(wordCustomData: WordCustomData, element: HTMLElement): string {\n    let id = element.getAttribute(NODE_ID_ATTRIBUTE_NAME);\n    if (!id) {\n        id = wordCustomData.nextNodeId.toString();\n        wordCustomData.nextNodeId++;\n        element.setAttribute(NODE_ID_ATTRIBUTE_NAME, id);\n    }\n    return id;\n}\n","import type { CssStyleCallbackMap, ElementCallbackMap } from 'roosterjs-editor-types';\nimport {\n    chainSanitizerCallback,\n    getStyles,\n    moveChildNodes,\n    safeInstanceOf,\n} from 'roosterjs-editor-dom';\n\nconst MSO_COMMENT_PARENT = 'mso-comment-parent';\nconst MSO_COMMENT_REFERENCE = 'mso-comment-reference';\nconst MSO_COMMENT_DATE = 'mso-comment-date';\nconst MSO_COMMENT_ANCHOR_HREF_REGEX = /#_msocom_/;\nconst MSO_SPECIAL_CHARACTER = 'mso-special-character';\nconst MSO_SPECIAL_CHARACTER_COMMENT = 'comment';\nconst MSO_COMMENT_CONTINUATION = 'mso-comment-continuation';\nconst MSO_ELEMENT = 'mso-element';\nconst MSO_ELEMENT_COMMENT_LIST = 'comment-list';\nconst MSO_COMMENT_DONE = 'mso-comment-done';\n\n/**\n * @internal\n * Removes comments when pasting Word content.\n */\nexport default function commentsRemoval(\n    elementCallbacks: ElementCallbackMap,\n    styleCallbacks: CssStyleCallbackMap\n) {\n    // 1st Step, Remove SPAN elements added after each comment.\n    // Word adds multiple elements for comments as SPAN elements.\n    // In this step we remove these elements:\n    // Structure as of 4/18/2022\n    // 1.   <span style=\"mso-special-character:comment\">&nbsp;</span>\n    // 2.   <span style=\"mso-comment-continuation:3\">\n    //          <span>\n    //              <span style=\"font-size:8.0pt\">\n    //              <a href=\"#_msocom_2\">[RS2]</a>\n    //              <span style=\"mso-special-character:comment\">&nbsp;</span>\n    //              </span>\n    //          </span>\n    //      </span>\n    chainSanitizerCallback(elementCallbacks, 'SPAN', element => {\n        const styles = getStyles(element);\n        if (styles[MSO_SPECIAL_CHARACTER] == MSO_SPECIAL_CHARACTER_COMMENT) {\n            element.parentElement?.removeChild(element);\n        }\n        return true;\n    });\n\n    // 2nd Step, Modify Anchor elements.\n    // 1.   When the element was selected to add a comment in Word, the selection is converted to\n    //      an anchor element, so we change the tag to span.\n    // 2.   Word also adds some Anchor elements with the following structure:\n    //      Structure as of 4/18/2022\n    //      <a href=\"#_msocom_{number}\">[SS3]</a>\n    //      In this step we remove this Anchor elements.\n    chainSanitizerCallback(elementCallbacks, 'A', element => {\n        if (\n            safeInstanceOf(element, 'HTMLAnchorElement') &&\n            MSO_COMMENT_ANCHOR_HREF_REGEX.test(element.href)\n        ) {\n            element.parentElement?.removeChild(element);\n        }\n        return true;\n    });\n\n    // 3rd Step, remove List of comments.\n    // When the document have a long thread of comments, these comments are appended\n    // at the end of the copied fragment, we also need to remove it.\n    // Structure as of 4/18/2022\n    //\n    // <div style=\"mso-element:comment-list\">\n    //   <hr width=\"33%\" size=\"1\" align=\"left\">\n    //   <div style=\"mso-element:comment\"> ... </div>\n    //   <div style=\"mso-element:comment\"> ... </div>\n    //   <div style=\"mso-element:comment\"> ... </div>\n    //   </div>\n    // </div>\n    chainSanitizerCallback(elementCallbacks, 'DIV', element => {\n        const styles = getStyles(element);\n        if (styles[MSO_ELEMENT] == MSO_ELEMENT_COMMENT_LIST) {\n            moveChildNodes(element);\n        }\n        return true;\n    });\n\n    /**\n     * Remove styles related to Office Comments that can cause unwanted behaviors\n     * depending on the user client\n     */\n    [\n        MSO_COMMENT_REFERENCE,\n        MSO_COMMENT_DATE,\n        MSO_COMMENT_PARENT,\n        MSO_COMMENT_CONTINUATION,\n        MSO_COMMENT_DONE,\n    ].forEach(style => chainSanitizerCallback(styleCallbacks, style, () => false));\n}\n","import commentsRemoval from './commentsRemoval';\nimport { chainSanitizerCallback, moveChildNodes } from 'roosterjs-editor-dom';\nimport { createWordConverter } from './wordConverter';\nimport { createWordConverterArguments } from './WordConverterArguments';\nimport { processNodeConvert, processNodesDiscovery } from './converterUtils';\nimport type { BeforePasteEvent } from 'roosterjs-editor-types';\n\nconst PERCENTAGE_REGEX = /%/;\nconst DEFAULT_BROWSER_LINE_HEIGHT_PERCENTAGE = 120;\nconst LIST_ELEMENTS_SELECTOR = 'p,h1,h2,h3,h4,h5,h6';\n\n/**\n * @internal\n * Converts all the Word generated list items in the specified node into standard HTML UL and OL tags\n */\nexport default function convertPastedContentFromWord(event: BeforePasteEvent) {\n    const { sanitizingOption, fragment } = event;\n\n    // Preserve <o:p> when its innerHTML is \"&nbsp;\" to avoid dropping an empty line\n    chainSanitizerCallback(sanitizingOption.elementCallbacks, 'O:P', element => {\n        moveChildNodes(element);\n        element.appendChild(element.ownerDocument.createTextNode('\\u00A0')); // &nbsp;\n        return true;\n    });\n\n    let wordConverter = createWordConverter();\n\n    // First find all the nodes that we need to check for list item information\n    // This call will return all the p and heading elements under the root node.. These are the elements that\n    // Word uses a list items, so we'll only process them and avoid walking the whole tree.\n    let elements = fragment.querySelectorAll(LIST_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>;\n    if (elements.length > 0) {\n        wordConverter.wordConverterArgs = createWordConverterArguments(elements);\n        if (processNodesDiscovery(wordConverter)) {\n            processNodeConvert(wordConverter);\n        }\n    }\n\n    // If the List style contains marginBottom = 0in, the space after the list is going to be too narrow.\n    // Remove this style so the list displays correctly.\n    ['OL', 'UL'].forEach(tag => {\n        chainSanitizerCallback(sanitizingOption.elementCallbacks, tag, element => {\n            if (element.style.marginBottom == '0in') {\n                element.style.marginBottom = '';\n            }\n\n            return true;\n        });\n    });\n\n    //If the line height is less than the browser default line height, line between the text is going to be too narrow\n    chainSanitizerCallback(sanitizingOption.cssStyleCallbacks, 'line-height', (value: string) => {\n        let parsedLineHeight: number;\n        if (\n            PERCENTAGE_REGEX.test(value) &&\n            !isNaN((parsedLineHeight = parseInt(value))) &&\n            parsedLineHeight < DEFAULT_BROWSER_LINE_HEIGHT_PERCENTAGE\n        ) {\n            return false;\n        }\n        return true;\n    });\n\n    commentsRemoval(sanitizingOption.elementCallbacks, sanitizingOption.cssStyleCallbacks);\n}\n","import { createLevelLists } from './LevelLists';\nimport { getObject, setObject } from './WordCustomData';\nimport { getStyles, getTagOfNode, moveChildNodes } from 'roosterjs-editor-dom';\nimport { NodeType } from 'roosterjs-editor-types';\nimport type ListItemMetadata from './ListItemMetadata';\nimport type ListMetadata from './ListMetadata';\nimport type WordConverter from './wordConverter';\nimport type WordConverterArguments from './WordConverterArguments';\n\n/** Word list metadata style name */\nconst LOOKUP_DEPTH = 5;\n\n/** Name for the word list id property in the custom data */\nconst UNIQUE_LIST_ID_CUSTOM_DATA = 'UniqueListId';\n\n/** Word list metadata style name */\nconst MSO_LIST_STYLE_NAME = 'mso-list';\n\n/** Regular expression to match line breaks */\nconst LINE_BREAKS = /[\\n|\\r]/gi;\n\n/**\n * @internal\n * Handles the pass 1: Discovery\n * During discovery, we'll parse the metadata out of the elements and store it in the list items dictionary.\n * We'll detect cases where the list items for a particular ordered list are not next to each other. Word does these\n * for numbered headers, and we don't want to convert those, because the numbering would be completely wrong.\n */\nexport function processNodesDiscovery(wordConverter: WordConverter): boolean {\n    let args = wordConverter.wordConverterArgs;\n    if (!args) {\n        return false;\n    }\n    while (args.currentIndex < args.nodes.length) {\n        let node = args.nodes.item(args.currentIndex);\n\n        // Try to get the list metadata for the specified node\n        let itemMetadata = getListItemMetadata(node);\n        if (itemMetadata) {\n            let levelInfo =\n                args.currentListIdsByLevels[itemMetadata.level - 1] || createLevelLists();\n            args.currentListIdsByLevels[itemMetadata.level - 1] = levelInfo;\n\n            // We need to drop some list information if this is not an item next to another\n            if (args.lastProcessedItem && getRealPreviousSibling(node) != args.lastProcessedItem) {\n                // This list item is not next to the previous one. This means that there is some content in between them\n                // so we need to reset our list of list ids per level\n                resetCurrentLists(args);\n            }\n\n            // Get the list metadata for the list that will hold this item\n            let listMetadata = levelInfo.listsMetadata[itemMetadata.wordListId];\n            if (!listMetadata) {\n                // Get the first item fake bullet.. This will be used later to check what is the right type of list\n                let firstFakeBullet = getFakeBulletText(node, LOOKUP_DEPTH);\n\n                // This is a the first item of a list.. We'll create the list metadata using the information\n                // we already have from this first item\n                listMetadata = {\n                    numberOfItems: 0,\n                    uniqueListId: wordConverter.nextUniqueId++,\n                    firstFakeBullet: firstFakeBullet,\n\n                    // If the bullet we got is empty or not found, we ignore the list out.. this means\n                    // that this is not an item we need to convert of that the format doesn't match what\n                    // we are expecting\n                    ignore: !firstFakeBullet || firstFakeBullet.length == 0,\n\n                    // We'll use the first fake bullet to try to figure out which type of list we create. If this list has a second\n                    // item, we'll perform a better comparison, but for one item lists, this will be check that will determine the list type\n                    tagName: getFakeBulletTagName(firstFakeBullet),\n                };\n                levelInfo.listsMetadata[itemMetadata.wordListId] = listMetadata;\n                args.lists[listMetadata.uniqueListId.toString()] = listMetadata;\n            } else if (!listMetadata.ignore && listMetadata.numberOfItems == 1) {\n                // This is the second item we've seen for this list.. we'll compare the 2 fake bullet\n                // items we have an decide if we create ordered or unordered lists based on this.\n                // This is the best way we can do this since we cannot read the metadata that Word\n                // puts in the head of the HTML...\n                let secondFakeBullet = getFakeBulletText(node, LOOKUP_DEPTH);\n                listMetadata.tagName =\n                    listMetadata.firstFakeBullet == secondFakeBullet ? 'UL' : 'OL';\n            }\n\n            // Set the unique id to the list\n            itemMetadata.uniqueListId = listMetadata.uniqueListId;\n\n            // Check if we need to ignore this list... we'll either know already that we need to ignore\n            // it, or we'll know it because the previous list items are not next to this one\n            if (\n                listMetadata.ignore ||\n                (listMetadata.tagName == 'OL' &&\n                    listMetadata.numberOfItems > 0 &&\n                    levelInfo.currentUniqueListId != itemMetadata.uniqueListId)\n            ) {\n                // We need to ignore this item... and we also need to forget about the lists that\n                // are not at the root level\n                listMetadata.ignore = true;\n                args.currentListIdsByLevels[0].currentUniqueListId = -1;\n                args.currentListIdsByLevels = args.currentListIdsByLevels.slice(0, 1);\n            } else {\n                // This is an item we don't need to ignore... If added lists deep under this one before\n                // we'll drop their ids from the list of ids per level.. this is because this list item\n                // breaks the deeper lists.\n                if (args.currentListIdsByLevels.length > itemMetadata.level) {\n                    args.currentListIdsByLevels = args.currentListIdsByLevels.slice(\n                        0,\n                        itemMetadata.level\n                    );\n                }\n\n                levelInfo.currentUniqueListId = itemMetadata.uniqueListId;\n\n                // Add the list item into the list of items to be processed\n                args.listItems.push(itemMetadata);\n                listMetadata.numberOfItems++;\n            }\n\n            args.lastProcessedItem = node;\n        } else {\n            // Here, we know that this is not a list item, but we'll want to check if it is one \"no bullet\" list items...\n            // these can be created by creating a bullet and hitting delete on it it... The content will continue to be indented, but there will\n            // be no bullet and the list will continue correctly after that. Visually, it looks like the previous item has multiple lines, but\n            // the HTML generated has multiple paragraphs with the same class. We'll merge these when we find them, so the logic doesn't skips\n            // the list conversion thinking that the list items are not together...\n            let last = args.lastProcessedItem;\n            if (\n                last &&\n                getRealPreviousSibling(node) == last &&\n                node.tagName == last.tagName &&\n                node.className == last.className\n            ) {\n                // Add 2 line breaks and move all the nodes to the last item\n                last.appendChild(last.ownerDocument.createElement('br'));\n                last.appendChild(last.ownerDocument.createElement('br'));\n                moveChildNodes(last, node, true /*keepExistingChildren*/);\n\n                // Remove the item that we don't need anymore\n                node.parentNode?.removeChild(node);\n            }\n        }\n\n        // Move to the next element are return true if more elements need to be processed\n        args.currentIndex++;\n    }\n    return args.listItems.length > 0;\n}\n\n/**\n * @internal\n * Handles the pass 2: Conversion\n * During conversion, we'll go over the elements that belong to a list that we've marked as a list to convert, and we'll perform the\n * conversion needed\n */\nexport function processNodeConvert(wordConverter: WordConverter): boolean {\n    let args = wordConverter.wordConverterArgs;\n    if (args) {\n        args.currentIndex = 0;\n\n        while (args.currentIndex < args.listItems.length) {\n            let metadata = args.listItems[args.currentIndex];\n            let node = metadata.originalNode;\n            let listMetadata = args.lists[metadata.uniqueListId.toString()];\n            if (!listMetadata.ignore) {\n                // We have a list item that we need to convert, get or create the list\n                // that hold this item out\n                let list = getOrCreateListForNode(wordConverter, node, metadata, listMetadata);\n                if (list) {\n                    // Clean the element out.. this call gets rid of the fake bullet and unneeded nodes\n                    cleanupListIgnore(node, LOOKUP_DEPTH);\n\n                    // Create a new list item and transfer the children\n                    let li = node.ownerDocument.createElement('LI');\n                    if (getTagOfNode(node).startsWith('H')) {\n                        const clone = node.cloneNode(true /* deep */) as HTMLHeadingElement;\n                        clone.style.textIndent = '';\n                        clone.style.marginLeft = '';\n                        clone.style.marginRight = '';\n                        li.appendChild(clone);\n                    } else {\n                        moveChildNodes(li, node);\n                    }\n\n                    // Append the list item into the list\n                    list.appendChild(li);\n\n                    // Remove the node we just converted\n                    node.parentNode?.removeChild(node);\n\n                    if (listMetadata.tagName == 'UL') {\n                        wordConverter.numBulletsConverted++;\n                    } else {\n                        wordConverter.numNumberedConverted++;\n                    }\n                }\n            }\n            args.currentIndex++;\n        }\n    }\n    return wordConverter.numBulletsConverted > 0 || wordConverter.numNumberedConverted > 0;\n}\n\n/**\n * Gets or creates the list (UL or OL) that holds this item out based on the\n * items content and the specified metadata\n */\nfunction getOrCreateListForNode(\n    wordConverter: WordConverter,\n    node: HTMLElement,\n    metadata: ListItemMetadata,\n    listMetadata: ListMetadata\n): Node {\n    // First get the last list next to this node under the specified level. This code\n    // path will return the list or will create lists if needed\n    let list = recurringGetOrCreateListAtNode(node, metadata.level, listMetadata);\n\n    // Here use the unique list ID to detect if we have the right list...\n    // it is possible to have 2 different lists next to each other with different formats, so\n    // we want to detect this an create separate lists for those cases\n    let listId = getObject(wordConverter.wordCustomData, list, UNIQUE_LIST_ID_CUSTOM_DATA);\n\n    // If we have a list with and ID, but the ID is different than the ID for this list item, this\n    // is a completely new list, so we'll append a new list for that\n    if ((listId && listId != metadata.uniqueListId) || (!listId && list.firstChild)) {\n        let newList = node.ownerDocument.createElement(listMetadata.tagName);\n        list.parentNode?.insertBefore(newList, list.nextSibling);\n        list = newList;\n    }\n\n    // Set the list id into the custom data\n    setObject(\n        wordConverter.wordCustomData,\n        list,\n        UNIQUE_LIST_ID_CUSTOM_DATA,\n        metadata.uniqueListId\n    );\n\n    // This call will convert the list if needed to the right type of list required. This can happen\n    // on the cases where the first list item for this list is located after a deeper list. for that\n    // case, we will have created a UL for it, and we may need to convert it\n    return convertListIfNeeded(wordConverter, list, listMetadata);\n}\n\n/**\n * Converts the list between UL and OL if needed, by using the fake bullet and\n * information already stored in the list itself\n */\nfunction convertListIfNeeded(\n    wordConverter: WordConverter,\n    list: Node,\n    listMetadata: ListMetadata\n): Node {\n    // Check if we need to convert the list out\n    if (listMetadata.tagName != getTagOfNode(list)) {\n        // We have the wrong list type.. convert it, set the id again and transfer all the children\n        let newList = list.ownerDocument?.createElement(listMetadata.tagName);\n        if (newList) {\n            setObject(\n                wordConverter.wordCustomData,\n                newList,\n                UNIQUE_LIST_ID_CUSTOM_DATA,\n                getObject(wordConverter.wordCustomData, list, UNIQUE_LIST_ID_CUSTOM_DATA)\n            );\n            moveChildNodes(newList, list);\n\n            list.parentNode?.insertBefore(newList, list);\n            list.parentNode?.removeChild(list);\n            list = newList;\n        }\n    }\n\n    return list;\n}\n\n/**\n * Gets or creates the specified list\n */\nfunction recurringGetOrCreateListAtNode(\n    node: HTMLElement,\n    level: number,\n    listMetadata: ListMetadata | null\n): Node {\n    let parent: Node | null = null;\n    let possibleList: Node | null = null;\n    if (level == 1) {\n        // Root case, we'll check if the list is the previous sibling of the node\n        possibleList = getRealPreviousSibling(node);\n    } else {\n        // If we get here, we are looking for level 2 or deeper... get the upper list\n        // and check if the last element is a list\n        parent = recurringGetOrCreateListAtNode(node, level - 1, null);\n        if (parent.lastChild) {\n            possibleList = parent.lastChild;\n        }\n    }\n\n    // Check the element that we got and verify that it is a list\n    if (possibleList && possibleList.nodeType == NodeType.Element) {\n        let tag = getTagOfNode(possibleList);\n        if (tag == 'UL' || tag == 'OL') {\n            // We have a list.. use it\n            return possibleList;\n        }\n    }\n\n    // If we get here, it means we don't have a list and we need to create one\n    // this code path will always create new lists as UL lists\n    let newList = node.ownerDocument?.createElement(listMetadata ? listMetadata.tagName : 'UL');\n    if (level == 1) {\n        // For level 1, we'll insert the list before the node\n        node.parentNode?.insertBefore(newList, node);\n    } else {\n        // Any level 2 or above, we insert the list as the last\n        // child of the upper level list\n        parent?.appendChild(newList);\n    }\n\n    return newList;\n}\n\n/**\n * Cleans up the node children by removing the children marked as mso-list: Ignore.\n * This nodes hold the fake bullet information that Word puts in and when\n * conversion is happening, we want to get rid of these elements\n */\nfunction cleanupListIgnore(node: Node, levels: number) {\n    let nodesToRemove: Node[] = [];\n\n    for (let child: Node | null = node.firstChild; child; child = child.nextSibling) {\n        if (child) {\n            // Clean up the item internally first if we need to based on the number of levels\n            if (child && child.nodeType == NodeType.Element && levels > 1) {\n                cleanupListIgnore(child, levels - 1);\n            }\n\n            // Try to convert word comments into ignore elements if we haven't done so for this element\n            child = fixWordListComments(child, true /*removeComments*/);\n\n            // Check if we can remove this item out\n            if (isEmptySpan(child) || isIgnoreNode(child)) {\n                nodesToRemove.push(child);\n            }\n        }\n    }\n\n    nodesToRemove.forEach(child => node.removeChild(child));\n}\n\n/**\n * Reads the word list meta dada out of the specified node. If the node\n * is not a Word list item, it returns null.\n */\nfunction getListItemMetadata(node: HTMLElement): ListItemMetadata | null {\n    if (node.nodeType == NodeType.Element) {\n        let listAttribute = getStyleValue(node, MSO_LIST_STYLE_NAME);\n        if (listAttribute && listAttribute.length > 0) {\n            try {\n                // Word mso-list property holds 3 space separated values in the following format: lst1 level1 lfo0\n                // Where:\n                // (0) List identified for the metadata in the &lt;head&gt; of the document. We cannot read the &lt;head&gt; meta data\n                // (1) Level of the list. This also maps to the &lt;head&gt; metadata that we cannot read, but\n                // for almost all cases, it maps to the list indentation (or level). We'll use it as the\n                // list indentation value\n                // (2) Contains a specific list identifier.\n                // Example value: \"l0 level1 lfo1\"\n                let listProps = listAttribute.split(' ');\n                if (listProps.length == 3) {\n                    return <ListItemMetadata>{\n                        level: parseInt(listProps[1].substr('level'.length)),\n                        wordListId: listAttribute,\n                        originalNode: node,\n                        uniqueListId: 0,\n                    };\n                }\n            } catch (e) {}\n        }\n    }\n    return null;\n}\n\nfunction isFakeBullet(fakeBullet: string): boolean {\n    return ['o', '·', '§', '-'].indexOf(fakeBullet) >= 0;\n}\n\n/** Given a fake bullet text, returns the type of list that should be used for it */\nfunction getFakeBulletTagName(fakeBullet: string): string {\n    return isFakeBullet(fakeBullet) ? 'UL' : 'OL';\n}\n\n/**\n * Finds the fake bullet text out of the specified node and returns it. For images, it will return\n * a bullet string. If not found, it returns null...\n */\nfunction getFakeBulletText(node: Node, levels: number): string {\n    // Word uses the following format for their bullets:\n    // &lt;p style=\"mso-list:l1 level1 lfo2\"&gt;\n    // &lt;span style=\"...\"&gt;\n    // &lt;span style=\"mso-list:Ignore\"&gt;1.&lt;span style=\"...\"&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;&lt;/span&gt;\n    // &lt;/span&gt;\n    // Content here...\n    // &lt;/p&gt;\n    //\n    // Basically, we need to locate the mso-list:Ignore SPAN, which holds either one text or image node. That\n    // text or image node will be the fake bullet we are looking for\n    let result: string = '';\n    let child: Node | null = node.firstChild;\n    while (!result && child) {\n        // First, check if we need to convert the Word list comments into real elements\n        child = fixWordListComments(child, true /*removeComments*/);\n\n        // Check if this is the node that holds the fake bullets (mso-list: Ignore)\n        if (isIgnoreNode(child)) {\n            // Yes... this is the node that holds either the text or image data\n            result = child.textContent?.trim() ?? '';\n\n            // This is the case for image case\n            if (result.length == 0) {\n                result = 'o';\n            }\n        } else if (child.nodeType == NodeType.Element && levels > 1) {\n            // If this is an element and we are not in the last level, try to get the fake bullet\n            // out of the child\n            result = getFakeBulletText(child, levels - 1);\n        }\n\n        child = child.nextSibling;\n    }\n\n    return result;\n}\n\n/**\n * If the specified element is a Word List comments, this code verifies and fixes\n * the markup when needed to ensure that Chrome bullet conversions work as expected\n * -----\n * We'll convert &lt;!--[if !supportLists]--&gt; and &lt;!--[endif]--&gt; comments into\n * &lt;span style=\"mso-list:Ignore\"&gt;&lt;/span&gt;... Chrome has a bug where it drops the\n * styles of the span, but we'll use these comments to recreate them out\n */\nfunction fixWordListComments(child: Node, removeComments: boolean): Node {\n    if (child.nodeType == NodeType.Comment) {\n        let value = (child as Comment).data;\n        if (value && value.trim().toLowerCase() == '[if !supportlists]') {\n            // We have a list ignore start, find the end.. We know is not more than\n            // 3 nodes away, so we'll optimize our checks\n            let nextElement: Node | null = child;\n            let endComment: Node | null = null;\n            for (let j = 0; j < 4; j++) {\n                nextElement = getRealNextSibling(nextElement);\n                if (!nextElement) {\n                    break;\n                }\n                if (nextElement.nodeType == NodeType.Comment) {\n                    value = (nextElement as Comment).data;\n                    if (value && value.trim().toLowerCase() == '[endif]') {\n                        endComment = nextElement;\n                        break;\n                    }\n                }\n            }\n\n            // if we found the end node, wrap everything out\n            if (endComment) {\n                let newSpan = child.ownerDocument?.createElement('span');\n                newSpan?.setAttribute('style', 'mso-list: ignore');\n\n                nextElement = getRealNextSibling(child);\n                while (nextElement != endComment) {\n                    nextElement = nextElement?.nextSibling as HTMLElement;\n                    if (nextElement.previousSibling) {\n                        newSpan?.appendChild(nextElement.previousSibling);\n                    }\n                }\n\n                // Insert the element out and use that one as the current child\n                if (newSpan) {\n                    endComment.parentNode?.insertBefore(newSpan, endComment);\n                }\n\n                // Remove the comments out if the call specified it out\n                if (removeComments) {\n                    child.parentNode?.removeChild(child);\n                    endComment.parentNode?.removeChild(endComment);\n                }\n\n                // Last, make sure we return the new element out instead of the comment\n                if (newSpan) {\n                    child = newSpan;\n                }\n            }\n        }\n    }\n\n    return child;\n}\n\n/** Finds the real previous sibling, ignoring empty text nodes */\nfunction getRealPreviousSibling(node: Node): Node | null {\n    let prevSibling: Node | null = node;\n    do {\n        prevSibling = prevSibling.previousSibling;\n    } while (prevSibling && isEmptyTextNode(prevSibling));\n    return prevSibling;\n}\n\n/** Finds the real next sibling, ignoring empty text nodes */\nfunction getRealNextSibling(node: Node): Node | null {\n    let nextSibling: Node | null = node;\n    do {\n        nextSibling = nextSibling.nextSibling;\n    } while (nextSibling && isEmptyTextNode(nextSibling));\n\n    return nextSibling;\n}\n\n/**\n * Checks if the specified node is marked as a mso-list: Ignore. These\n * nodes need to be ignored when a list item is converted into standard\n * HTML lists\n */\nfunction isIgnoreNode(node: Node): boolean {\n    if (node.nodeType == NodeType.Element) {\n        let listAttribute = getStyleValue(node as HTMLElement, MSO_LIST_STYLE_NAME);\n        if (\n            listAttribute &&\n            listAttribute.length > 0 &&\n            listAttribute.trim().toLowerCase() == 'ignore'\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** Checks if the specified node is an empty span. */\nfunction isEmptySpan(node: Node): boolean {\n    return getTagOfNode(node) == 'SPAN' && !node.firstChild;\n}\n\n/** Reads the specified style value from the node */\nfunction getStyleValue(node: HTMLElement, styleName: string): string | null {\n    // Word uses non-standard names for the metadata that puts in the style of the element...\n    // Most browsers will not provide the information for those nonstandard values through the node.style\n    // property, so the only reliable way to read them is to get the attribute directly and do\n    // the required parsing..\n    return getStyles(node)[styleName] || null;\n}\n\n/** Checks if the node is an empty text node that can be ignored */\nfunction isEmptyTextNode(node: Node): boolean {\n    // No node is empty\n    if (!node) {\n        return true;\n    }\n\n    // Empty text node is empty\n    if (node.nodeType == NodeType.Text) {\n        let value = node.nodeValue;\n        value = value?.replace(LINE_BREAKS, '') ?? '';\n        return value?.trim().length == 0;\n    }\n\n    // Span or Font with an empty child node is empty\n    let tagName = getTagOfNode(node);\n    if (\n        node.firstChild &&\n        node.firstChild == node.lastChild &&\n        (tagName == 'SPAN' || tagName == 'FONT')\n    ) {\n        return isEmptyTextNode(node.firstChild);\n    }\n\n    // If not found, then this is not empty\n    return false;\n}\n\n/** Resets the list */\nfunction resetCurrentLists(args: WordConverterArguments) {\n    for (let i = 0; i < args.currentListIdsByLevels.length; i++) {\n        let ll = args.currentListIdsByLevels[i];\n        if (ll) {\n            ll.currentUniqueListId = -1;\n        }\n    }\n}\n","import { createCustomData } from './WordCustomData';\nimport type WordConverterArguments from './WordConverterArguments';\nimport type WordCustomData from './WordCustomData';\n\n/**\n * @internal\n * Processes HTML generated by Word, converting Word Lists into standard HTML UL and OL tags\n */\nexport default interface WordConverter {\n    /** Next unique id to be assigned to a list */\n    nextUniqueId: number;\n\n    /** Number of bullets converted */\n    numBulletsConverted: number;\n\n    /** Number of numbering converted */\n    numNumberedConverted: number;\n\n    /** The structure that records the status of the conversion */\n    wordConverterArgs: WordConverterArguments | null;\n\n    /** Custom data storage for list items */\n    wordCustomData: WordCustomData;\n}\n\n/**\n * @internal\n * create an empty WordConverter\n */\nexport function createWordConverter(): WordConverter {\n    return {\n        nextUniqueId: 1,\n        numBulletsConverted: 0,\n        numNumberedConverted: 0,\n        wordConverterArgs: null,\n        wordCustomData: createCustomData(),\n    };\n}\n","import { ChangeSource, PluginEventType, PositionType } from 'roosterjs-editor-types';\nimport { replaceWithNode } from 'roosterjs-editor-api';\nimport {\n    Browser,\n    createRange,\n    isCharacterValue,\n    isModifierKey,\n    PartialInlineElement,\n    safeInstanceOf,\n} from 'roosterjs-editor-dom';\nimport type {\n    EditorPlugin,\n    IEditor,\n    NodePosition,\n    PickerDataProvider,\n    PickerPluginOptions,\n    PluginDomEvent,\n    PluginEvent,\n    PluginInputEvent,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\n\n// Character codes.\n// IE11 uses different character codes. which are noted below.\n// If adding a new key, test in IE to figure out what the code is.\nconst BACKSPACE_CHAR_CODE = 'Backspace';\nconst TAB_CHAR_CODE = 'Tab';\nconst ENTER_CHAR_CODE = 'Enter';\nconst ESC_CHAR_CODE = !Browser.isIE ? 'Escape' : 'Esc';\nconst LEFT_ARROW_CHAR_CODE = !Browser.isIE ? 'ArrowLeft' : 'Left';\nconst UP_ARROW_CHAR_CODE = !Browser.isIE ? 'ArrowUp' : 'Up';\nconst RIGHT_ARROW_CHAR_CODE = !Browser.isIE ? 'ArrowRight' : 'Right';\nconst DOWN_ARROW_CHAR_CODE = !Browser.isIE ? 'ArrowDown' : 'Down';\nconst DELETE_CHAR_CODE = !Browser.isIE ? 'Delete' : 'Del';\n\n// Input event input types.\nconst DELETE_CONTENT_BACKWARDS_INPUT_TYPE = 'deleteContentBackwards';\n\n// Unidentified key, the code for Android keyboard events.\nconst UNIDENTIFIED_KEY = 'Unidentified';\n// the char code for Android keyboard events on Webview below 51.\nconst UNIDENTIFIED_CODE = [0, 229];\n\n/**\n * PickerPlugin represents a plugin of editor which can handle picker related behaviors, including\n * - Show picker when special trigger key is pressed\n * - Hide picker\n * - Change selection in picker by Up/Down/Left/Right\n * - Apply selected item in picker\n *\n * PickerPlugin doesn't provide any UI, it just wraps related DOM events and invoke callback functions.\n */\nexport default class PickerPlugin<T extends PickerDataProvider = PickerDataProvider>\n    implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private eventHandledOnKeyDown: boolean = false;\n    private blockSuggestions: boolean = false;\n    private isSuggesting: boolean = false;\n    private lastKnownRange: Range | null = null;\n\n    // For detecting backspace in Android\n    private isPendingInputEventHandling: boolean = false;\n    private currentInputLength: number = 0;\n    private newInputLength: number = 0;\n\n    constructor(public readonly dataProvider: T, private pickerOptions: PickerPluginOptions) {}\n\n    /**\n     * Get a friendly name\n     */\n    getName() {\n        return 'Picker';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    public initialize(editor: IEditor) {\n        this.editor = editor;\n        this.dataProvider.onInitalize(\n            (htmlNode: Node) => {\n                if (this.editor) {\n                    this.editor.focus();\n\n                    let wordToReplace = this.getWord(null);\n\n                    // Safari drops our focus out so we get an empty word to replace when we call getWord.\n                    // We fall back to using the lastKnownRange to try to get around this.\n                    if ((!wordToReplace || wordToReplace.length == 0) && this.lastKnownRange) {\n                        this.editor.select(this.lastKnownRange);\n                        wordToReplace = this.getWord(null);\n                    }\n\n                    let insertNode = () => {\n                        if (wordToReplace && this.editor) {\n                            replaceWithNode(\n                                this.editor,\n                                wordToReplace,\n                                htmlNode,\n                                true /* exactMatch */\n                            );\n                        } else {\n                            this.editor?.insertNode(htmlNode);\n                        }\n                        this.setIsSuggesting(false);\n                    };\n\n                    this.editor.addUndoSnapshot(\n                        insertNode,\n                        this.pickerOptions.changeSource,\n                        this.pickerOptions.handleAutoComplete\n                    );\n                }\n            },\n            (isSuggesting: boolean) => {\n                this.setIsSuggesting(isSuggesting);\n            },\n            editor\n        );\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    public dispose() {\n        this.editor = null;\n        this.isSuggesting = false;\n        this.blockSuggestions = false;\n        this.eventHandledOnKeyDown = false;\n        this.lastKnownRange = null;\n        this.isPendingInputEventHandling = false;\n        this.currentInputLength = 0;\n        this.newInputLength = 0;\n        this.dataProvider.onDispose();\n    }\n\n    /**\n     * Check if the plugin should handle the given event exclusively.\n     * Handle an event exclusively means other plugin will not receive this event in\n     * onPluginEvent method.\n     * If two plugins will return true in willHandleEventExclusively() for the same event,\n     * the final result depends on the order of the plugins are added into editor\n     * @param event The event to check\n     */\n    public willHandleEventExclusively(event: PluginEvent) {\n        return (\n            this.isSuggesting &&\n            (event.eventType == PluginEventType.KeyDown ||\n                event.eventType == PluginEventType.KeyUp ||\n                event.eventType == PluginEventType.Input)\n        );\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    public onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.ContentChanged:\n                if (event.source == ChangeSource.SetContent && this.dataProvider.onContentChanged) {\n                    // Stop suggesting since content is fully changed\n                    if (this.isSuggesting) {\n                        this.setIsSuggesting(false);\n                    }\n\n                    // Undo and other major changes to document content fire this type of event.\n                    // Inform the data provider of the current picker placed elements in the body.\n                    let elementIds: string[] = [];\n                    this.editor?.queryElements(\n                        \"[id^='\" + this.pickerOptions.elementIdPrefix + \"']\",\n                        element => {\n                            if (element.id) {\n                                elementIds.push(element.id);\n                            }\n                        }\n                    );\n                    this.dataProvider.onContentChanged(elementIds);\n                }\n                break;\n\n            case PluginEventType.KeyDown:\n                this.eventHandledOnKeyDown = false;\n                if (this.isAndroidKeyboardEvent(event)) {\n                    // On Android, the key for KeyboardEvent is \"Unidentified\" or undefined,\n                    // so handling should be done using the input rather than key down event\n                    // Since the key down event happens right before the input event, calculate the input\n                    // length here in preparation for onAndroidInputEvent\n                    this.currentInputLength = this.calcInputLength(event);\n                    this.isPendingInputEventHandling = true;\n                } else {\n                    this.onKeyDownEvent(event);\n                    this.isPendingInputEventHandling = false;\n                }\n                break;\n\n            case PluginEventType.Input:\n                if (this.isPendingInputEventHandling) {\n                    this.onAndroidInputEvent(event);\n                }\n                break;\n\n            case PluginEventType.KeyUp:\n                if (!this.eventHandledOnKeyDown && this.shouldHandleKeyUpEvent(event)) {\n                    this.onKeyUpDomEvent(event);\n                    this.isPendingInputEventHandling = false;\n                }\n                break;\n\n            case PluginEventType.MouseUp:\n                if (this.isSuggesting) {\n                    this.setIsSuggesting(false);\n                }\n                break;\n\n            case PluginEventType.Scroll:\n                if (this.dataProvider.onScroll) {\n                    // Dispatch scroll event to data provider\n                    this.dataProvider.onScroll(event.scrollContainer);\n                }\n                break;\n        }\n    }\n\n    private setLastKnownRange(range: Range | null) {\n        this.lastKnownRange = range;\n    }\n\n    private setIsSuggesting(isSuggesting: boolean) {\n        this.isSuggesting = isSuggesting;\n\n        if (!isSuggesting) {\n            this.setLastKnownRange(null);\n        }\n        this.dataProvider.onIsSuggestingChanged(isSuggesting);\n\n        this.setAriaOwns(isSuggesting);\n        this.setAriaActiveDescendant(isSuggesting ? 0 : null);\n    }\n\n    private cancelDefaultKeyDownEvent(event: PluginKeyboardEvent) {\n        this.eventHandledOnKeyDown = true;\n        event.rawEvent.preventDefault();\n        event.rawEvent.stopImmediatePropagation();\n    }\n\n    private getIdValue(node: Node): string | null {\n        if (safeInstanceOf(node, 'HTMLElement')) {\n            const attribute = node.attributes.getNamedItem('id');\n            return attribute ? (attribute.value as string) : null;\n        } else {\n            return null;\n        }\n    }\n\n    private getWordBeforeCursor(event: PluginKeyboardEvent | null): string | null {\n        let searcher = this.editor?.getContentSearcherOfCursor(event);\n        return searcher ? searcher.getWordBefore() : null;\n    }\n\n    private replaceNode(currentNode: Node | null, replacementNode: Node | null) {\n        if (currentNode) {\n            this.editor?.deleteNode(currentNode);\n        }\n        if (replacementNode) {\n            this.editor?.insertNode(replacementNode);\n        }\n    }\n\n    private getRangeUntilAt(event: PluginKeyboardEvent | null): Range | null {\n        let positionContentSearcher = this.editor?.getContentSearcherOfCursor(event);\n        let startPos: NodePosition | undefined = undefined;\n        let endPos: NodePosition | undefined = undefined;\n        positionContentSearcher?.forEachTextInlineElement(textInline => {\n            let hasMatched = false;\n            let nodeContent = textInline.getTextContent();\n            let nodeIndex = nodeContent ? nodeContent.length : -1;\n            while (nodeIndex >= 0) {\n                if (nodeContent[nodeIndex] == this.pickerOptions.triggerCharacter) {\n                    startPos = textInline.getStartPosition().move(nodeIndex);\n                    hasMatched = true;\n                    break;\n                }\n                nodeIndex--;\n            }\n\n            if (hasMatched) {\n                endPos = textInline.getEndPosition();\n            }\n\n            return hasMatched;\n        });\n        return startPos\n            ? createRange(startPos, endPos)\n            : this.editor?.getDocument().createRange() ?? null;\n    }\n\n    private shouldHandleKeyUpEvent(event: PluginKeyboardEvent) {\n        // onKeyUpDomEvent should only be called when a key that produces a character value is pressed\n        // This check will always fail on Android since the KeyboardEvent's key is \"Unidentified\" or undefined\n        // However, we don't need to check for modifier events on mobile, so can ignore this check\n        return (\n            this.isAndroidKeyboardEvent(event) ||\n            isCharacterValue(event.rawEvent) ||\n            (this.isSuggesting && !isModifierKey(event.rawEvent))\n        );\n    }\n\n    private onKeyUpDomEvent(event: PluginKeyboardEvent) {\n        if (this.editor) {\n            if (this.isSuggesting) {\n                // Word before cursor represents the text prior to the cursor, up to and including the trigger symbol.\n                const wordBeforeCursor = this.getWord(event);\n                if (wordBeforeCursor !== null) {\n                    const wordBeforeCursorWithoutTriggerChar = wordBeforeCursor.substring(1);\n                    const trimmedWordBeforeCursor = wordBeforeCursorWithoutTriggerChar.trim();\n\n                    // If we hit a case where wordBeforeCursor is just the trigger character,\n                    // that means we've gotten a onKeyUp event right after it's been typed.\n                    // Otherwise, update the query string when:\n                    // 1. There's an actual value\n                    // 2. That actual value isn't just pure whitespace\n                    // 3. That actual value isn't more than 4 words long (at which point we assume the person kept typing)\n                    // Otherwise, we want to dismiss the picker plugin's UX.\n                    if (\n                        wordBeforeCursor == this.pickerOptions.triggerCharacter ||\n                        (trimmedWordBeforeCursor &&\n                            trimmedWordBeforeCursor.length > 0 &&\n                            trimmedWordBeforeCursor.split(' ').length <= 4)\n                    ) {\n                        this.dataProvider.queryStringUpdated(\n                            trimmedWordBeforeCursor,\n                            wordBeforeCursorWithoutTriggerChar == trimmedWordBeforeCursor\n                        );\n                        this.setLastKnownRange(this.editor.getSelectionRange() ?? null);\n                    } else {\n                        this.setIsSuggesting(false);\n                    }\n                }\n            } else {\n                let wordBeforeCursor = this.getWordBeforeCursor(event);\n                if (!this.blockSuggestions) {\n                    if (\n                        wordBeforeCursor != null &&\n                        wordBeforeCursor.split(' ').length <= 4 &&\n                        wordBeforeCursor[0] == this.pickerOptions.triggerCharacter\n                    ) {\n                        this.setIsSuggesting(true);\n                        const wordBeforeCursorWithoutTriggerChar = wordBeforeCursor.substring(1);\n                        let trimmedWordBeforeCursor = wordBeforeCursorWithoutTriggerChar.trim();\n                        this.dataProvider.queryStringUpdated(\n                            trimmedWordBeforeCursor,\n                            wordBeforeCursorWithoutTriggerChar == trimmedWordBeforeCursor\n                        );\n                        this.setLastKnownRange(this.editor.getSelectionRange() ?? null);\n                        if (this.dataProvider.setCursorPoint) {\n                            // Determine the bounding rectangle for the @mention\n                            let searcher = this.editor.getContentSearcherOfCursor(event);\n                            let rangeNode = this.editor.getDocument().createRange();\n\n                            if (rangeNode) {\n                                let nodeBeforeCursor =\n                                    searcher?.getInlineElementBefore()?.getContainerNode() ?? null;\n\n                                let rangeStartSuccessfullySet = this.setRangeStart(\n                                    rangeNode,\n                                    nodeBeforeCursor,\n                                    wordBeforeCursor\n                                );\n                                if (!rangeStartSuccessfullySet) {\n                                    // VSO 24891: Out of range error is occurring because nodeBeforeCursor\n                                    // is not including the trigger character. In this case, the node before\n                                    // the node before cursor is the trigger character, and this is where the range should start.\n                                    let nodeBeforeNodeBeforeCursor =\n                                        nodeBeforeCursor?.previousSibling ?? null;\n                                    this.setRangeStart(\n                                        rangeNode,\n                                        nodeBeforeNodeBeforeCursor,\n                                        this.pickerOptions.triggerCharacter\n                                    );\n                                }\n                                let rect = rangeNode.getBoundingClientRect();\n\n                                // Safari's support for range.getBoundingClientRect is incomplete.\n                                // We perform this check to fall back to getClientRects in case it's at the page origin.\n                                if (rect.left == 0 && rect.bottom == 0 && rect.top == 0) {\n                                    rect = rangeNode.getClientRects()[0];\n                                }\n\n                                if (rect) {\n                                    rangeNode.detach();\n\n                                    // Display the @mention popup in the correct place\n                                    let targetPoint = {\n                                        x: rect.left,\n                                        y: (rect.bottom + rect.top) / 2,\n                                    };\n                                    let bufferZone = (rect.bottom - rect.top) / 2;\n                                    this.dataProvider.setCursorPoint(targetPoint, bufferZone);\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    if (\n                        wordBeforeCursor != null &&\n                        wordBeforeCursor[0] != this.pickerOptions.triggerCharacter\n                    ) {\n                        this.blockSuggestions = false;\n                    }\n                }\n            }\n        }\n    }\n\n    private onKeyDownEvent(event: PluginKeyboardEvent) {\n        let keyboardEvent = event.rawEvent;\n        if (this.isSuggesting) {\n            if (keyboardEvent.key == ESC_CHAR_CODE) {\n                this.setIsSuggesting(false);\n                this.blockSuggestions = true;\n                this.cancelDefaultKeyDownEvent(event);\n            } else if (keyboardEvent.key == BACKSPACE_CHAR_CODE) {\n                // #483: If we are backspacing over the trigger character that triggered this Picker\n                // then we need to hide the Picker\n                const wordBeforeCursor = this.getWord(event);\n                if (wordBeforeCursor == this.pickerOptions.triggerCharacter) {\n                    this.setIsSuggesting(false);\n                }\n            } else if (\n                this.dataProvider.shiftHighlight &&\n                (this.pickerOptions.isHorizontal\n                    ? keyboardEvent.key == LEFT_ARROW_CHAR_CODE ||\n                      keyboardEvent.key == RIGHT_ARROW_CHAR_CODE\n                    : keyboardEvent.key == UP_ARROW_CHAR_CODE ||\n                      keyboardEvent.key == DOWN_ARROW_CHAR_CODE)\n            ) {\n                this.dataProvider.shiftHighlight(\n                    this.pickerOptions.isHorizontal\n                        ? keyboardEvent.key == RIGHT_ARROW_CHAR_CODE\n                        : keyboardEvent.key == DOWN_ARROW_CHAR_CODE\n                );\n\n                if (this.dataProvider.getSelectedIndex) {\n                    this.setAriaActiveDescendant(this.dataProvider.getSelectedIndex());\n                }\n\n                this.cancelDefaultKeyDownEvent(event);\n            } else if (\n                this.dataProvider.selectOption &&\n                (keyboardEvent.key == ENTER_CHAR_CODE || keyboardEvent.key == TAB_CHAR_CODE)\n            ) {\n                this.dataProvider.selectOption();\n                this.cancelDefaultKeyDownEvent(event);\n            } else {\n                // Currently no op.\n            }\n        } else {\n            if (keyboardEvent.key == BACKSPACE_CHAR_CODE) {\n                const nodeRemoved = this.tryRemoveNode(event);\n                if (nodeRemoved) {\n                    this.cancelDefaultKeyDownEvent(event);\n                }\n            } else if (keyboardEvent.key == DELETE_CHAR_CODE) {\n                let searcher = this.editor?.getContentSearcherOfCursor(event);\n                if (searcher) {\n                    const inlineElementAfter = searcher.getInlineElementAfter();\n                    let nodeAfterCursor = inlineElementAfter\n                        ? inlineElementAfter.getContainerNode()\n                        : null;\n                    nodeAfterCursor = this.getParentNodeIfTextNode(nodeAfterCursor);\n                    let nodeId = nodeAfterCursor ? this.getIdValue(nodeAfterCursor) : null;\n                    if (\n                        nodeId &&\n                        nodeId.indexOf(this.pickerOptions.elementIdPrefix) == 0 &&\n                        nodeAfterCursor\n                    ) {\n                        let replacementNode = this.dataProvider.onRemove(nodeAfterCursor, false);\n                        this.replaceNode(nodeAfterCursor, replacementNode);\n                        this.cancelDefaultKeyDownEvent(event);\n                    }\n                }\n            }\n        }\n    }\n\n    private getParentNodeIfTextNode(node: Node | null): Node | null {\n        if (safeInstanceOf(node, 'Text')) {\n            node = node.parentNode;\n        }\n        return node;\n    }\n\n    private onAndroidInputEvent(event: PluginInputEvent) {\n        this.newInputLength = this.calcInputLength(event);\n\n        if (\n            this.newInputLength < this.currentInputLength ||\n            (event.rawEvent as any).inputType === DELETE_CONTENT_BACKWARDS_INPUT_TYPE\n        ) {\n            const nodeRemoved = this.tryRemoveNode(event);\n            if (nodeRemoved) {\n                this.eventHandledOnKeyDown = true;\n            }\n        }\n    }\n\n    private calcInputLength(event: PluginEvent) {\n        const wordBeforeCursor = this.getInlineElementBeforeCursor(event);\n        return wordBeforeCursor ? wordBeforeCursor.length : 0;\n    }\n\n    private tryRemoveNode(event: PluginDomEvent): boolean {\n        if (!this.editor) {\n            return false;\n        }\n        const searcher = this.editor.getContentSearcherOfCursor(event);\n        if (!searcher) {\n            return false;\n        }\n\n        const inlineElementBefore = searcher.getInlineElementBefore();\n        let nodeBeforeCursor = inlineElementBefore ? inlineElementBefore.getContainerNode() : null;\n        nodeBeforeCursor = this.getParentNodeIfTextNode(nodeBeforeCursor);\n        const nodeId = nodeBeforeCursor ? this.getIdValue(nodeBeforeCursor) : null;\n        const inlineElementAfter = searcher.getInlineElementAfter();\n\n        if (\n            nodeBeforeCursor &&\n            nodeId &&\n            nodeId.indexOf(this.pickerOptions.elementIdPrefix) == 0 &&\n            (inlineElementAfter == null || !(inlineElementAfter instanceof PartialInlineElement))\n        ) {\n            const replacementNode = this.dataProvider.onRemove(nodeBeforeCursor, true);\n            if (replacementNode) {\n                this.replaceNode(nodeBeforeCursor, replacementNode);\n                if (this.isPendingInputEventHandling) {\n                    this.editor.runAsync(editor => {\n                        editor.select(replacementNode, PositionType.After);\n                    });\n                } else {\n                    this.editor.select(replacementNode, PositionType.After);\n                }\n\n                return true;\n            } else {\n                // Select the node then let browser delete it\n                this.editor.select(nodeBeforeCursor);\n                return false;\n            }\n        }\n        return false;\n    }\n\n    private getWord(event: PluginKeyboardEvent | null) {\n        let wordFromRange = this.getRangeUntilAt(event)?.toString() ?? '';\n        let wordFromCache = this.getWordBeforeCursor(event);\n        // VSO 24891: In picker, trigger and mention are separated into two nodes.\n        // In this case, wordFromRange is the trigger character while wordFromCache is the whole string,\n        // so wordFromCache is what we want to return.\n        if (\n            wordFromRange == this.pickerOptions.triggerCharacter &&\n            wordFromRange != wordFromCache\n        ) {\n            return wordFromCache;\n        }\n        return wordFromRange;\n    }\n\n    private setRangeStart(rangeNode: Range, node: Node | null, target: string) {\n        let nodeOffset = node?.textContent ? node.textContent.lastIndexOf(target) : -1;\n        if (node && nodeOffset > -1) {\n            rangeNode.setStart(node, nodeOffset);\n            return true;\n        }\n        return false;\n    }\n\n    private setAriaOwns(isSuggesting: boolean) {\n        this.editor?.setEditorDomAttribute(\n            'aria-owns',\n            isSuggesting && this.pickerOptions.suggestionsLabel\n                ? this.pickerOptions.suggestionsLabel\n                : null\n        );\n    }\n\n    private setAriaActiveDescendant(selectedIndex: number | null) {\n        this.editor?.setEditorDomAttribute(\n            'aria-activedescendant',\n            selectedIndex != null && this.pickerOptions.suggestionLabelPrefix\n                ? this.pickerOptions.suggestionLabelPrefix + selectedIndex.toString()\n                : null\n        );\n    }\n\n    private getInlineElementBeforeCursor(event: PluginEvent): string | null {\n        const searcher = this.editor?.getContentSearcherOfCursor(event);\n        const element = searcher ? searcher.getInlineElementBefore() : null;\n        return element ? element.getTextContent() : null;\n    }\n\n    private isAndroidKeyboardEvent(event: PluginKeyboardEvent): boolean {\n        // Check keyboard events on Android for further handling.\n        // On Android Webview later 51, the KeyboardEvent's key is \"Unidentified\".\n        // On Android Webview below 51, the KeyboardEvent's key is not supported and always returns undefined,\n        // so using the charCode property, which is 0 or 229.\n        return (\n            event.rawEvent.key == UNIDENTIFIED_KEY ||\n            (event.rawEvent.key == undefined &&\n                UNIDENTIFIED_CODE.indexOf(event.rawEvent.charCode) > -1)\n        );\n    }\n}\n\n","export { default as PickerPlugin } from './PickerPlugin';\n","import { clearState } from './utils/clearState';\nimport { DeleteTableContents } from './features/DeleteTableContents';\nimport { handleKeyDownEvent } from './keyUtils/handleKeyDownEvent';\nimport { handleKeyUpEvent } from './keyUtils/handleKeyUpEvent';\nimport { handleMouseDownEvent } from './mouseUtils/handleMouseDownEvent';\nimport { handleScrollEvent } from './mouseUtils/handleScrollEvent';\nimport { PluginEventType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from './TableCellSelectionState';\nimport type { EditorPlugin, IEditor, PluginEvent, TableSelection } from 'roosterjs-editor-types';\n\n/**\n * TableCellSelectionPlugin help highlight table cells\n */\nexport default class TableCellSelection implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private state: TableCellSelectionState | null;\n    private shadowEditCoordinatesBackup: TableSelection | null = null;\n\n    constructor() {\n        this.state = {\n            firstTable: null,\n            lastTarget: null,\n            firstTarget: null,\n            preventKeyUp: false,\n            startedSelection: false,\n            tableSelection: false,\n            targetTable: null,\n            vTable: null,\n            mouseMoveDisposer: null,\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'TableCellSelection';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.editor.addContentEditFeature(DeleteTableContents);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        clearState(this.state, this.editor);\n        this.state = null;\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (this.editor && this.state) {\n            switch (event.eventType) {\n                case PluginEventType.EnteredShadowEdit:\n                    this.handleEnteredShadowEdit(this.state, this.editor);\n                    break;\n                case PluginEventType.LeavingShadowEdit:\n                    this.handleLeavingShadowEdit(this.state, this.editor);\n                    break;\n                case PluginEventType.MouseDown:\n                    if (!this.state.startedSelection) {\n                        handleMouseDownEvent(event, this.state, this.editor);\n                    }\n                    break;\n                case PluginEventType.KeyDown:\n                    if (!this.state.startedSelection) {\n                        handleKeyDownEvent(event, this.state, this.editor);\n                    } else {\n                        event.rawEvent.preventDefault();\n                    }\n                    break;\n                case PluginEventType.KeyUp:\n                    if (!this.state.startedSelection) {\n                        handleKeyUpEvent(event, this.state, this.editor);\n                    } else {\n                        event.rawEvent.preventDefault();\n                    }\n                    break;\n                case PluginEventType.Scroll:\n                    if (this.state.startedSelection) {\n                        handleScrollEvent(this.state, this.editor);\n                    }\n                    break;\n                case PluginEventType.BeforeSetContent:\n                    this.state.firstTable = null;\n                    this.state.tableSelection = false;\n                    this.editor.select(null);\n                    break;\n            }\n        }\n    }\n\n    private handleLeavingShadowEdit(state: TableCellSelectionState, editor: IEditor) {\n        if (state.firstTable && state.tableSelection && state.firstTable) {\n            const table = editor.queryElements('#' + state.firstTable.id);\n            if (table.length == 1) {\n                state.firstTable = table[0] as HTMLTableElement;\n                editor.select(state.firstTable, this.shadowEditCoordinatesBackup);\n                this.shadowEditCoordinatesBackup = null;\n            }\n        }\n    }\n\n    private handleEnteredShadowEdit(state: TableCellSelectionState, editor: IEditor) {\n        const selection = editor.getSelectionRangeEx();\n        if (selection.type == SelectionRangeTypes.TableSelection) {\n            this.shadowEditCoordinatesBackup = selection.coordinates ?? null;\n            state.firstTable = selection.table;\n            state.tableSelection = true;\n            editor.select(selection.table, null);\n        }\n    }\n}\n","/**\n * @internal\n * Table cell query selector\n */\nexport const TABLE_CELL_SELECTOR = 'td,th';\n","import { Keys, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport { safeInstanceOf } from 'roosterjs-editor-dom';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport type { GenericContentEditFeature, IEditor, PluginEvent } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Feature that when Backspace is pressed and there is Table Selection, delete the contents inside of the selection\n */\nexport const DeleteTableContents: GenericContentEditFeature<PluginEvent> = {\n    keys: [Keys.DELETE, Keys.BACKSPACE],\n    shouldHandleEvent: (_, editor: IEditor) => {\n        const selection = editor.getSelectionRangeEx();\n        return selection.type == SelectionRangeTypes.TableSelection;\n    },\n    handleEvent: (_, editor) => {\n        const selection = editor.getSelectionRangeEx();\n        if (selection.type == SelectionRangeTypes.TableSelection) {\n            editor.addUndoSnapshot(() => {\n                if (selection.isWholeTableSelected) {\n                    selection.table\n                        .querySelectorAll(TABLE_CELL_SELECTOR)\n                        .forEach(td => deleteNodeContents(td, editor));\n                } else {\n                    editor\n                        .getSelectedRegions()\n                        .forEach(region => deleteNodeContents(region.rootNode, editor));\n                }\n            });\n        }\n    },\n};\n\nfunction deleteNodeContents(element: Node, editor: IEditor) {\n    if (safeInstanceOf(element, 'HTMLTableCellElement')) {\n        const range = new Range();\n        range.selectNodeContents(element);\n        range.deleteContents();\n        element.appendChild(editor.getDocument().createElement('br'));\n    }\n}\n","export { default as TableCellSelection } from './TableCellSelection';\n","import { getCellAtCursor } from '../utils/getCellAtCursor';\nimport { getCellCoordinates } from '../utils/getCellCoordinates';\nimport { isAfter } from '../utils/isAfter';\nimport { Keys, PositionType, SelectionRangeTypes } from 'roosterjs-editor-types';\nimport { prepareSelection } from '../utils/prepareSelection';\nimport { selectTable } from '../utils/selectTable';\nimport { setData } from '../utils/setData';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport { updateSelection } from '../utils/updateSelection';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\nimport {\n    contains,\n    createRange,\n    isCtrlOrMetaPressed,\n    Position,\n    safeInstanceOf,\n    VTable,\n} from 'roosterjs-editor-dom';\nimport type { Coordinates, IEditor, PluginKeyDownEvent } from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport function handleKeyDownEvent(\n    event: PluginKeyDownEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    const { shiftKey, ctrlKey, metaKey, which, defaultPrevented } = event.rawEvent;\n    if ((shiftKey && (ctrlKey || metaKey)) || which == Keys.SHIFT || defaultPrevented) {\n        state.preventKeyUp = defaultPrevented;\n        return;\n    }\n\n    const range = editor.getSelectionRangeEx();\n    if (shiftKey) {\n        if (!state.firstTarget) {\n            const pos = editor.getFocusedPosition();\n            const cell = pos && getCellAtCursor(editor, pos.node);\n\n            state.firstTarget = cell;\n        }\n\n        //If first target is not a table cell, we should ignore this plugin\n        if (!safeInstanceOf(state.firstTarget, 'HTMLTableCellElement')) {\n            return;\n        }\n        editor.runAsync(editor => {\n            const pos = editor.getFocusedPosition();\n            const newTarget = state.tableSelection ? state.lastTarget : pos?.node;\n            if (newTarget) {\n                setData(newTarget, state, editor);\n            }\n\n            if (state.firstTable! == state.targetTable!) {\n                if (!shouldConvertToTableSelection(state, editor) && !state.tableSelection) {\n                    return;\n                }\n                //When selection start and end is inside of the same table\n                handleKeySelectionInsideTable(event, state, editor);\n            } else if (state.tableSelection) {\n                if (state.firstTable) {\n                    editor.select(state.firstTable, null /* coordinates */);\n                }\n                state.tableSelection = false;\n            }\n        });\n    } else if (\n        range?.type == SelectionRangeTypes.TableSelection &&\n        (!isCtrlOrMetaPressed(event.rawEvent) || which == Keys.HOME || which == Keys.END)\n    ) {\n        // Select all content in the first cell\n        const row = range.ranges[0];\n        const firstCell = row.startContainer.childNodes[row.startOffset];\n        const children = firstCell.childNodes;\n        const contentRange = createRange(children[0], children[children.length - 1]);\n        editor.select(contentRange);\n    }\n}\n\n/**\n * @internal\n */\nfunction handleKeySelectionInsideTable(\n    event: PluginKeyDownEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    state.firstTarget = getCellAtCursor(editor, state.firstTarget);\n    state.lastTarget = getCellAtCursor(editor, state.lastTarget);\n\n    updateSelection(editor, state.firstTarget, 0);\n    state.vTable = state.vTable || new VTable(state.firstTable as HTMLTableElement);\n\n    const firstCell = getCellCoordinates(state.vTable, state.firstTarget as Element);\n    const lastCell = getNextTD(event, editor, state);\n\n    if (!firstCell || !lastCell) {\n        return;\n    }\n    state.vTable.selection = {\n        firstCell,\n        lastCell,\n    };\n\n    const { selection } = state.vTable;\n\n    if (\n        !selection.lastCell ||\n        (state.vTable.cells && selection.lastCell.y > state.vTable.cells.length - 1) ||\n        selection.lastCell.y == -1\n    ) {\n        //When selection is moving from inside of a table to outside\n        state.lastTarget = editor.getElementAtCursor(\n            TABLE_CELL_SELECTOR + ',div',\n            state.firstTable ?? undefined\n        );\n        if (safeInstanceOf(state.lastTarget, 'HTMLTableCellElement')) {\n            prepareSelection(state, editor);\n        } else {\n            const position =\n                state.targetTable &&\n                new Position(\n                    state.targetTable,\n                    selection.lastCell.y == null || selection.lastCell.y == -1\n                        ? PositionType.Before\n                        : PositionType.After\n                );\n\n            const sel = editor.getDocument().defaultView?.getSelection();\n            const { anchorNode, anchorOffset } = sel || {};\n            if (\n                sel &&\n                anchorNode &&\n                anchorOffset != undefined &&\n                anchorOffset != null &&\n                position\n            ) {\n                editor.select(sel.getRangeAt(0));\n                sel.setBaseAndExtent(anchorNode, anchorOffset, position.node, position.offset);\n                state.lastTarget = position.node;\n                event.rawEvent.preventDefault();\n                return;\n            }\n        }\n    }\n\n    selectTable(editor, state);\n\n    const isBeginAboveEnd = isAfter(state.firstTarget, state.lastTarget);\n    if (state.lastTarget) {\n        const targetPosition = new Position(\n            state.lastTarget,\n            isBeginAboveEnd ? PositionType.Begin : PositionType.End\n        );\n        updateSelection(editor, targetPosition.node, targetPosition.offset);\n    }\n\n    state.tableSelection = true;\n    event.rawEvent.preventDefault();\n}\n\nfunction getNextTD(\n    event: PluginKeyDownEvent,\n    editor: IEditor,\n    state: TableCellSelectionState\n): Coordinates | undefined {\n    state.lastTarget =\n        state.lastTarget && editor.getElementAtCursor(TABLE_CELL_SELECTOR, state.lastTarget);\n\n    if (safeInstanceOf(state.lastTarget, 'HTMLTableCellElement') && state.vTable?.cells) {\n        let coordinates = getCellCoordinates(state.vTable, state.lastTarget);\n\n        if (state.tableSelection && coordinates) {\n            switch (event.rawEvent.which) {\n                case Keys.RIGHT:\n                    coordinates.x += state.lastTarget.colSpan;\n                    if (state.vTable.cells[coordinates.y][coordinates.x] == null) {\n                        coordinates.x = state.vTable.cells[coordinates.y].length - 1;\n                        coordinates.y++;\n                    }\n                    break;\n                case Keys.LEFT:\n                    if (coordinates.x == 0) {\n                        coordinates.y--;\n                    } else {\n                        coordinates.x--;\n                    }\n                    break;\n                case Keys.UP:\n                    coordinates.y--;\n                    break;\n                case Keys.DOWN:\n                    coordinates.y++;\n                    break;\n            }\n        }\n\n        if (coordinates && coordinates.y >= 0 && coordinates.x >= 0) {\n            state.lastTarget = state.vTable.getTd(coordinates.y, coordinates.x);\n        }\n        return coordinates;\n    }\n    return undefined;\n}\n\nfunction shouldConvertToTableSelection(state: TableCellSelectionState, editor: IEditor) {\n    if (!state.firstTable || !editor) {\n        return false;\n    }\n    const regions = editor.getSelectedRegions();\n    if (regions.length == 1) {\n        return false;\n    }\n\n    let result = true;\n\n    regions.forEach(value => {\n        if (!contains(state.firstTable, value.rootNode)) {\n            result = false;\n        }\n    });\n\n    return result;\n}\n","import { clearState } from '../utils/clearState';\nimport { isCharacterValue } from 'roosterjs-editor-dom';\nimport { Keys } from 'roosterjs-editor-types';\nimport type { IEditor, PluginKeyUpEvent } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\nconst IGNORE_KEY_UP_KEYS = [\n    Keys.SHIFT,\n    Keys.ALT,\n    Keys.META_LEFT,\n    Keys.CTRL_LEFT,\n    Keys.PRINT_SCREEN,\n];\n\n/**\n * @internal\n */\nexport function handleKeyUpEvent(\n    event: PluginKeyUpEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    const { shiftKey, which, ctrlKey } = event.rawEvent;\n    if (\n        !shiftKey &&\n        !ctrlKey &&\n        state.firstTarget &&\n        !state.preventKeyUp &&\n        IGNORE_KEY_UP_KEYS.indexOf(which) == -1\n    ) {\n        if (isCharacterValue(event.rawEvent)) {\n            editor.addUndoSnapshot();\n        }\n        clearState(state, editor);\n    }\n    state.preventKeyUp = false;\n}\n","import normalizeTableSelection from '../utils/normalizeTableSelection';\nimport { clearState } from '../utils/clearState';\nimport { contains, getTagOfNode, safeInstanceOf, VTable } from 'roosterjs-editor-dom';\nimport { getCellAtCursor } from '../utils/getCellAtCursor';\nimport { getCellCoordinates } from '../utils/getCellCoordinates';\nimport { getTableAtCursor } from '../utils/getTableAtCursor';\nimport { prepareSelection } from '../utils/prepareSelection';\nimport { restoreSelection } from '../utils/restoreSelection';\nimport { selectTable } from '../utils/selectTable';\nimport { setData } from '../utils/setData';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport { updateSelection } from '../utils/updateSelection';\nimport type { IEditor, PluginMouseDownEvent } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\nconst LEFT_CLICK = 1;\nconst RIGHT_CLICK = 3;\n\n/**\n * @internal\n */\nexport function handleMouseDownEvent(\n    event: PluginMouseDownEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    const { which, shiftKey, target, detail } = event.rawEvent;\n    const table = editor.getElementAtCursor('table', target as Node, event);\n    const tripleClick = detail >= 3;\n\n    if (table && !table.isContentEditable) {\n        return;\n    }\n\n    const td = editor.getElementAtCursor(TABLE_CELL_SELECTOR);\n    if (which == RIGHT_CLICK && state.tableSelection && state.vTable && td) {\n        //If the user is right clicking To open context menu\n        const coord = getCellCoordinates(state.vTable, td);\n        if (coord) {\n            const { firstCell, lastCell } = normalizeTableSelection(state.vTable) || {};\n            if (\n                firstCell &&\n                lastCell &&\n                coord.y >= firstCell.y &&\n                coord.y <= lastCell.y &&\n                coord.x >= firstCell.x &&\n                coord.x <= lastCell.x\n            ) {\n                state.firstTarget = state.vTable.getCell(firstCell.y, firstCell.x).td;\n                state.lastTarget = state.vTable.getCell(lastCell.y, lastCell.x).td;\n\n                if (state.firstTarget && state.lastTarget) {\n                    const selection = editor.getDocument().defaultView?.getSelection();\n                    selection?.setBaseAndExtent(state.firstTarget, 0, state.lastTarget, 0);\n                    selectTable(editor, state);\n                }\n\n                return;\n            }\n        }\n    }\n    if (which == LEFT_CLICK) {\n        if (!shiftKey && !tripleClick) {\n            clearState(state, editor);\n\n            if (getTableAtCursor(editor, event.rawEvent.target)) {\n                const doc = editor.getDocument() || document;\n\n                const mouseUpListener = getOnMouseUp(state);\n                const mouseMoveListener = onMouseMove(state, editor);\n                doc.addEventListener('mouseup', mouseUpListener, true /*setCapture*/);\n                doc.addEventListener('mousemove', mouseMoveListener, true /*setCapture*/);\n\n                state.mouseMoveDisposer = () => {\n                    doc.removeEventListener('mouseup', mouseUpListener, true /*setCapture*/);\n                    doc.removeEventListener('mousemove', mouseMoveListener, true /*setCapture*/);\n                };\n\n                state.startedSelection = true;\n            }\n        }\n\n        if (shiftKey || tripleClick) {\n            editor.runAsync(editor => {\n                const sel = editor.getDocument().defaultView?.getSelection();\n                const first = getCellAtCursor(editor, sel?.anchorNode);\n                // Triple clicking a cell will select that cell only\n                // Assign last the same as first to make sure we can select the cell\n                const last = tripleClick ? first : getCellAtCursor(editor, sel?.focusNode);\n                const firstTable = getTableAtCursor(editor, first);\n                if (\n                    firstTable &&\n                    safeInstanceOf(first, 'HTMLTableCellElement') &&\n                    safeInstanceOf(last, 'HTMLTableCellElement')\n                ) {\n                    state.vTable = new VTable(first);\n                    const firstCord = getCellCoordinates(state.vTable, first);\n                    const lastCord = getCellCoordinates(state.vTable, last);\n\n                    if (!firstCord || !lastCord) {\n                        return;\n                    }\n                    state.vTable.selection = {\n                        firstCell: firstCord,\n                        lastCell: lastCord,\n                    };\n\n                    state.firstTarget = first;\n                    state.lastTarget = last;\n                    selectTable(editor, state);\n\n                    state.tableSelection = true;\n                    state.firstTable = firstTable as HTMLTableElement;\n                    state.targetTable = firstTable;\n                    updateSelection(editor, first, 0);\n                }\n            });\n        }\n    }\n}\n\nfunction getOnMouseUp(state: TableCellSelectionState) {\n    return () => {\n        removeMouseUpEventListener(state);\n    };\n}\n\nfunction onMouseMove(state: TableCellSelectionState, editor: IEditor) {\n    return (event: MouseEvent) => {\n        if (!editor.contains(event.target as Node)) {\n            return;\n        }\n\n        //If already in table selection and the new target is contained in the last target cell, no need to\n        //Apply selection styles again.\n        if (\n            state.tableSelection &&\n            state.firstTarget &&\n            contains(state.lastTarget, event.target as Node, true)\n        ) {\n            updateSelection(editor, state.firstTarget, 0);\n            event.preventDefault();\n            return;\n        }\n\n        if (getTagOfNode(event.target as Node) == 'TABLE') {\n            event.preventDefault();\n            return;\n        }\n\n        setData(event.target as Node, state, editor);\n\n        // If there is a first target, but is not inside a table, no more actions to perform.\n        if (state.firstTarget && !state.firstTable) {\n            return;\n        }\n\n        //Ignore if\n        // Is a DIV that only contains a Table\n        // If the event target is not contained in the editor.\n        if (\n            state.lastTarget &&\n            ((state.lastTarget.lastChild == state.lastTarget.firstChild &&\n                getTagOfNode(state.lastTarget.lastChild) == 'TABLE' &&\n                getTagOfNode(state.lastTarget) == 'DIV') ||\n                !editor.contains(state.lastTarget))\n        ) {\n            event.preventDefault();\n            return;\n        }\n\n        prepareSelection(state, editor);\n        const isNewTDContainingFirstTable = safeInstanceOf(state.lastTarget, 'HTMLTableCellElement')\n            ? contains(state.lastTarget, state.firstTable)\n            : false;\n\n        if (\n            (state.firstTable && state.firstTable == state.targetTable) ||\n            isNewTDContainingFirstTable\n        ) {\n            //When starting selection inside of a table and ends inside of the same table.\n            selectionInsideTableMouseMove(event, state, editor);\n        } else if (state.tableSelection) {\n            restoreSelection(state, editor);\n        }\n\n        if (state.tableSelection && state.firstTarget) {\n            updateSelection(editor, state.firstTarget, 0);\n            event.preventDefault();\n        }\n    };\n}\n\n/**\n * @internal\n */\nexport function selectionInsideTableMouseMove(\n    event: MouseEvent,\n    state: TableCellSelectionState,\n    editor: IEditor\n) {\n    if (\n        state.firstTarget &&\n        state.firstTable &&\n        state.lastTarget != state.firstTarget &&\n        state.lastTarget\n    ) {\n        updateSelection(editor, state.firstTarget, 0);\n        if (\n            state.firstTable != state.targetTable &&\n            state.targetTable?.contains(state.firstTable)\n        ) {\n            //If selection started in a table that is inside of another table and moves to parent table\n            //Make the firstTarget the TD of the parent table.\n            state.firstTarget = editor.getElementAtCursor(TABLE_CELL_SELECTOR, state.lastTarget);\n        }\n\n        if (state.firstTable && state.firstTarget) {\n            state.tableSelection = true;\n\n            state.vTable = state.vTable || new VTable(state.firstTable);\n\n            const firstCell = getCellCoordinates(state.vTable, state.firstTarget);\n            const lastCell = getCellCoordinates(state.vTable, state.lastTarget);\n\n            if (!firstCell || !lastCell) {\n                return;\n            }\n\n            state.vTable.selection = {\n                firstCell,\n                lastCell,\n            };\n            selectTable(editor, state);\n        }\n\n        event.preventDefault();\n    } else if (\n        state.lastTarget == state.firstTarget &&\n        state.tableSelection &&\n        state.firstTable &&\n        state.firstTarget\n    ) {\n        state.vTable = new VTable(state.firstTable);\n        const cell = getCellCoordinates(state.vTable, state.firstTarget);\n        if (cell) {\n            state.vTable.selection = {\n                firstCell: cell,\n                lastCell: cell,\n            };\n        }\n\n        selectTable(editor, state);\n    }\n}\n\nfunction removeMouseUpEventListener(state: TableCellSelectionState): void {\n    if (state.startedSelection) {\n        state.startedSelection = false;\n        state.mouseMoveDisposer?.();\n    }\n}\n","import { getCellCoordinates } from '../utils/getCellCoordinates';\nimport { restoreSelection } from '../utils/restoreSelection';\nimport { selectTable } from '../utils/selectTable';\nimport { setData } from '../utils/setData';\nimport { updateSelection } from '../utils/updateSelection';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * Handle Scroll Event and mantains the selection range,\n * Since when we scroll the cursor does not trigger the on Mouse Move event\n * The table selection gets removed.\n */\nexport function handleScrollEvent(state: TableCellSelectionState, editor: IEditor) {\n    const eventTarget = editor.getElementAtCursor();\n    if (!eventTarget) {\n        return;\n    }\n    setData(eventTarget, state, editor);\n    if (\n        state.firstTable == state.targetTable &&\n        state.firstTarget &&\n        state.vTable?.selection &&\n        state.lastTarget &&\n        state.tableSelection\n    ) {\n        const newCell = getCellCoordinates(state.vTable, state.lastTarget);\n        if (newCell) {\n            state.vTable.selection.lastCell = newCell;\n            selectTable(editor, state);\n            updateSelection(editor, state.firstTarget, 0);\n        }\n    } else if (state.tableSelection) {\n        restoreSelection(state, editor);\n    }\n}\n","import type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function clearState(state: TableCellSelectionState | null, editor: IEditor | null): void {\n    editor?.select(null);\n    if (state) {\n        state.vTable = null;\n        state.firstTarget = null;\n        state.lastTarget = null;\n        state.tableSelection = false;\n        state.firstTable = null;\n        state.targetTable = null;\n        state.mouseMoveDisposer?.();\n        state.mouseMoveDisposer = null;\n    }\n}\n","import { TABLE_CELL_SELECTOR } from '../constants';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { Nullable } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function getCellAtCursor(editor: IEditor, node: Nullable<Node>): HTMLElement {\n    if (editor) {\n        return (\n            editor.getElementAtCursor(TABLE_CELL_SELECTOR, node ?? undefined) ||\n            (node as HTMLElement)\n        );\n    }\n    return node as HTMLElement;\n}\n","import type { Coordinates } from 'roosterjs-editor-types';\nimport type { VTable } from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Gets the coordinates of a cell\n * @param cellInput The cell the to find the coordinates\n * @returns Coordinates of the cell, null if not found\n */\nexport function getCellCoordinates(vTable: VTable, cellInput: Node): Coordinates | undefined {\n    let result: Coordinates | undefined;\n    if (vTable?.cells) {\n        for (let indexY = 0; indexY < vTable.cells.length; indexY++) {\n            for (let indexX = 0; indexX < vTable.cells[indexY].length; indexX++) {\n                if (cellInput == vTable.cells[indexY][indexX].td) {\n                    result = {\n                        x: indexX,\n                        y: indexY,\n                    };\n                }\n            }\n        }\n    }\n\n    return result;\n}\n","import type { IEditor } from 'roosterjs-editor-types';\nimport type { Nullable } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function getTableAtCursor(\n    editor: IEditor,\n    node: Nullable<Node | EventTarget>\n): HTMLTableElement | null {\n    if (editor) {\n        return editor.getElementAtCursor('table', node as Node) as HTMLTableElement;\n    }\n    return null;\n}\n","import { Position } from 'roosterjs-editor-dom';\nimport { PositionType } from 'roosterjs-editor-types';\nimport type { Nullable } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function isAfter(node1: Nullable<Node>, node2: Nullable<Node>) {\n    if (node1 && node2) {\n        if (node2.contains(node1)) {\n            const r1 = (node1 as Element).getBoundingClientRect?.();\n            const r2 = (node2 as Element).getBoundingClientRect?.();\n            if (r1 && r2) {\n                return r1.top > r2.top && r1.bottom < r2.bottom;\n            }\n        }\n\n        const position = new Position(node1, PositionType.End);\n        return position.isAfter(new Position(node2, PositionType.End));\n    }\n    return false;\n}\n","import type { Coordinates, TableSelection } from 'roosterjs-editor-types';\nimport type { VTable } from 'roosterjs-editor-dom';\n\n/**\n * @internal\n * Make the first Cell of a table selection always be on top of the last cell.\n * @param input Table selection\n * @returns Table Selection where the first cell is always going to be first selected in the table\n * and the last cell always going to be last selected in the table.\n */\nexport default function normalizeTableSelection(vTable: VTable): TableSelection | null {\n    const { firstCell, lastCell } = vTable?.selection || {};\n    if (!vTable?.cells || !vTable.selection || !firstCell || !lastCell) {\n        return null;\n    }\n\n    const cells = vTable.cells;\n\n    let newFirst = {\n        x: Math.min(firstCell.x, lastCell.x),\n        y: Math.min(firstCell.y, lastCell.y),\n    };\n    let newLast = {\n        x: Math.max(firstCell.x, lastCell.x),\n        y: Math.max(firstCell.y, lastCell.y),\n    };\n\n    const fixCoordinates = (coord: Coordinates) => {\n        if (coord.x < 0) {\n            coord.x = 0;\n        }\n        if (coord.y < 0) {\n            coord.y = 0;\n        }\n\n        if (coord.y >= cells.length) {\n            coord.y = cells.length - 1;\n        }\n\n        const rowsCells = cells[coord.y].length;\n        if (coord.x >= rowsCells) {\n            coord.x = rowsCells - 1;\n        }\n    };\n\n    fixCoordinates(newFirst);\n    fixCoordinates(newLast);\n\n    return { firstCell: newFirst, lastCell: newLast };\n}\n","import { findClosestElementAncestor } from 'roosterjs-editor-dom';\nimport { getTableAtCursor } from './getTableAtCursor';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n *  Check if the selection started in a inner table.\n */\nexport function prepareSelection(state: TableCellSelectionState, editor: IEditor) {\n    if (!state.firstTable || !state.targetTable) {\n        return;\n    }\n    let isNewTargetTableContained =\n        state.lastTarget != state.firstTarget &&\n        state.firstTable?.contains(\n            findClosestElementAncestor(state.targetTable, state.firstTable, TABLE_CELL_SELECTOR)\n        );\n\n    if (isNewTargetTableContained && state.tableSelection) {\n        while (isNewTargetTableContained) {\n            state.lastTarget = findClosestElementAncestor(\n                state.targetTable,\n                state.firstTable,\n                TABLE_CELL_SELECTOR\n            );\n            state.targetTable = getTableAtCursor(editor, state.lastTarget);\n            isNewTargetTableContained =\n                state.lastTarget != state.firstTarget &&\n                state.firstTable?.contains(\n                    findClosestElementAncestor(\n                        state.targetTable,\n                        state.firstTable,\n                        TABLE_CELL_SELECTOR\n                    )\n                );\n        }\n    }\n\n    let isFirstTargetTableContained =\n        state.lastTarget != state.firstTarget &&\n        state.targetTable?.contains(\n            findClosestElementAncestor(state.firstTable, state.targetTable, TABLE_CELL_SELECTOR)\n        );\n\n    if (isFirstTargetTableContained && state.tableSelection && state.targetTable) {\n        while (isFirstTargetTableContained) {\n            state.firstTarget = findClosestElementAncestor(\n                state.firstTable,\n                state.targetTable,\n                TABLE_CELL_SELECTOR\n            );\n            if (!state.firstTarget) {\n                return;\n            }\n            state.firstTable = getTableAtCursor(editor, state.firstTarget);\n            isFirstTargetTableContained =\n                state.lastTarget != state.firstTarget &&\n                state.targetTable?.contains(\n                    findClosestElementAncestor(\n                        state.firstTable,\n                        state.targetTable,\n                        TABLE_CELL_SELECTOR\n                    )\n                );\n        }\n    }\n}\n","import { isAfter } from './isAfter';\nimport { Position } from 'roosterjs-editor-dom';\nimport { PositionType } from 'roosterjs-editor-types';\nimport { updateSelection } from './updateSelection';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function restoreSelection(state: TableCellSelectionState, editor: IEditor) {\n    if (!state.lastTarget || !state.firstTarget) {\n        return;\n    }\n\n    if (state.firstTable) {\n        editor.select(state.firstTable, null /* coordinates */);\n    }\n    state.tableSelection = false;\n    const isBeginAboveEnd = isAfter(state.firstTarget, state.lastTarget);\n    const targetPosition = new Position(\n        state.lastTarget,\n        isBeginAboveEnd ? PositionType.End : PositionType.Begin\n    );\n\n    const firstTargetRange = new Range();\n    if (state.firstTarget) {\n        firstTargetRange.selectNodeContents(state.firstTarget);\n    }\n    updateSelection(\n        editor,\n        state.firstTarget,\n        isBeginAboveEnd\n            ? Position.getEnd(firstTargetRange).offset\n            : Position.getStart(firstTargetRange).offset,\n        targetPosition.element,\n        targetPosition.offset\n    );\n}\n","import normalizeTableSelection from './normalizeTableSelection';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function selectTable(editor: IEditor, state: TableCellSelectionState) {\n    if (editor && state.vTable) {\n        editor?.select(state.vTable.table, normalizeTableSelection(state.vTable));\n    }\n}\n","import { getCellAtCursor } from './getCellAtCursor';\nimport { getTableAtCursor } from './getTableAtCursor';\nimport { TABLE_CELL_SELECTOR } from '../constants';\nimport type { IEditor } from 'roosterjs-editor-types';\nimport type { TableCellSelectionState } from '../TableCellSelectionState';\n\n/**\n * @internal\n */\nexport function setData(eventTarget: Node, state: TableCellSelectionState, editor: IEditor) {\n    const pos = editor.getFocusedPosition();\n    if (pos) {\n        state.firstTarget = state.firstTarget || getCellAtCursor(editor, pos.node);\n\n        if (state.firstTarget.nodeType == Node.TEXT_NODE) {\n            state.firstTarget = editor.getElementAtCursor(TABLE_CELL_SELECTOR, state.firstTarget);\n        }\n        if (!editor.contains(state.firstTarget) && state.lastTarget) {\n            state.firstTarget = state.lastTarget;\n        }\n    }\n\n    state.firstTable = getTableAtCursor(editor, state.firstTarget) as HTMLTableElement;\n    state.lastTarget = getCellAtCursor(editor, eventTarget as Node);\n    state.targetTable = getTableAtCursor(editor, state.lastTarget);\n}\n","import type { IEditor } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * Use SetBaseAndExtend to update the selection without losing the order that was used in the selection.\n * Using editor.select may lose the order of the selection if the start of the selection is After\n * the end container of the selection.\n */\nexport function updateSelection(\n    editor: IEditor,\n    start: Node,\n    offset: number,\n    end?: Node,\n    endOffset?: number\n) {\n    const selection = editor.getDocument().defaultView?.getSelection();\n    if (selection) {\n        end = end || start;\n        endOffset = endOffset || offset;\n        selection.setBaseAndExtent(start, offset, end, endOffset);\n    }\n}\n","import TableEditor from './editors/TableEditor';\nimport { normalizeRect, safeInstanceOf } from 'roosterjs-editor-dom';\nimport { PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    CreateElementData,\n    EditorPlugin,\n    IEditor,\n    PluginEvent,\n    Rect,\n} from 'roosterjs-editor-types';\n\nconst TABLE_RESIZER_LENGTH = 12;\n\n/**\n * TableResize plugin, provides the ability to resize a table by drag-and-drop\n */\nexport default class TableResize implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private onMouseMoveDisposer: (() => void) | null = null;\n    private tableRectMap: { table: HTMLTableElement; rect: Rect }[] | null = null;\n    private tableEditor: TableEditor | null = null;\n\n    /**\n     * Construct a new instance of TableResize plugin\n     * @param onShowHelperElement An optional callback to allow customize helper element of table resizing.\n     * To customize the helper element, add this callback and change the attributes of elementData then it\n     * will be picked up by TableResize code\n     * @param anchorContainerSelector An optional selector string to specify the container to host the plugin.\n     * The container must not be affected by transform: scale(), otherwise the position calculation will be wrong.\n     * If not specified, the plugin will be inserted in document.body\n     */\n    constructor(\n        private onShowHelperElement?: (\n            elementData: CreateElementData,\n            helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector'\n        ) => void,\n        private anchorContainerSelector?: string\n    ) {}\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'TableResize';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.onMouseMoveDisposer = this.editor.addDomEventHandler({\n            mousemove: this.onMouseMove,\n            mouseout: e => this.onMouseOut(e),\n        });\n    }\n\n    private onMouseOut = (ev: Event) => {\n        if (\n            isMouseEvent(ev) &&\n            safeInstanceOf(ev.relatedTarget, 'HTMLElement') &&\n            this.tableEditor &&\n            !this.tableEditor.isOwnedElement(ev.relatedTarget) &&\n            !this.editor?.contains(ev.relatedTarget)\n        ) {\n            this.setTableEditor(null);\n        }\n    };\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.onMouseMoveDisposer?.();\n        this.invalidateTableRects();\n        this.disposeTableEditor();\n        this.editor = null;\n        this.onMouseMoveDisposer = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(e: PluginEvent) {\n        switch (e.eventType) {\n            case PluginEventType.Input:\n            case PluginEventType.ContentChanged:\n            case PluginEventType.Scroll:\n            case PluginEventType.ZoomChanged:\n                this.setTableEditor(null);\n                this.invalidateTableRects();\n                break;\n        }\n    }\n\n    private onMouseMove = (event: Event) => {\n        const e = event as MouseEvent;\n\n        if (e.buttons > 0 || !this.editor) {\n            return;\n        }\n\n        this.ensureTableRects();\n\n        const editorWindow = this.editor.getDocument().defaultView || window;\n        const x = e.pageX - editorWindow.scrollX;\n        const y = e.pageY - editorWindow.scrollY;\n        let currentTable: HTMLTableElement | null = null;\n\n        if (this.tableRectMap) {\n            for (let i = this.tableRectMap.length - 1; i >= 0; i--) {\n                const { table, rect } = this.tableRectMap[i];\n\n                if (\n                    x >= rect.left - TABLE_RESIZER_LENGTH &&\n                    x <= rect.right + TABLE_RESIZER_LENGTH &&\n                    y >= rect.top - TABLE_RESIZER_LENGTH &&\n                    y <= rect.bottom + TABLE_RESIZER_LENGTH\n                ) {\n                    currentTable = table;\n                    break;\n                }\n            }\n        }\n\n        this.setTableEditor(currentTable, e);\n        this.tableEditor?.onMouseMove(x, y);\n    };\n\n    private setTableEditor(table: HTMLTableElement | null, e?: MouseEvent) {\n        if (this.tableEditor && !this.tableEditor.isEditing() && table != this.tableEditor.table) {\n            this.disposeTableEditor();\n        }\n\n        if (!this.tableEditor && table && this.editor && table.rows.length > 0) {\n            const container = this.anchorContainerSelector\n                ? this.editor.getDocument().querySelector(this.anchorContainerSelector)\n                : undefined;\n\n            this.tableEditor = new TableEditor(\n                this.editor,\n                table,\n                this.invalidateTableRects,\n                this.onShowHelperElement,\n                safeInstanceOf(container, 'HTMLElement') ? container : undefined,\n                e?.currentTarget\n            );\n        }\n    }\n\n    private invalidateTableRects = () => {\n        this.tableRectMap = null;\n    };\n\n    private disposeTableEditor() {\n        this.tableEditor?.dispose();\n        this.tableEditor = null;\n    }\n\n    private ensureTableRects() {\n        if (!this.tableRectMap && this.editor) {\n            this.tableRectMap = [];\n            this.editor.queryElements('table', table => {\n                if (table.isContentEditable) {\n                    const rect = normalizeRect(table.getBoundingClientRect());\n                    if (rect && this.tableRectMap) {\n                        this.tableRectMap.push({\n                            table,\n                            rect,\n                        });\n                    }\n                }\n            });\n        }\n    }\n}\n\nfunction isMouseEvent(e: Event): e is MouseEvent {\n    return !!(e as MouseEvent).pageX;\n}\n","import DragAndDropHelper from '../../../pluginUtils/DragAndDropHelper';\nimport { createElement, normalizeRect, VTable } from 'roosterjs-editor-dom';\nimport type DragAndDropHandler from '../../../pluginUtils/DragAndDropHandler';\nimport type TableEditFeature from './TableEditorFeature';\nimport type { CreateElementData, Rect } from 'roosterjs-editor-types';\n\nconst CELL_RESIZER_WIDTH = 4;\nconst MIN_CELL_WIDTH = 30;\n\n/**\n * @internal\n */\nexport default function createCellResizer(\n    td: HTMLTableCellElement,\n    zoomScale: number,\n    isRTL: boolean,\n    isHorizontal: boolean,\n    onStart: () => void,\n    onEnd: () => false,\n    onShowHelperElement?: (\n        elementData: CreateElementData,\n        helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector'\n    ) => void,\n    anchorContainer?: HTMLElement\n): TableEditFeature | null {\n    const document = td.ownerDocument;\n    const createElementData = {\n        tag: 'div',\n        style: `position: fixed; cursor: ${isHorizontal ? 'row' : 'col'}-resize; user-select: none`,\n    };\n\n    onShowHelperElement?.(createElementData, 'CellResizer');\n\n    const div = createElement(createElementData, document) as HTMLDivElement;\n\n    (anchorContainer || document.body).appendChild(div);\n\n    const context: DragAndDropContext = { td, isRTL, zoomScale, onStart };\n    const setPosition = isHorizontal ? setHorizontalPosition : setVerticalPosition;\n    setPosition(context, div);\n\n    const handler: DragAndDropHandler<DragAndDropContext, DragAndDropInitValue> = {\n        onDragStart,\n        onDragging: isHorizontal ? onDraggingHorizontal : onDraggingVertical,\n        onDragEnd: onEnd,\n    };\n\n    const featureHandler = new DragAndDropHelper<DragAndDropContext, DragAndDropInitValue>(\n        div,\n        context,\n        setPosition,\n        handler,\n        zoomScale\n    );\n\n    return { node: td, div, featureHandler };\n}\n\ninterface DragAndDropContext {\n    td: HTMLTableCellElement;\n    isRTL: boolean;\n    zoomScale: number;\n    onStart: () => void;\n}\n\ninterface DragAndDropInitValue {\n    vTable: VTable;\n    currentCells: HTMLTableCellElement[];\n    nextCells: HTMLTableCellElement[];\n    initialX: number;\n}\n\nfunction onDragStart(context: DragAndDropContext, event: MouseEvent): DragAndDropInitValue {\n    const { td, isRTL, zoomScale, onStart } = context;\n    const vTable = new VTable(td, true /*normalizeSize*/, zoomScale);\n    const rect = normalizeRect(td.getBoundingClientRect());\n\n    if (rect) {\n        onStart();\n\n        // calculate and retrieve the cells of the two columns shared by the current vertical resizer\n        const currentCells = vTable.getCellsWithBorder(isRTL ? rect.left : rect.right, !isRTL);\n        const nextCells = vTable.getCellsWithBorder(isRTL ? rect.left : rect.right, isRTL);\n\n        return {\n            vTable,\n            currentCells,\n            nextCells,\n            initialX: event.pageX,\n        };\n    } else {\n        return { vTable, currentCells: [], nextCells: [], initialX: 0 }; // Just a fallback\n    }\n}\n\nfunction onDraggingHorizontal(\n    context: DragAndDropContext,\n    event: MouseEvent,\n    initValue: DragAndDropInitValue,\n    deltaX: number,\n    deltaY: number\n) {\n    const { td, zoomScale } = context;\n    const { vTable } = initValue;\n\n    vTable.table.removeAttribute('height');\n    vTable.table.style.setProperty('height', null);\n    vTable.forEachCellOfCurrentRow(cell => {\n        if (cell.td) {\n            cell.td.style.setProperty(\n                'height',\n                cell.td == td ? `${(cell.height ?? 0) / zoomScale + deltaY}px` : null\n            );\n        }\n    });\n\n    // To avoid apply format styles when the table is being resizing, the skipApplyFormat is set to true.\n    vTable.writeBack(true /**skipApplyFormat*/);\n    return true;\n}\n\nfunction onDraggingVertical(\n    context: DragAndDropContext,\n    event: MouseEvent,\n    initValue: DragAndDropInitValue,\n    deltaX: number\n) {\n    const { isRTL, zoomScale } = context;\n    const { vTable, nextCells, currentCells, initialX } = initValue;\n\n    if (!canResizeColumns(event.pageX, currentCells, nextCells, isRTL, zoomScale)) {\n        return false;\n    }\n\n    // Since we allow the user to resize the table width on adjusting the border of the last cell,\n    // we need to make the table width resizable by setting it as null;\n    // We also allow the user to resize the table width if Shift key is pressed\n    const isLastCell = nextCells.length == 0;\n    const isShiftPressed = event.shiftKey;\n\n    if (isLastCell || isShiftPressed) {\n        vTable.table.style.setProperty('width', null);\n    }\n\n    const newWidthList = new Map<HTMLTableCellElement, number>();\n    currentCells.forEach(td => {\n        const rect = normalizeRect(td.getBoundingClientRect());\n\n        if (rect) {\n            td.style.wordBreak = 'break-word';\n            td.style.whiteSpace = 'normal';\n            td.style.boxSizing = 'border-box';\n            const newWidth = getHorizontalDistance(rect, event.pageX, !isRTL) / zoomScale;\n            newWidthList.set(td, newWidth);\n        }\n    });\n    newWidthList.forEach((newWidth, td) => {\n        td.style.width = `${newWidth}px`;\n    });\n    if (!isShiftPressed) {\n        nextCells.forEach(td => {\n            const width = td.rowSpan > 1 ? 0 : td.getBoundingClientRect().right - initialX;\n            td.style.wordBreak = 'break-word';\n            td.style.whiteSpace = 'normal';\n            td.style.boxSizing = 'border-box';\n            td.style.width = td.rowSpan > 1 ? '' : width / zoomScale - deltaX + 'px';\n        });\n    }\n\n    // To avoid apply format styles when the table is being resizing, the skipApplyFormat is set to true.\n    vTable.writeBack(true /**skipApplyFormat*/);\n    return true;\n}\n\nfunction getHorizontalDistance(rect: Rect, pos: number, toLeft: boolean): number {\n    return toLeft ? pos - rect.left : rect.right - pos;\n}\n\nfunction setHorizontalPosition(context: DragAndDropContext, trigger: HTMLElement) {\n    const { td } = context;\n    const rect = normalizeRect(td.getBoundingClientRect());\n    if (rect) {\n        trigger.style.top = rect.bottom - CELL_RESIZER_WIDTH + 'px';\n        trigger.style.left = rect.left + 'px';\n        trigger.style.width = rect.right - rect.left + 'px';\n        trigger.style.height = CELL_RESIZER_WIDTH + 'px';\n    }\n}\n\nfunction setVerticalPosition(context: DragAndDropContext, trigger: HTMLElement) {\n    const { td, isRTL } = context;\n    const rect = normalizeRect(td.getBoundingClientRect());\n    if (rect) {\n        trigger.style.top = rect.top + 'px';\n        trigger.style.left = (isRTL ? rect.left : rect.right) - CELL_RESIZER_WIDTH + 1 + 'px';\n        trigger.style.width = CELL_RESIZER_WIDTH + 'px';\n        trigger.style.height = rect.bottom - rect.top + 'px';\n    }\n}\n\n/**\n *\n * @param newPos The position to where we want to move the vertical border\n * @returns if the move is allowed, or, if any of the cells on either side of the vertical border is smaller than\n * the minimum width, such move is not allowed\n */\nfunction canResizeColumns(\n    newPos: number,\n    currentCells: HTMLTableCellElement[],\n    nextCells: HTMLTableCellElement[],\n    isRTL: boolean,\n    zoomScale: number\n) {\n    for (let i = 0; i < currentCells.length; i++) {\n        const td = currentCells[i];\n        const rect = normalizeRect(td.getBoundingClientRect());\n        if (rect) {\n            const width = getHorizontalDistance(rect, newPos, !isRTL) / zoomScale;\n            if (width < MIN_CELL_WIDTH) {\n                return false;\n            }\n        }\n    }\n\n    for (let i = 0; i < nextCells.length; i++) {\n        const td = nextCells[i];\n        let width: number = Number.MAX_SAFE_INTEGER;\n        if (td) {\n            const rect = normalizeRect(td.getBoundingClientRect());\n\n            if (rect) {\n                width = getHorizontalDistance(rect, newPos, isRTL) / zoomScale;\n            }\n        }\n\n        if (width < MIN_CELL_WIDTH) {\n            return false;\n        }\n    }\n\n    return true;\n}\n","import createCellResizer from './CellResizer';\nimport createTableInserter from './TableInserter';\nimport createTableResizer from './TableResizer';\nimport createTableSelector from './TableSelector';\nimport { ChangeSource } from 'roosterjs-editor-types';\nimport { disposeTableEditFeature } from './TableEditorFeature';\nimport type TableEditFeature from './TableEditorFeature';\nimport {\n    contains,\n    getComputedStyle,\n    normalizeRect,\n    Position,\n    safeInstanceOf,\n    VTable,\n} from 'roosterjs-editor-dom';\nimport type {\n    IEditor,\n    NodePosition,\n    TableSelection,\n    CreateElementData,\n} from 'roosterjs-editor-types';\n\nconst INSERTER_HOVER_OFFSET = 6;\nconst enum TOP_OR_SIDE {\n    top = 0,\n    side = 1,\n}\n/**\n * @internal\n *\n * A table has 6 hot areas to be resized/edited (take LTR example):\n *\n *   [6]  [                ]\n *       +[      1         ]+--------------------+\n *       |[                ]|                    |\n *      [ ]               [ ]                    |\n *      [ ]               [ ]                    |\n *      [2]               [3]                    |\n *      [ ]               [ ]                    |\n *      [ ][       4       ]|                    |\n *       +------------------+--------------------+\n *       |                  |                    |\n *       |                  |                    |\n *       |                  |                    |\n *       +------------------+--------------------+\n *                                                [5]\n *\n * 1 - Hover area to show insert column button\n * 2 - Hover area to show insert row button\n * 3 - Hover area to show vertical resizing bar\n * 4 - Hover area to show horizontal resizing bar\n * 5 - Hover area to show whole table resize button\n * 6 - Hover area to show whole table selector button\n *\n * When set a different current table or change current TD, we need to update these areas\n */\nexport default class TableEditor {\n    // 1, 2 - Insert a column or a row\n    private horizontalInserter: TableEditFeature | null = null;\n    private verticalInserter: TableEditFeature | null = null;\n\n    // 3, 4 - Resize a column or a row from a cell\n    private horizontalResizer: TableEditFeature | null = null;\n    private verticalResizer: TableEditFeature | null = null;\n\n    // 5 - Resize whole table\n    private tableResizer: TableEditFeature | null = null;\n\n    // 6 - Select whole table\n    private tableSelector: TableEditFeature | null = null;\n\n    private isRTL: boolean;\n    private start: NodePosition | null = null;\n    private end: NodePosition | null = null;\n    private isCurrentlyEditing: boolean;\n\n    constructor(\n        private editor: IEditor,\n        public readonly table: HTMLTableElement,\n        private onChanged: () => void,\n        private onShowHelperElement?: (\n            elementData: CreateElementData,\n            helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector'\n        ) => void,\n        private anchorContainer?: HTMLElement,\n        private contentDiv?: EventTarget | null\n    ) {\n        this.isRTL = getComputedStyle(table, 'direction') == 'rtl';\n        this.setEditorFeatures();\n        this.isCurrentlyEditing = false;\n    }\n\n    dispose() {\n        this.disposeTableResizer();\n        this.disposeCellResizers();\n        this.disposeTableInserter();\n        this.disposeTableSelector();\n    }\n\n    isEditing(): boolean {\n        return this.isCurrentlyEditing;\n    }\n\n    isOwnedElement(node: Node) {\n        return [\n            this.tableResizer,\n            this.tableSelector,\n            this.horizontalInserter,\n            this.verticalInserter,\n            this.horizontalResizer,\n            this.verticalResizer,\n        ]\n            .filter(feature => !!feature?.div)\n            .some(feature => contains(feature?.div, node, true /* treatSameNodeAsContain */));\n    }\n\n    onMouseMove(x: number, y: number) {\n        //Get Cell [0,0]\n        const firstCell = this.table.rows[0]?.cells[0];\n\n        if (!firstCell) {\n            return;\n        }\n\n        const firstCellRect = normalizeRect(firstCell.getBoundingClientRect());\n\n        if (!firstCellRect) {\n            return;\n        }\n\n        // Determine if cursor is on top or side\n        const topOrSide =\n            y <= firstCellRect.top + INSERTER_HOVER_OFFSET\n                ? TOP_OR_SIDE.top\n                : this.isRTL\n                ? x >= firstCellRect.right - INSERTER_HOVER_OFFSET\n                    ? TOP_OR_SIDE.side\n                    : undefined\n                : x <= firstCellRect.left + INSERTER_HOVER_OFFSET\n                ? TOP_OR_SIDE.side\n                : undefined;\n        const topOrSideBinary = topOrSide ? 1 : 0;\n\n        // Get whole table rect\n        const tableRect = normalizeRect(this.table.getBoundingClientRect());\n        // i is row index, j is column index\n        for (let i = 0; i < this.table.rows.length; i++) {\n            const tr = this.table.rows[i];\n            let j = 0;\n            for (; j < tr.cells.length; j++) {\n                const td = tr.cells[j];\n                const tdRect = normalizeRect(td.getBoundingClientRect());\n\n                if (!tdRect || !tableRect) {\n                    continue;\n                }\n\n                // Determine the cell the cursor is in range of\n                // Offset is only used for first row and column\n                const lessThanBottom = y <= tdRect.bottom;\n                const lessThanRight = this.isRTL\n                    ? x <= tdRect.right + INSERTER_HOVER_OFFSET * topOrSideBinary\n                    : x <= tdRect.right;\n                const moreThanLeft = this.isRTL\n                    ? x >= tdRect.left\n                    : x >= tdRect.left - INSERTER_HOVER_OFFSET * topOrSideBinary;\n\n                if (lessThanBottom && lessThanRight && moreThanLeft) {\n                    const isOnLeftOrRight = this.isRTL\n                        ? tdRect.right <= tableRect.right && tdRect.right >= tableRect.right - 1\n                        : tdRect.left >= tableRect.left && tdRect.left <= tableRect.left + 1;\n                    if (i === 0 && topOrSide == TOP_OR_SIDE.top) {\n                        const center = (tdRect.left + tdRect.right) / 2;\n                        const isOnRightHalf = this.isRTL ? x < center : x > center;\n                        this.setInserterTd(\n                            isOnRightHalf ? td : tr.cells[j - 1],\n                            false /*isHorizontal*/\n                        );\n                    } else if (j === 0 && topOrSide == TOP_OR_SIDE.side && isOnLeftOrRight) {\n                        const tdAbove = this.table.rows[i - 1]?.cells[0];\n                        const tdAboveRect = tdAbove\n                            ? normalizeRect(tdAbove.getBoundingClientRect())\n                            : null;\n\n                        const isTdNotAboveMerged = !tdAboveRect\n                            ? null\n                            : this.isRTL\n                            ? tdAboveRect.right === tdRect.right\n                            : tdAboveRect.left === tdRect.left;\n\n                        this.setInserterTd(\n                            y < (tdRect.top + tdRect.bottom) / 2 && isTdNotAboveMerged\n                                ? tdAbove\n                                : td,\n                            true /*isHorizontal*/\n                        );\n                    } else {\n                        this.setInserterTd(null);\n                    }\n\n                    this.setResizingTd(td);\n\n                    //Cell found\n                    break;\n                }\n            }\n\n            if (j < tr.cells.length) {\n                break;\n            }\n        }\n\n        // Create Selector and Resizer\n        this.setEditorFeatures();\n    }\n\n    private setEditorFeatures() {\n        if (!this.tableSelector) {\n            this.tableSelector = createTableSelector(\n                this.table,\n                this.editor,\n                this.onSelect,\n                this.getOnMouseOut,\n                this.onShowHelperElement,\n                this.contentDiv,\n                this.anchorContainer\n            );\n        }\n\n        if (!this.tableResizer) {\n            this.tableResizer = createTableResizer(\n                this.table,\n                this.editor,\n                this.onStartTableResize,\n                this.onFinishEditing,\n                this.onShowHelperElement,\n                this.contentDiv,\n                this.anchorContainer\n            );\n        }\n    }\n\n    private setResizingTd(td: HTMLTableCellElement) {\n        if (this.horizontalResizer && this.horizontalResizer.node != td) {\n            this.disposeCellResizers();\n        }\n\n        if (!this.horizontalResizer && td) {\n            const zoomScale = this.editor.getZoomScale();\n            this.horizontalResizer = createCellResizer(\n                td,\n                zoomScale,\n                this.isRTL,\n                true /*isHorizontal*/,\n                this.onStartCellResize,\n                this.onFinishEditing,\n                this.onShowHelperElement,\n                this.anchorContainer\n            );\n            this.verticalResizer = createCellResizer(\n                td,\n                zoomScale,\n                this.isRTL,\n                false /*isHorizontal*/,\n                this.onStartCellResize,\n                this.onFinishEditing,\n                this.onShowHelperElement,\n                this.anchorContainer\n            );\n        }\n    }\n\n    /**\n     * create or remove TableInserter\n     * @param td td to attach to, set this to null to remove inserters (both horizontal and vertical)\n     */\n    private setInserterTd(td: HTMLTableCellElement | null, isHorizontal?: boolean) {\n        const inserter = isHorizontal ? this.horizontalInserter : this.verticalInserter;\n        if (td === null || (inserter && inserter.node != td)) {\n            this.disposeTableInserter();\n        }\n\n        if (!this.horizontalInserter && !this.verticalInserter && td) {\n            const newInserter = createTableInserter(\n                this.editor,\n                td,\n                this.isRTL,\n                !!isHorizontal,\n                this.onInserted,\n                this.getOnMouseOut,\n                this.onShowHelperElement,\n                this.anchorContainer\n            );\n            if (isHorizontal) {\n                this.horizontalInserter = newInserter;\n            } else {\n                this.verticalInserter = newInserter;\n            }\n        }\n    }\n\n    private disposeTableResizer() {\n        if (this.tableResizer) {\n            disposeTableEditFeature(this.tableResizer);\n            this.tableResizer = null;\n        }\n    }\n\n    private disposeTableInserter() {\n        if (this.horizontalInserter) {\n            disposeTableEditFeature(this.horizontalInserter);\n            this.horizontalInserter = null;\n        }\n        if (this.verticalInserter) {\n            disposeTableEditFeature(this.verticalInserter);\n            this.verticalInserter = null;\n        }\n    }\n\n    private disposeCellResizers() {\n        if (this.horizontalResizer) {\n            disposeTableEditFeature(this.horizontalResizer);\n            this.horizontalResizer = null;\n        }\n        if (this.verticalResizer) {\n            disposeTableEditFeature(this.verticalResizer);\n            this.verticalResizer = null;\n        }\n    }\n\n    private disposeTableSelector() {\n        if (this.tableSelector) {\n            disposeTableEditFeature(this.tableSelector);\n            this.tableSelector = null;\n        }\n    }\n\n    private onFinishEditing = (): false => {\n        this.editor.focus();\n\n        if (this.start && this.end) {\n            this.editor.select(this.start, this.end);\n        }\n\n        this.editor.addUndoSnapshot(() => {}, ChangeSource.Format); // Pass in an empty callback to make sure ContentChangedEvent is triggered\n        this.onChanged();\n        this.isCurrentlyEditing = false;\n\n        return false;\n    };\n\n    private onStartTableResize = () => {\n        this.isCurrentlyEditing = true;\n        this.onStartResize();\n    };\n\n    private onStartCellResize = () => {\n        this.isCurrentlyEditing = true;\n        this.disposeTableResizer();\n        this.onStartResize();\n    };\n\n    private onStartResize() {\n        this.isCurrentlyEditing = true;\n        const range = this.editor.getSelectionRange();\n\n        if (range) {\n            this.start = Position.getStart(range);\n            this.end = Position.getEnd(range);\n        }\n\n        this.editor.addUndoSnapshot();\n    }\n\n    private onInserted = (table: HTMLTableElement) => {\n        this.editor.transformToDarkColor(table);\n        this.disposeTableResizer();\n        this.onFinishEditing();\n    };\n\n    /**\n     * Public only for testing purposes\n     * @param table the table to select\n     */\n    public onSelect = (table: HTMLTableElement) => {\n        this.editor.focus();\n        if (table) {\n            const vTable = new VTable(table);\n            if (vTable.cells) {\n                const rows = vTable.cells.length - 1;\n                let lastCellIndex: number = 0;\n                vTable.cells[rows].forEach((cell, index) => {\n                    lastCellIndex = index;\n                });\n\n                const selection: TableSelection = {\n                    firstCell: {\n                        x: 0,\n                        y: 0,\n                    },\n                    lastCell: {\n                        y: rows,\n                        x: lastCellIndex,\n                    },\n                };\n                this.editor.select(table, selection);\n            }\n        }\n    };\n\n    private getOnMouseOut = (feature: HTMLElement) => {\n        return (ev: MouseEvent) => {\n            if (\n                feature &&\n                ev.relatedTarget != feature &&\n                safeInstanceOf(this.contentDiv, 'HTMLElement') &&\n                safeInstanceOf(ev.relatedTarget, 'HTMLElement') &&\n                !contains(this.contentDiv, ev.relatedTarget, true /* treatSameNodeAsContain */)\n            ) {\n                this.dispose();\n            }\n        };\n    };\n}\n","import type Disposable from '../../../pluginUtils/Disposable';\n\n/**\n * @internal\n */\nexport default interface TableEditFeature {\n    node: Node;\n    div: HTMLDivElement | null;\n    featureHandler: Disposable | null;\n}\n\n/**\n * @internal\n */\nexport function disposeTableEditFeature(resizer: TableEditFeature | null) {\n    if (resizer) {\n        resizer.div?.parentNode?.removeChild(resizer.div);\n        resizer.div = null;\n        resizer.featureHandler?.dispose();\n        resizer.featureHandler = null;\n    }\n}\n","import { createElement, getIntersectedRect, normalizeRect, VTable } from 'roosterjs-editor-dom';\nimport { TableOperation } from 'roosterjs-editor-types';\nimport type Disposable from '../../../pluginUtils/Disposable';\nimport type TableEditFeature from './TableEditorFeature';\nimport type { CreateElementData, IEditor, TableSelection } from 'roosterjs-editor-types';\n\nconst INSERTER_COLOR = '#4A4A4A';\nconst INSERTER_COLOR_DARK_MODE = 'white';\nconst INSERTER_SIDE_LENGTH = 12;\nconst INSERTER_BORDER_SIZE = 1;\n\n/**\n * @internal\n */\nexport default function createTableInserter(\n    editor: IEditor,\n    td: HTMLTableCellElement,\n    isRTL: boolean,\n    isHorizontal: boolean,\n    onInsert: (table: HTMLTableElement) => void,\n    getOnMouseOut: (feature: HTMLElement) => (ev: MouseEvent) => void,\n    onShowHelperElement?: (\n        elementData: CreateElementData,\n        helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector'\n    ) => void,\n    anchorContainer?: HTMLElement\n): TableEditFeature | null {\n    const table = editor.getElementAtCursor('table', td);\n\n    const tdRect = normalizeRect(td.getBoundingClientRect());\n    const viewPort = editor.getVisibleViewport();\n    const tableRect = table && viewPort ? getIntersectedRect([table], [viewPort]) : null;\n\n    // set inserter position\n    if (tdRect && tableRect) {\n        const document = td.ownerDocument;\n        const createElementData = getInsertElementData(\n            isHorizontal,\n            editor.isDarkMode(),\n            isRTL,\n            editor.getDefaultFormat().backgroundColor || 'white'\n        );\n\n        onShowHelperElement?.(createElementData, 'TableInserter');\n\n        const div = createElement(createElementData, document) as HTMLDivElement;\n\n        if (isHorizontal) {\n            // tableRect.left/right is used because the Inserter is always intended to be on the side\n            div.style.left = `${\n                isRTL\n                    ? tableRect.right\n                    : tableRect.left - (INSERTER_SIDE_LENGTH - 1 + 2 * INSERTER_BORDER_SIZE)\n            }px`;\n            div.style.top = `${tdRect.bottom - 8}px`;\n            (div.firstChild as HTMLElement).style.width = `${tableRect.right - tableRect.left}px`;\n        } else {\n            div.style.left = `${isRTL ? tdRect.left - 8 : tdRect.right - 8}px`;\n            // tableRect.top is used because the Inserter is always intended to be on top\n            div.style.top = `${\n                tableRect.top - (INSERTER_SIDE_LENGTH - 1 + 2 * INSERTER_BORDER_SIZE)\n            }px`;\n            (div.firstChild as HTMLElement).style.height = `${tableRect.bottom - tableRect.top}px`;\n        }\n\n        (anchorContainer || document.body).appendChild(div);\n\n        const handler = new TableInsertHandler(\n            div,\n            td,\n            isHorizontal,\n            editor,\n            onInsert,\n            getOnMouseOut\n        );\n\n        return { div, featureHandler: handler, node: td };\n    }\n\n    return null;\n}\n\nclass TableInsertHandler implements Disposable {\n    private onMouseOutEvent: null | ((ev: MouseEvent) => void);\n    constructor(\n        private div: HTMLDivElement,\n        private td: HTMLTableCellElement,\n        private isHorizontal: boolean,\n        private editor: IEditor,\n        private onInsert: (table: HTMLTableElement) => void,\n        getOnMouseOut: (feature: HTMLElement) => (ev: MouseEvent) => void\n    ) {\n        this.div.addEventListener('click', this.insertTd);\n        this.onMouseOutEvent = getOnMouseOut(div);\n        this.div.addEventListener('mouseout', this.onMouseOutEvent);\n    }\n\n    dispose() {\n        this.div.removeEventListener('click', this.insertTd);\n\n        if (this.onMouseOutEvent) {\n            this.div.removeEventListener('mouseout', this.onMouseOutEvent);\n        }\n\n        this.onMouseOutEvent = null;\n    }\n\n    private insertTd = () => {\n        let vtable = new VTable(this.td);\n        if (!this.isHorizontal) {\n            vtable.normalizeTableCellSize(this.editor.getZoomScale());\n\n            // Since adding new column will cause table width to change, we need to remove width properties\n            vtable.table.removeAttribute('width');\n            vtable.table.style.setProperty('width', null);\n        }\n\n        vtable.edit(this.isHorizontal ? TableOperation.InsertBelow : TableOperation.InsertRight);\n        vtable.writeBack();\n\n        this.onInsert(vtable.table);\n\n        // Select newly inserted row or column\n        if (vtable.row != undefined && vtable.col != undefined && vtable.cells) {\n            const inserted: TableSelection = this.isHorizontal\n                ? {\n                      firstCell: { x: 0, y: vtable.row + 1 },\n                      lastCell: { x: vtable.cells[vtable.row].length - 1, y: vtable.row + 1 },\n                  }\n                : {\n                      firstCell: { x: vtable.col + 1, y: 0 },\n                      lastCell: { x: vtable.col + 1, y: vtable.cells.length - 1 },\n                  };\n\n            this.editor.select(vtable.table, inserted);\n        }\n    };\n}\n\nfunction getInsertElementData(\n    isHorizontal: boolean,\n    isDark: boolean,\n    isRTL: boolean,\n    backgroundColor: string\n): CreateElementData {\n    const inserterColor = isDark ? INSERTER_COLOR_DARK_MODE : INSERTER_COLOR;\n    const outerDivStyle = `position: fixed; width: ${INSERTER_SIDE_LENGTH}px; height: ${INSERTER_SIDE_LENGTH}px; font-size: 16px; color: black; line-height: 8px; vertical-align: middle; text-align: center; cursor: pointer; border: solid ${INSERTER_BORDER_SIZE}px ${inserterColor}; border-radius: 50%; background-color: ${backgroundColor}`;\n    const leftOrRight = isRTL ? 'right' : 'left';\n    const childBaseStyles = `position: absolute; box-sizing: border-box; background-color: ${backgroundColor};`;\n    const childInfo: CreateElementData = {\n        tag: 'div',\n        style:\n            childBaseStyles +\n            (isHorizontal\n                ? `${leftOrRight}: 12px; top: 5px; height: 3px; border-top: 1px solid ${inserterColor}; border-bottom: 1px solid ${inserterColor}; border-right: 1px solid ${inserterColor}; border-left: 0px;`\n                : `left: 5px; top: 12px; width: 3px; border-left: 1px solid ${inserterColor}; border-right: 1px solid ${inserterColor}; border-bottom: 1px solid ${inserterColor}; border-top: 0px;`),\n    };\n\n    return {\n        tag: 'div',\n        style: outerDivStyle,\n        children: [childInfo, '+'],\n    };\n}\n","import DragAndDropHelper from '../../../pluginUtils/DragAndDropHelper';\nimport type TableEditFeature from './TableEditorFeature';\nimport type { CreateElementData, IEditor, Rect } from 'roosterjs-editor-types';\nimport {\n    createElement,\n    getComputedStyle,\n    normalizeRect,\n    safeInstanceOf,\n    VTable,\n} from 'roosterjs-editor-dom';\n\nconst TABLE_RESIZER_LENGTH = 12;\nconst MIN_CELL_WIDTH = 30;\nconst MIN_CELL_HEIGHT = 20;\n\n/**\n * @internal\n */\nexport default function createTableResizer(\n    table: HTMLTableElement,\n    editor: IEditor,\n    onStart: () => void,\n    onEnd: () => false,\n    onShowHelperElement?: (\n        elementData: CreateElementData,\n        helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector'\n    ) => void,\n    contentDiv?: EventTarget | null,\n    anchorContainer?: HTMLElement\n): TableEditFeature | null {\n    const rect = normalizeRect(table.getBoundingClientRect());\n\n    if (!isTableBottomVisible(editor, rect, contentDiv)) {\n        return null;\n    }\n\n    const document = table.ownerDocument;\n    const isRTL = getComputedStyle(table, 'direction') == 'rtl';\n    const zoomScale = editor.getZoomScale();\n    const createElementData = {\n        tag: 'div',\n        style: `position: fixed; cursor: ${\n            isRTL ? 'ne' : 'nw'\n        }-resize; user-select: none; border: 1px solid #808080`,\n    };\n\n    onShowHelperElement?.(createElementData, 'TableResizer');\n\n    const div = createElement(createElementData, document) as HTMLDivElement;\n\n    div.style.width = `${TABLE_RESIZER_LENGTH}px`;\n    div.style.height = `${TABLE_RESIZER_LENGTH}px`;\n\n    (anchorContainer || document.body).appendChild(div);\n\n    const context: DragAndDropContext = {\n        isRTL,\n        table,\n        zoomScale,\n        onStart,\n        onEnd,\n        div,\n        editor,\n        contentDiv,\n    };\n\n    setDivPosition(context, div);\n\n    const featureHandler = new DragAndDropHelper<DragAndDropContext, DragAndDropInitValue>(\n        div,\n        context,\n        hideResizer, // Resizer is hidden while dragging only\n        {\n            onDragStart,\n            onDragging,\n            onDragEnd,\n        },\n        zoomScale\n    );\n\n    return { node: table, div, featureHandler };\n}\n\ninterface DragAndDropContext {\n    table: HTMLTableElement;\n    isRTL: boolean;\n    zoomScale: number;\n    onStart: () => void;\n    onEnd: () => false;\n    div: HTMLDivElement;\n    editor: IEditor;\n    contentDiv?: EventTarget | null;\n}\n\ninterface DragAndDropInitValue {\n    originalRect: DOMRect;\n    vTable: VTable;\n}\n\nfunction onDragStart(context: DragAndDropContext) {\n    context.onStart();\n\n    return {\n        originalRect: context.table.getBoundingClientRect(),\n        vTable: new VTable(context.table, true /*normalizeTable*/, context.zoomScale),\n    };\n}\n\nfunction onDragging(\n    context: DragAndDropContext,\n    event: MouseEvent,\n    initValue: DragAndDropInitValue,\n    deltaX: number,\n    deltaY: number\n) {\n    const { isRTL, zoomScale } = context;\n    const { originalRect, vTable } = initValue;\n    const ratioX = 1.0 + (deltaX / originalRect.width) * zoomScale * (isRTL ? -1 : 1);\n    const ratioY = 1.0 + (deltaY / originalRect.height) * zoomScale;\n    const shouldResizeX = Math.abs(ratioX - 1.0) > 1e-3;\n    const shouldResizeY = Math.abs(ratioY - 1.0) > 1e-3;\n\n    if (vTable.cells && (shouldResizeX || shouldResizeY)) {\n        for (let i = 0; i < vTable.cells.length; i++) {\n            for (let j = 0; j < vTable.cells[i].length; j++) {\n                const cell = vTable.cells[i][j];\n                if (cell.td) {\n                    if (shouldResizeX) {\n                        // the width of some external table is fixed, we need to make it resizable\n                        vTable.table.style.setProperty('width', null);\n                        const newWidth = ((cell.width ?? 0) * ratioX) / zoomScale;\n                        cell.td.style.boxSizing = 'border-box';\n                        if (newWidth >= MIN_CELL_WIDTH) {\n                            cell.td.style.wordBreak = 'break-word';\n                            cell.td.style.whiteSpace = 'normal';\n                            cell.td.style.width = `${newWidth}px`;\n                        }\n                    }\n\n                    if (shouldResizeY) {\n                        // the height of some external table is fixed, we need to make it resizable\n                        vTable.table.style.setProperty('height', null);\n                        if (j == 0) {\n                            const newHeight = ((cell.height ?? 0) * ratioY) / zoomScale;\n                            if (newHeight >= MIN_CELL_HEIGHT) {\n                                cell.td.style.height = `${newHeight}px`;\n                            }\n                        } else {\n                            cell.td.style.setProperty('height', null);\n                        }\n                    }\n                }\n            }\n        }\n\n        // To avoid apply format styles when the table is being resizing, the skipApplyFormat is set to true.\n        vTable.writeBack(true /**skipApplyFormat*/);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction onDragEnd(\n    context: DragAndDropContext,\n    event: MouseEvent,\n    initValue: DragAndDropInitValue | undefined\n) {\n    if (\n        isTableBottomVisible(\n            context.editor,\n            normalizeRect(context.table.getBoundingClientRect()),\n            context.contentDiv\n        )\n    ) {\n        context.div.style.visibility = 'visible';\n        setDivPosition(context, context.div);\n    }\n    context.onEnd();\n    return false;\n}\n\nfunction setDivPosition(context: DragAndDropContext, trigger: HTMLElement) {\n    const { table, isRTL } = context;\n    const rect = normalizeRect(table.getBoundingClientRect());\n\n    if (rect) {\n        trigger.style.top = `${rect.bottom}px`;\n        trigger.style.left = isRTL\n            ? `${rect.left - TABLE_RESIZER_LENGTH - 2}px`\n            : `${rect.right}px`;\n    }\n}\n\nfunction hideResizer(context: DragAndDropContext, trigger: HTMLElement) {\n    trigger.style.visibility = 'hidden';\n}\n\nfunction isTableBottomVisible(\n    editor: IEditor,\n    rect: Rect | null,\n    contentDiv?: EventTarget | null\n): boolean {\n    const visibleViewport = editor.getVisibleViewport();\n    if (contentDiv && safeInstanceOf(contentDiv, 'HTMLElement') && visibleViewport && rect) {\n        const containerRect = normalizeRect(contentDiv.getBoundingClientRect());\n\n        return (\n            !!containerRect &&\n            containerRect.bottom >= rect.bottom &&\n            visibleViewport.bottom >= rect.bottom\n        );\n    }\n\n    return true;\n}\n","import DragAndDropHelper from '../../../pluginUtils/DragAndDropHelper';\nimport type DragAndDropHandler from '../../../pluginUtils/DragAndDropHandler';\nimport type TableEditorFeature from './TableEditorFeature';\nimport type { CreateElementData, IEditor, Rect } from 'roosterjs-editor-types';\nimport {\n    createElement,\n    normalizeRect,\n    safeInstanceOf,\n    getComputedStyle,\n} from 'roosterjs-editor-dom';\n\nconst TABLE_SELECTOR_LENGTH = 12;\nconst TABLE_SELECTOR_ID = '_Table_Selector';\n\n/**\n * @internal\n */\nexport default function createTableSelector(\n    table: HTMLTableElement,\n    editor: IEditor,\n    onFinishDragging: (table: HTMLTableElement) => void,\n    getOnMouseOut: (feature: HTMLElement) => (ev: MouseEvent) => void,\n    onShowHelperElement?: (\n        elementData: CreateElementData,\n        helperType: 'CellResizer' | 'TableInserter' | 'TableResizer' | 'TableSelector'\n    ) => void,\n    contentDiv?: EventTarget | null,\n    anchorContainer?: HTMLElement\n): TableEditorFeature | null {\n    const rect = normalizeRect(table.getBoundingClientRect());\n\n    if (!isTableTopVisible(editor, rect, contentDiv)) {\n        return null;\n    }\n\n    const zoomScale = editor.getZoomScale();\n    const document = table.ownerDocument;\n    const createElementData = {\n        tag: 'div',\n        style: 'position: fixed; cursor: all-scroll; user-select: none; border: 1px solid #808080',\n    };\n\n    onShowHelperElement?.(createElementData, 'TableSelector');\n\n    const div = createElement(createElementData, document) as HTMLDivElement;\n\n    div.id = TABLE_SELECTOR_ID;\n    div.style.width = `${TABLE_SELECTOR_LENGTH}px`;\n    div.style.height = `${TABLE_SELECTOR_LENGTH}px`;\n\n    (anchorContainer || document.body).appendChild(div);\n\n    const context: TableSelectorContext = {\n        table,\n        zoomScale,\n        rect,\n        isRTL: getComputedStyle(table, 'direction') == 'rtl',\n    };\n\n    setDivPosition(context, div);\n\n    const onDragEnd = (context: TableSelectorContext, event: MouseEvent): false => {\n        if (event.target == div) {\n            onFinishDragging(context.table);\n        }\n        return false;\n    };\n\n    const featureHandler = new TableSelectorFeature(\n        div,\n        context,\n        setDivPosition,\n        {\n            onDragEnd,\n        },\n        context.zoomScale,\n        getOnMouseOut\n    );\n\n    return { div, featureHandler, node: table };\n}\n\ninterface TableSelectorContext {\n    table: HTMLTableElement;\n    zoomScale: number;\n    rect: Rect | null;\n    isRTL: boolean;\n}\n\ninterface TableSelectorInitValue {\n    event: MouseEvent;\n}\n\nclass TableSelectorFeature extends DragAndDropHelper<TableSelectorContext, TableSelectorInitValue> {\n    private onMouseOut: ((ev: MouseEvent) => void) | null;\n\n    constructor(\n        private div: HTMLElement,\n        context: TableSelectorContext,\n        onSubmit: (\n            context: TableSelectorContext,\n            trigger: HTMLElement,\n            container?: HTMLElement\n        ) => void,\n        handler: DragAndDropHandler<TableSelectorContext, TableSelectorInitValue>,\n        zoomScale: number,\n        getOnMouseOut: (feature: HTMLElement) => (ev: MouseEvent) => void,\n        forceMobile?: boolean | undefined,\n        container?: HTMLElement\n    ) {\n        super(div, context, onSubmit, handler, zoomScale, forceMobile);\n        this.onMouseOut = getOnMouseOut(div);\n        div.addEventListener('mouseout', this.onMouseOut);\n    }\n\n    dispose(): void {\n        super.dispose();\n        if (this.onMouseOut) {\n            this.div.removeEventListener('mouseout', this.onMouseOut);\n        }\n        this.onMouseOut = null;\n    }\n}\n\nfunction setDivPosition(context: TableSelectorContext, trigger: HTMLElement) {\n    const { rect } = context;\n    if (rect) {\n        trigger.style.top = `${rect.top - TABLE_SELECTOR_LENGTH}px`;\n        trigger.style.left = `${rect.left - TABLE_SELECTOR_LENGTH - 2}px`;\n    }\n}\n\nfunction isTableTopVisible(\n    editor: IEditor,\n    rect: Rect | null,\n    contentDiv?: EventTarget | null\n): boolean {\n    const visibleViewport = editor.getVisibleViewport();\n    if (contentDiv && safeInstanceOf(contentDiv, 'HTMLElement') && visibleViewport && rect) {\n        const containerRect = normalizeRect(contentDiv.getBoundingClientRect());\n\n        return !!containerRect && containerRect.top <= rect.top && visibleViewport.top <= rect.top;\n    }\n\n    return true;\n}\n","export { default as TableResize } from './TableResize';\n","import { applyFormat, getEntitySelector, getTagOfNode } from 'roosterjs-editor-dom';\nimport { ContentPosition, EntityOperation, PluginEventType } from 'roosterjs-editor-types';\nimport { insertEntity } from 'roosterjs-editor-api';\nimport type {\n    DefaultFormat,\n    EditorPlugin,\n    Entity,\n    IEditor,\n    PluginEvent,\n} from 'roosterjs-editor-types';\n\nconst ENTITY_TYPE = 'WATERMARK_WRAPPER';\n\n/**\n * A watermark plugin to manage watermark string for roosterjs\n */\nexport default class Watermark implements EditorPlugin {\n    private editor: IEditor | null = null;\n    private disposer: (() => void) | null = null;\n    private format: DefaultFormat;\n\n    /**\n     * Create an instance of Watermark plugin\n     * @param watermark The watermark string\n     */\n    constructor(private watermark: string, format?: DefaultFormat, private customClass?: string) {\n        this.format = format || {\n            fontSize: '14px',\n            textColors: {\n                lightModeColor: '#AAAAAA',\n                darkModeColor: '#6B6B6B',\n            },\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Watermark';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.disposer = this.editor.addDomEventHandler({\n            focus: this.showHideWatermark,\n            blur: this.showHideWatermark,\n        });\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (\n            event.eventType == PluginEventType.EditorReady ||\n            (event.eventType == PluginEventType.ContentChanged &&\n                (<Entity>event.data)?.type != ENTITY_TYPE)\n        ) {\n            this.showHideWatermark();\n        } else if (\n            event.eventType == PluginEventType.EntityOperation &&\n            event.entity.type == ENTITY_TYPE &&\n            this.editor\n        ) {\n            const {\n                operation,\n                entity: { wrapper },\n            } = event;\n            if (operation == EntityOperation.ReplaceTemporaryContent) {\n                this.removeWatermark(wrapper);\n            } else if (event.operation == EntityOperation.NewEntity) {\n                applyFormat(\n                    wrapper,\n                    this.format,\n                    this.editor.isDarkMode(),\n                    this.editor.getDarkColorHandler()\n                );\n                wrapper.spellcheck = false;\n            }\n        }\n    }\n\n    private showHideWatermark = () => {\n        if (!this.editor) {\n            return;\n        }\n        const hasFocus = this.editor.hasFocus();\n        const watermarks = this.editor.queryElements(getEntitySelector(ENTITY_TYPE));\n        const isShowing = watermarks.length > 0;\n\n        if (hasFocus && isShowing) {\n            watermarks.forEach(this.removeWatermark);\n            this.editor.focus();\n        } else if (!hasFocus && !isShowing && this.editor.isEmpty()) {\n            const newEntity = insertEntity(\n                this.editor,\n                ENTITY_TYPE,\n                this.editor.getDocument().createTextNode(this.watermark),\n                false /*isBlock*/,\n                false /*isReadonly*/,\n                ContentPosition.Begin\n            );\n            if (this.customClass) {\n                newEntity.wrapper.classList.add(this.customClass);\n            }\n        }\n    };\n\n    private removeWatermark = (wrapper: HTMLElement) => {\n        const parentNode = wrapper.parentNode;\n        parentNode?.removeChild(wrapper);\n\n        // After remove watermark node, if it leaves an empty DIV, append a BR node into it to make it a regular empty line\n        if (\n            parentNode &&\n            this.editor?.contains(parentNode) &&\n            getTagOfNode(parentNode) == 'DIV' &&\n            !parentNode.firstChild\n        ) {\n            parentNode.appendChild(this.editor.getDocument().createElement('BR'));\n        }\n    };\n}\n","export { default as Watermark } from './Watermark';\n","export * from 'roosterjs-editor-types/lib/compatibleTypes';\n","/**\r\n * enum for setting block alignment, used by setAlignment API\r\n */\r\nexport enum CompatibleAlignment {\r\n\r\n    /**\r\n     * Align left\r\n     */\r\n    Left,\r\n\r\n    /**\r\n     * Align center\r\n     */\r\n    Center,\r\n\r\n    /**\r\n     * Align right\r\n     */\r\n    Right,\r\n}\r\n","/**\n *  Enum used to control the different types of bullet list\n */\r\nexport enum CompatibleBulletListType {\r\n\n    /**\n     * Minimum value of the enum\n     */\n    Min = 1,\n\n    /**\n     * Bullet triggered by *\n     */\n    Disc = 1,\n\n    /**\n     * Bullet triggered by -\n     */\n    Dash = 2,\n\n    /**\n     * Bullet triggered by --\n     */\n    Square = 3,\n\n    /**\n     * Bullet triggered by >\n     */\n    ShortArrow = 4,\n\n    /**\n     * Bullet triggered by ->\n     */\n    LongArrow = 5,\n\n    /**\n     * Bullet triggered by =>\n     */\n    UnfilledArrow = 6,\n\n    /**\n     * Bullet triggered by —\n     */\n    Hyphen = 7,\n\n    /**\n     * Bullet triggered by -->\n     */\n    DoubleLongArrow = 8,\n\n    /**\n     * Bullet type circle\n     */\n    Circle = 9,\n\n    /**\n     * Maximum value of the enum\n     */\n    Max = 9,\n}\r\n","/**\n * The enum used for controlling the capitalization of text.\n * Used by changeCapitalization API\n */\r\nexport enum CompatibleCapitalization {\r\n\n    /**\n     * Transforms the first character after punctuation mark followed by space\n     * to uppercase and the rest of characters to lowercase.\n     */\n    Sentence = 'sentence',\n\n    /**\n     * Transforms all characters to lowercase\n     */\n    Lowercase = 'lowercase',\n\n    /**\n     * Transforms all characters to uppercase\n     */\n    Uppercase = 'uppercase',\n\n    /**\n     * Transforms the first character of each word to uppercase\n     */\n    CapitalizeEachWord = 'capitalize',\n}\r\n","/**\r\n * Possible change sources. Here are the predefined sources.\r\n * It can also be other string if the change source can't fall into these sources.\r\n */\r\nexport enum CompatibleChangeSource {\r\n\r\n    /**\r\n     * Content changed by auto link\r\n     */\r\n    AutoLink = 'AutoLink',\r\n\r\n    /**\r\n     * Content changed by create link\r\n     */\r\n    CreateLink = 'CreateLink',\r\n\r\n    /**\r\n     * Content changed by format\r\n     */\r\n    Format = 'Format',\r\n\r\n    /**\r\n     * Content changed by image resize\r\n     */\r\n    ImageResize = 'ImageResize',\r\n\r\n    /**\r\n     * Content changed by paste\r\n     */\r\n    Paste = 'Paste',\r\n\r\n    /**\r\n     * Content changed by setContent API\r\n     */\r\n    SetContent = 'SetContent',\r\n\r\n    /**\r\n     * Content changed by cut operation\r\n     */\r\n    Cut = 'Cut',\r\n\r\n    /**\r\n     * Content changed by drag & drop operation\r\n     */\r\n    Drop = 'Drop',\r\n\r\n    /**\r\n     * Insert a new entity into editor\r\n     */\r\n    InsertEntity = 'InsertEntity',\r\n\r\n    /**\r\n     * Editor is switched to dark mode, content color is changed\r\n     */\r\n    SwitchToDarkMode = 'SwitchToDarkMode',\r\n\r\n    /**\r\n     * Editor is switched to light mode, content color is changed\r\n     */\r\n    SwitchToLightMode = 'SwitchToLightMode',\r\n\r\n    /**\r\n     * List chain reorganized numbers of lists\r\n     */\r\n    ListChain = 'ListChain',\r\n\r\n    /**\r\n     * Keyboard event, used by Content Model.\r\n     * Data of this event will be the key code number\r\n     */\r\n    Keyboard = 'Keyboard',\r\n}\r\n","/**\n * Represents the strategy to clear the format of the current editor selection\n */\r\nexport enum CompatibleClearFormatMode {\r\n\n    /**\n     * Inline format. Remove text format.\n     */\n    Inline,\n\n    /**\n     * BLock format. Remove text and structure format of the block.\n     */\n    Block,\n\n    /**\n     * Detect Inline or Block format based on the current editor selector.\n     */\n    AutoDetect,\n}\r\n","/**\n * Represents the mode of color transformation\n */\r\nexport enum CompatibleColorTransformDirection {\r\n\n    /**\n     * Transform from light to dark\n     */\n    LightToDark = 0,\n\n    /**\n     * Transform from dark to light\n     */\n    DarkToLight = 1,\n}\r\n","/**\r\n * The position. Mostly used for content insertion and traversing\r\n * On insertion, we will need to specify where we want the content to be placed (begin, end, selection or outside)\r\n * On content traversing, we will need to specify the start position of traversing\r\n */\r\nexport enum CompatibleContentPosition {\r\n\r\n    /**\r\n     * Begin of the container\r\n     */\r\n    Begin,\r\n\r\n    /**\r\n     * End of the container\r\n     */\r\n    End,\r\n\r\n    /**\r\n     * End of the content div domain.\r\n     */\r\n    DomEnd,\r\n\r\n    /**\r\n     * Selection start\r\n     */\r\n    SelectionStart,\r\n\r\n    /**\r\n     * Outside of editor\r\n     */\r\n    Outside,\r\n\r\n    /**\r\n     * Manually defined range\r\n     */\r\n    Range,\r\n}\r\n","/**\n * Prefix of content types\n */\r\nexport enum CompatibleContentTypePrefix {\r\n\n    /**\n     * Text type prefix\n     */\n    Text = 'text/',\n\n    /**\n     * Image type prefix\n     */\n    Image = 'image/',\n}\r\n\r\n\n/**\n * Known content types\n */\r\nexport enum CompatibleContentType {\r\n\n    /**\n     * Plain text content type\n     */\n    PlainText = 'text/plain',\n\n    /**\n     * HTML content type\n     */\n    HTML = 'text/html',\n}\r\n","/**\n * @deprecated\n * Constants string for dataset names used by dark mode\n */\r\nexport enum CompatibleDarkModeDatasetNames {\r\n\n    /**\n     * Original style text color\n     */\n    OriginalStyleColor = 'ogsc',\n\n    /**\n     * Original style background color\n     */\n    OriginalStyleBackgroundColor = 'ogsb',\n\n    /**\n     * Original attribute text color\n     */\n    OriginalAttributeColor = 'ogac',\n\n    /**\n     * Original attribute background color\n     */\n    OriginalAttributeBackgroundColor = 'ogab',\n}\r\n","/**\n * Types of definitions, used by Definition type\n */\r\nexport enum CompatibleDefinitionType {\r\n\n    /**\n     * Boolean type definition, represents a boolean type value\n     */\n    Boolean,\n\n    /**\n     * Number type definition, represents a number type value\n     */\n    Number,\n\n    /**\n     * String type definition, represents a string type value\n     */\n    String,\n\n    /**\n     * Array type definition, represents an array with a given item type\n     */\n    Array,\n\n    /**\n     * Object type definition, represents an object with the given property types\n     */\n    Object,\n\n    /**\n     * Customize type definition, represents a customized type with a validator function\n     */\n    Customize,\n}\r\n","/**\n * Class names for Delimiter\n */\r\nexport enum CompatibleDelimiterClasses {\r\n\n    /**\n     * Class name to specify this delimiter is before an entity\n     */\n    DELIMITER_BEFORE = 'entityDelimiterBefore',\n\n    /**\n     *  Class name to specify this delimiter is after an entity\n     */\n    DELIMITER_AFTER = 'entityDelimiterAfter',\n}\r\n","/**\r\n * enum for setting block direction, used by setDirection API\r\n */\r\nexport enum CompatibleDirection {\r\n\r\n    /**\r\n     * Left to right\r\n     */\r\n    LeftToRight,\r\n\r\n    /**\r\n     * Right to left\r\n     */\r\n    RightToLeft,\r\n}\r\n","/**\n * Command strings for Document.execCommand() API\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\n */\r\nexport enum CompatibleDocumentCommand {\r\n\n    /**\n     * Changes the browser auto-link behavior (Internet Explorer only)\n     */\n    AutoUrlDetect = 'AutoUrlDetect',\n\n    /**\n     * Changes the document background color. In styleWithCss mode, it affects the background color of the containing block instead.\n     * This requires a &lt;color&gt; value string to be passed in as a value argument. Note that Internet Explorer uses this to set the\n     * text background color.\n     */\n    BackColor = 'backColor',\n\n    /**\n     * Toggles bold on/off for the selection or at the insertion point. Internet Explorer uses the &lt;strong&gt; tag instead of &lt;b&gt;.\n     */\n    Bold = 'bold',\n\n    /**\n     * Clears all authentication credentials from the cache.\n     */\n    ClearAuthenticationCache = 'ClearAuthenticationCache',\n\n    /**\n     * Makes the content document either read-only or editable. This requires a boolean true/false as the value argument.\n     * (Not supported by Internet Explorer.)\n     */\n    ContentReadOnly = 'contentReadOnly',\n\n    /**\n     * Copies the current selection to the clipboard. Conditions of having this behavior enabled vary from one browser to another,\n     * and have evolved over time. Check the compatibility table to determine if you can use it in your case.\n     */\n    Copy = 'copy',\n\n    /**\n     * Creates an hyperlink from the selection, but only if there is a selection. Requires a URI string as a value argument for the\n     * hyperlink's href. The URI must contain at least a single character, which may be whitespace.\n     * (Internet Explorer will create a link with a null value.)\n     */\n    CreateLink = 'createLink',\n\n    /**\n     * Removes the current selection and copies it to the clipboard. When this behavior is enabled varies between browsers,\n     * and its conditions have evolved over time. Check the compatibility table for usage details.\n     */\n    Cut = 'cut',\n\n    /**\n     * Adds a &lt;small&gt; tag around the selection or at the insertion point. (Not supported by Internet Explorer.)\n     */\n    DecreaseFontSize = 'decreaseFontSize',\n\n    /**\n     * Changes the paragraph separator used when new paragraphs are created in editable text regions. See Differences in markup\n     * generation for more details.\n     */\n    DefaultParagraphSeparator = 'defaultParagraphSeparator',\n\n    /**\n     * Deletes the current selection.\n     */\n    Delete = 'delete',\n\n    /**\n     * Enables or disables the table row/column insertion and deletion controls. (Not supported by Internet Explorer.)\n     */\n    EnableInlineTableEditing = 'enableInlineTableEditing',\n\n    /**\n     * Enables or disables the resize handles on images and other resizable objects. (Not supported by Internet Explorer.)\n     */\n    EnableObjectResizing = 'enableObjectResizing',\n\n    /**\n     * Changes the font name for the selection or at the insertion point. This requires a font name string (like \"Arial\")\n     * as a value argument.\n     */\n    FontName = 'fontName',\n\n    /**\n     * Changes the font size for the selection or at the insertion point. This requires an integer from 1-7 as a value argument.\n     */\n    FontSize = 'fontSize',\n\n    /**\n     * Changes a font color for the selection or at the insertion point. This requires a hexadecimal color value string\n     * as a value argument.\n     */\n    ForeColor = 'foreColor',\n\n    /**\n     * Adds an HTML block-level element around the line containing the current selection, replacing the block element containing\n     * the line if one exists (in Firefox, &lt;blockquote&gt; is the exception — it will wrap any containing block element).\n     * Requires a tag-name string as a value argument. Virtually all block-level elements can be used.\n     * (Internet Explorer supports only heading tags H1–H6, ADDRESS, and PRE, which must be wrapped in angle brackets, such as \"&lt;H1&gt;\".)\n     */\n    FormatBlock = 'formatBlock',\n\n    /**\n     * Deletes the character ahead of the cursor's position, identical to hitting the Delete key on a Windows keyboard.\n     */\n    ForwardDelete = 'forwardDelete',\n\n    /**\n     * Adds a heading element around a selection or insertion point line. Requires the tag-name strings a value argument (i.e. \"H1\", \"H6\").\n     * (Not supported by Internet Explorer and Safari.)\n     */\n    Heading = 'heading',\n\n    /**\n     * Changes the background color for the selection or at the insertion point. Requires a color value string as a value argument.\n     * useCSS must be true for this to function. (Not supported by Internet Explorer.)\n     */\n    HiliteColor = 'hiliteColor',\n\n    /**\n     * Adds a &lt;big&gt; tag around the selection or at the insertion point. (Not supported by Internet Explorer.)\n     */\n    IncreaseFontSize = 'increaseFontSize',\n\n    /**\n     * Indents the line containing the selection or insertion point. In Firefox, if the selection spans multiple lines at different\n     * levels of indentation, only the least indented lines in the selection will be indented.\n     */\n    Indent = 'indent',\n\n    /**\n     * Controls whether the Enter key inserts a &lt;br&gt; element, or splits the current block element into two.\n     * (Not supported by Internet Explorer.)\n     */\n    InsertBrOnReturn = 'insertBrOnReturn',\n\n    /**\n     * Inserts a &lt;hr&gt; element at the insertion point, or replaces the selection with it.\n     */\n    InsertHorizontalRule = 'insertHorizontalRule',\n\n    /**\n     * Inserts an HTML string at the insertion point (deletes selection). Requires a valid HTML string as a value argument.\n     * (Not supported by Internet Explorer.)\n     */\n    InsertHTML = 'insertHTML',\n\n    /**\n     * Inserts an image at the insertion point (deletes selection). Requires a URL string for the image's src as a value argument.\n     * The requirements for this string are the same as createLink.\n     */\n    InsertImage = 'insertImage',\n\n    /**\n     * Creates a numbered ordered list for the selection or at the insertion point.\n     */\n    InsertOrderedList = 'insertOrderedList',\n\n    /**\n     * Creates a bulleted unordered list for the selection or at the insertion point.\n     */\n    InsertUnorderedList = 'insertUnorderedList',\n\n    /**\n     * Inserts a paragraph around the selection or the current line.\n     * (Internet Explorer inserts a paragraph at the insertion point and deletes the selection.)\n     */\n    InsertParagraph = 'insertParagraph',\n\n    /**\n     * Inserts the given plain text at the insertion point (deletes selection).\n     */\n    InsertText = 'insertText',\n\n    /**\n     * Toggles italics on/off for the selection or at the insertion point.\n     * (Internet Explorer uses the &lt;em&gt; element instead of &lt;i&gt;.)\n     */\n    Italic = 'italic',\n\n    /**\n     * Centers the selection or insertion point.\n     */\n    JustifyCenter = 'justifyCenter',\n\n    /**\n     * Justifies the selection or insertion point.\n     */\n    JustifyFull = 'justifyFull',\n\n    /**\n     * Justifies the selection or insertion point to the left.\n     */\n    JustifyLeft = 'justifyLeft',\n\n    /**\n     * Right-justifies the selection or the insertion point.\n     */\n    JustifyRight = 'justifyRight',\n\n    /**\n     * Outdents the line containing the selection or insertion point.\n     */\n    Outdent = 'outdent',\n\n    /**\n     * Pastes the clipboard contents at the insertion point (replaces current selection). Disabled for web content. See [1].\n     */\n    Paste = 'paste',\n\n    /**\n     * Redoes the previous undo command.\n     */\n    Redo = 'redo',\n\n    /**\n     * Removes all formatting from the current selection.\n     */\n    RemoveFormat = 'removeFormat',\n\n    /**\n     * Selects all of the content of the editable region.\n     */\n    SelectAll = 'selectAll',\n\n    /**\n     * Toggles strikethrough on/off for the selection or at the insertion point.\n     */\n    StrikeThrough = 'strikeThrough',\n\n    /**\n     * Toggles subscript on/off for the selection or at the insertion point.\n     */\n    Subscript = 'subscript',\n\n    /**\n     * Toggles superscript on/off for the selection or at the insertion point.\n     */\n    Superscript = 'superscript',\n\n    /**\n     * Toggles underline on/off for the selection or at the insertion point.\n     */\n    Underline = 'underline',\n\n    /**\n     * Undoes the last executed command.\n     */\n    Undo = 'undo',\n\n    /**\n     * Removes the anchor element from a selected hyperlink.\n     */\n    Unlink = 'unlink',\n\n    /**\n     * Replaces the useCSS command. true modifies/generates style attributes in markup, false generates presentational elements.\n     */\n    StyleWithCSS = 'styleWithCSS',\n}\r\n","/**\n * The is essentially an enum representing result from browser compareDocumentPosition API\n * https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n */\r\nexport enum CompatibleDocumentPosition {\r\n\n    /**\n     * Same node\n     */\n    Same = 0,\n\n    /**\n     * Node is disconnected from document\n     */\n    Disconnected = 1,\n\n    /**\n     * Node is preceding the comparing node\n     */\n    Preceding = 2,\n\n    /**\n     * Node is following the comparing node\n     */\n    Following = 4,\n\n    /**\n     * Node contains the comparing node\n     */\n    Contains = 8,\n\n    /**\n     * Node is contained by the comparing node\n     */\n    ContainedBy = 16,\n}\r\n","/**\n * CSS Class names for Entity\n */\r\nexport enum CompatibleEntityClasses {\r\n\n    /**\n     * Class name to specify this is an entity\n     */\n    ENTITY_INFO_NAME = '_Entity',\n\n    /**\n     * Class name to specify the type of an entity\n     */\n    ENTITY_TYPE_PREFIX = '_EType_',\n\n    /**\n     * Class name to specify the ID of an entity\n     */\n    ENTITY_ID_PREFIX = '_EId_',\n\n    /**\n     * Class name to specify if the entity is readonly\n     */\n    ENTITY_READONLY_PREFIX = '_EReadonly_',\n}\r\n","/**\n * Define possible operations to an entity\n */\r\nexport enum CompatibleEntityOperation {\r\n\n    /**\n     * Notify plugins that there is a new plugin was added into editor.\n     * Plugin can handle this event to entity hydration.\n     * This event will be only fired once for each entity DOM node.\n     * After undo, or copy/paste, since new DOM nodes were added, this event will be fired\n     * for those entities represented by newly added nodes.\n     */\n    NewEntity,\n\n    /**\n     * Notify plugins that user is clicking target to an entity\n     */\n    Click,\n\n    /**\n     * Notify plugins that user is triggering context menu to an entity\n     */\n    ContextMenu,\n\n    /**\n     * Notify plugins that user is escaping from an entity by pressing ESC key\n     */\n    Escape,\n\n    /**\n     * Notify plugins that user is removing an entity from its start position using DELETE key\n     */\n    RemoveFromStart,\n\n    /**\n     * Notify plugins that user is remove an entity from its end position using BACKSPACE key\n     */\n    RemoveFromEnd,\n\n    /**\n     * Notify plugins that an entity is being overwritten.\n     * This can be caused by key in, cut, paste, delete, backspace ... on a selection\n     * which contains some entities.\n     */\n    Overwrite,\n\n    /**\n     * Notify plugins that an entity is being partially overwritten.\n     * This happens when user selected part of the entity then do key press, or cut, paste, delete, backspace, ...\n     */\n    PartialOverwrite,\n\n    /**\n     * Notify plugins that editor is generating HTML content for save.\n     * Plugin should use this event to remove any temporary content, and only leave DOM nodes that\n     * should be saved as HTML string.\n     * This event will provide a cloned DOM tree for each entity, do NOT compare the DOM nodes with cached nodes\n     * because it will always return false.\n     */\n    ReplaceTemporaryContent,\n\n    /**\n     * @deprecated\n     */\n    AddShadowRoot,\n\n    /**\n     * @deprecated\n     */\n    RemoveShadowRoot,\n\n    /**\n     * Notify plugins that a new entity state need to be updated to an entity.\n     * This is normally happened when user undo/redo the content with an entity snapshot added by a plugin that handles entity\n     */\n    UpdateEntityState,\n}\r\n","/**\n * Experimental feature flags\n */\r\nexport enum CompatibleExperimentalFeatures {\r\n\n    // #region Graduated and deprecated features.\n    // These features will be removed in next major release\n    /**\n     * @deprecated This feature is always enabled\n     */\n    NewIndentation = 'NewIndentation',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    NewBullet = 'NewBullet',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    NewNumbering = 'NewNumbering',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    ListChain = 'ListChain',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    MergePastedLine = 'MergePastedLine',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    SingleDirectionResize = 'SingleDirectionResize',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    PasteWithLinkPreview = 'PasteWithLinkPreview',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    ImageRotate = 'ImageRotate',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    ImageCrop = 'ImageCrop',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Check if the element has a style attribute, if not, apply the default format\n     */\n    AlwaysApplyDefaultFormat = 'AlwaysApplyDefaultFormat',\n\n    /**\n     * @deprecated This feature can be enabled/disabled using Paste Plugin contructor param\n     * Paste the Html instead of the Img when the Html Body only have one IMG Child node\n     */\n    ConvertSingleImageBody = 'ConvertSingleImageBody',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Align table elements to left, center and right using setAlignment API\n     */\n    TableAlignment = 'TableAlignment',\n\n    /**\n     * @deprecated this feature is always enabled\n     * Provide a circular resize handles that adaptive the number od handles to the size of the image\n     */\n    AdaptiveHandlesResizer = 'AdaptiveHandlesResizer',\n\n    /**\n     * @deprecated this feature is always disabled\n     * Automatically transform -- into hyphen, if typed between two words.\n     */\n    AutoHyphen = 'AutoHyphen',\n\n    /**\n     * @deprecated this feature is always disabled\n     * Use pending format strategy to do style based format, e.g. Font size, Color.\n     * With this feature enabled, we don't need to insert temp ZeroWidthSpace character to hold pending format\n     * when selection is collapsed. Instead, we will hold the pending format in memory and only apply it when type something\n     */\n    PendingStyleBasedFormat = 'PendingStyleBasedFormat',\n\n    /**\n     * @deprecated this feature is always disabled\n     * Normalize list to make sure it can be displayed correctly in other client\n     * e.g. We will move list items with \"display: block\" into previous list item and change tag to be DIV\n     */\n    NormalizeList = 'NormalizeList',\n\n    /**\n     * @deprecated this feature is always enabled\n     * When a html image is selected, the selected image data will be stored by editor core.\n     */\n    ImageSelection = 'ImageSelection',\n\n    /**\n     * @deprecated this feature is always enabled\n     * Use variable-based dark mode solution rather than dataset-based solution.\n     * When enable this feature, need to pass in a DarkModelHandler object to each call of setColor and applyFormat\n     * if you need them work for dark mode\n     */\n    VariableBasedDarkColor = 'VariableBasedDarkColor',\n\n    /**\n     * @deprecated this feature is always enabled\n     * Align list elements elements to left, center and right using setAlignment API\n     */\n    ListItemAlignment = 'ListItemAlignment',\n\n    /**\n     * @deprecated\n     */\n    DefaultFormatInSpan = 'DefaultFormatInSpan',\n\n    /**\n     * @deprecated\n     */\n    DefaultFormatOnContainer = 'DefaultFormatOnContainer',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Reuse existing DOM structure if possible when convert Content Model back to DOM tree\n     */\n    ReusableContentModel = 'ReusableContentModel',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Handle keyboard editing event with Content Model\n     */\n    EditWithContentModel = 'EditWithContentModel',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Trigger formatting by a especial characters. Ex: (A), 1. i).\n     */\n    AutoFormatList = 'AutoFormatList',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Add entities around a Read Only  Inline entity to prevent cursor to be hidden when cursor is next of it.\n     */\n    InlineEntityReadOnlyDelimiters = 'InlineEntityReadOnlyDelimiters',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Paste with Content model\n     */\n    ContentModelPaste = 'ContentModelPaste',\n\n    //#endregion\n\n    /**\n     * Provide additional Tab Key Features. Requires Text Features Content Editable Features\n     */\n    TabKeyTextFeatures = 'TabKeyTextFeatures',\n\n    /**\n     * With this feature enabled, when writing back a list item we will re-use all\n     * ancestor list elements, even if they don't match the types currently in the\n     * listTypes array for that item. The only list that we will ensure is correct\n     * is the one closest to the item.\n     */\n    ReuseAllAncestorListElements = 'ReuseAllAncestorListElements',\n\n    /**\n     * Delete table with Backspace key with the whole was selected with table selector\n     */\n    DeleteTableWithBackspace = 'DeleteTableWithBackspace',\n\n    /**\n     * Disable list chain functionality\n     */\n    DisableListChain = 'DisableListChain',\n}\r\n","/**\r\n * The enum used for increase or decrease font size\r\n * Used by setFontSize API\r\n */\r\nexport enum CompatibleFontSizeChange {\r\n\r\n    /**\r\n     * Increase font size\r\n     */\r\n    Increase,\r\n\r\n    /**\r\n     * Decrease font size\r\n     */\r\n    Decrease,\r\n}\r\n","/**\n * Represents a mode number to indicate what kind of content to retrieve when call Editor.getContent()\n */\r\nexport enum CompatibleGetContentMode {\r\n\n    /**\n     * The clean content without any temporary content only for editor.\n     * This is the default value. Call to Editor.getContent() with trigger an ExtractContentWithDom event\n     * so that plugins can remove their temporary content, and will return the HTML content\n     * which is ready for save to storage.\n     */\n    CleanHTML = 0,\n\n    /**\n     * Retrieve the raw HTML string in current editor. Temporary content will be included.\n     */\n    RawHTMLOnly = 1,\n\n    /**\n     * Retrieve the raw HTML string in current editor with a selection marker. This can be used for\n     * save current editor state and call to SetContent with this result can fully restore editor state\n     * including current selection\n     */\n    RawHTMLWithSelection = 2,\n\n    /**\n     * Get plain text content only, all format will be ignored\n     */\n    PlainText,\n\n    /**\n     * A fast way to get plain text content, the line-end positions may not be exactly same with HTML content,\n     * but the text content should be the same. This is used for quickly retrieve text content and check\n     * text only\n     */\n    PlainTextFast,\n}\r\n","/**\n * Operation flags for ImageEdit plugin\n */\r\nexport enum CompatibleImageEditOperation {\r\n\n    /**\n     * No operation\n     */\n    None = 0,\n\n    /**\n     * Resize image from corner ( horizontal and vertical resize)\n     */\n    CornerResize = 1,\n\n    /**\n     * Resize image from side ( either horizontal or vertical resize)\n     */\n    SideResize = 2,\n\n    /**\n     * Image resize\n     */\n    Resize = CornerResize | SideResize,\n\n    /**\n     * Image rotate\n     */\n    Rotate = 4,\n\n    /**\n     * Image resize and rotate\n     */\n    ResizeAndRotate = Resize | Rotate,\n\n    /**\n     * Image crop\n     */\n    Crop = 8,\n\n    /**\n     * All operations\n     */\n    All = ResizeAndRotate | Crop,\n}\r\n","/**\r\n * The enum used for increase or decrease indentation of a block\r\n * Used by setIndentation API\r\n */\r\nexport enum CompatibleIndentation {\r\n\r\n    /**\r\n     * Increase indentation\r\n     */\r\n    Increase,\r\n\r\n    /**\r\n     * Decrease indentation\r\n     */\r\n    Decrease,\r\n}\r\n","/**\n * Key numbers common used keys\n */\r\nexport enum CompatibleKeys {\r\n\n    NULL = 0,\n    BACKSPACE = 8,\n    TAB = 9,\n    ENTER = 13,\n    SHIFT = 16,\n    CTRL_LEFT = 17,\n    ALT = 18,\n    ESCAPE = 27,\n    SPACE = 32,\n    PAGEUP = 33,\n    END = 35,\n    HOME = 36,\n    LEFT = 37,\n    UP = 38,\n    RIGHT = 39,\n    DOWN = 40,\n    PRINT_SCREEN = 44,\n    DELETE = 46,\n    /**\n     * @deprecated Just for backward compatibility\n     */\n    EIGHT_ASTIRISK = 56,\n    EIGHT_ASTERISK = 56,\n    B = 66,\n    I = 73,\n    U = 85,\n    Y = 89,\n    Z = 90,\n    META_LEFT = 91,\n    COMMA = 188,\n    DASH_UNDERSCORE = 189,\n    PERIOD = 190,\n    /**\n     * @deprecated Just for backward compatibility\n     */\n    FORWARDSLASH = 191,\n    FORWARD_SLASH = 191,\n    GRAVE_TILDE = 192,\n\n    /**\n     * Keys below are non-standard, and should be used in ContentEditFeatures only\n     */\n    CONTENTCHANGED = 0x101,\n    RANGE = 0x102,\n\n    Ctrl = 0x1000,\n    Meta = 0x2000,\n    Shift = 0x4000,\n}\r\n","/**\n * Known announce strings\n */\r\nexport enum CompatibleKnownAnnounceStrings {\r\n\n    /**\n     * String announced when Indenting or Outdenting a list item in a OL List\n     * @example\n     * Auto corrected, &lcub;0&rcub;\n     * Where &lcub0&rcub is the new list item bullet\n     */\n    AnnounceListItemNumberingIndentation = 1,\n    /**\n     * String announced when Indenting or Outdenting a list item in a UL List\n     * @example\n     * Auto corrected bullet\n     */\n    AnnounceListItemBulletIndentation,\n}\r\n","/**\n * Index of known CreateElementData used by createElement function\n */\r\nexport enum CompatibleKnownCreateElementDataIndex {\r\n\n    /**\n     * Set a none value to help createElement function ignore falsy value\n     */\n    None = 0,\n\n    /**\n     * An empty line without format\n     */\n    EmptyLine = 1,\n\n    /**\n     * Wrapper for blockquote\n     */\n    BlockquoteWrapper = 2,\n\n    /**\n     * Temp DIV for copy/paste\n     */\n    CopyPasteTempDiv = 3,\n\n    /**\n     * ListItem with block style\n     */\n    BlockListItem = 4,\n\n    /**\n     * Wrapper element for context menu\n     */\n    ContextMenuWrapper = 5,\n\n    /**\n     * Wrapper element for image edit\n     */\n    ImageEditWrapper = 6,\n\n    /**\n     * @deprecated\n     */\n    TableHorizontalResizer = 7,\n\n    /**\n     * @deprecated\n     */\n    TableVerticalResizer = 8,\n\n    /**\n     * @deprecated\n     */\n    TableResizerLTR = 9,\n\n    /**\n     * @deprecated\n     */\n    TableResizerRTL = 10,\n\n    /**\n     * @deprecated\n     */\n    TableSelector = 11,\n\n    /**\n     * @deprecated\n     */\n    EmptyLineFormatInSpan = 12,\n}\r\n","/**\n * Represent the types of sources to handle in the Paste Plugin\n */\r\nexport enum CompatibleKnownPasteSourceType {\r\n\n    WordDesktop,\n    ExcelDesktop,\n    ExcelOnline,\n    PowerPointDesktop,\n    GoogleSheets,\n    WacComponents,\n    Default,\n    SingleImage,\n}\r\n","/**\n * Type of list (numbering or bullet)\n */\r\nexport enum CompatibleListType {\r\n\n    /**\n     * None list type\n     * It means this is not a list\n     */\n    None = 0,\n\n    /**\n     * Ordered List type (numbering list)\n     * Represented by \"OL\" tag\n     */\n    Ordered = 1,\n\n    /**\n     * Unordered List type (bullet list)\n     * Represented by \"UL\" tag\n     */\n    Unordered = 2,\n}\r\n","/**\n * The is essentially an enum represents the type of the node\n * https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n * Values not listed here are deprecated.\n */\r\nexport enum CompatibleNodeType {\r\n\n    /**\n     * An Element node such as &lt;p&gt; or &lt;div&gt;.\n     */\n    Element = 1,\n\n    /**\n     * An Attribute node such as name=\"value\".\n     */\n    Attribute = 2,\n\n    /**\n     * The actual Text of Element or Attr.\n     */\n    Text = 3,\n\n    /**\n     * A ProcessingInstruction of an XML document such as &lt;?xml-stylesheet ... ?&gt; declaration.\n     */\n    ProcessingInstruction = 7,\n\n    /**\n     * A Comment node.\n     */\n    Comment = 8,\n\n    /**\n     * A Document node.\n     */\n    Document = 9,\n\n    /**\n     * A DocumentType node e.g. &lt;!DOCTYPE html&gt; for HTML5 documents.\n     */\n    DocumentType = 10,\n\n    /**\n     * A DocumentFragment node.\n     */\n    DocumentFragment = 11,\n}\r\n","/**\n *  Enum used to control the different types of numbering list\n */\r\nexport enum CompatibleNumberingListType {\r\n\n    /**\n     * Minimum value of the enum\n     */\n    Min = 1,\n\n    /**\n     * Numbering triggered by 1.\n     */\n    Decimal = 1,\n\n    /**\n     * Numbering triggered by 1-\n     */\n    DecimalDash = 2,\n\n    /**\n     * Numbering triggered by 1)\n     */\n    DecimalParenthesis = 3,\n\n    /**\n     * Numbering triggered by (1)\n     */\n    DecimalDoubleParenthesis = 4,\n\n    /**\n     * Numbering triggered by a.\n     */\n    LowerAlpha = 5,\n\n    /**\n     * Numbering triggered by a)\n     */\n    LowerAlphaParenthesis = 6,\n\n    /**\n     * Numbering triggered by (a)\n     */\n    LowerAlphaDoubleParenthesis = 7,\n\n    /**\n     * Numbering triggered by a-\n     */\n    LowerAlphaDash = 8,\n\n    /**\n     * Numbering triggered by A.\n     */\n    UpperAlpha = 9,\n\n    /**\n     * Numbering triggered by A)\n     */\n    UpperAlphaParenthesis = 10,\n\n    /**\n     * Numbering triggered by (A)\n     */\n    UpperAlphaDoubleParenthesis = 11,\n\n    /**\n     * Numbering triggered by A-\n     */\n    UpperAlphaDash = 12,\n\n    /**\n     * Numbering triggered by i.\n     */\n    LowerRoman = 13,\n\n    /**\n     * Numbering triggered by i)\n     */\n    LowerRomanParenthesis = 14,\n\n    /**\n     * Numbering triggered by (i)\n     */\n    LowerRomanDoubleParenthesis = 15,\n\n    /**\n     * Numbering triggered by i-\n     */\n    LowerRomanDash = 16,\n\n    /**\n     * Numbering triggered by I.\n     */\n    UpperRoman = 17,\n\n    /**\n     * Numbering triggered by I)\n     */\n    UpperRomanParenthesis = 18,\n\n    /**\n     * Numbering triggered by (I)\n     */\n    UpperRomanDoubleParenthesis = 19,\n\n    /**\n     * Numbering triggered by I-\n     */\n    UpperRomanDash = 20,\n\n    /**\n     * Maximum value of the enum\n     */\n    Max = 20,\n}\r\n","/**\n * Enum for paste options\n */\r\nexport enum CompatiblePasteType {\r\n\n    /**\n     * Default paste behavior\n     */\n    Normal,\n\n    /**\n     * Paste only the plain text\n     */\n    AsPlainText,\n\n    /**\n     * Apply the current style to pasted content\n     */\n    MergeFormat,\n\n    /**\n     * If there is a image uri in the clipboard, paste the content as image element\n     */\n    AsImage,\n}\r\n","/**\n * Editor plugin event type\n */\r\nexport enum CompatiblePluginEventType {\r\n\n    /**\n     * HTML KeyDown event\n     */\n    KeyDown = 0,\n\n    /**\n     * HTML KeyPress event\n     */\n    KeyPress = 1,\n\n    /**\n     * HTML KeyUp event\n     */\n    KeyUp = 2,\n\n    /**\n     * HTML Input / TextInput event\n     */\n    Input = 3,\n\n    /**\n     * HTML CompositionEnd event\n     */\n    CompositionEnd = 4,\n\n    /**\n     * HTML MouseDown event\n     */\n    MouseDown = 5,\n\n    /**\n     * HTML MouseUp event\n     */\n    MouseUp = 6,\n\n    /**\n     * Content changed event\n     */\n    ContentChanged = 7,\n\n    /**\n     * Extract Content with a DOM tree event\n     * This event is triggered when getContent() is called with triggerExtractContentEvent = true\n     * Plugin can handle this event to remove the UI only markups to return clean HTML\n     * by operating on a cloned DOM tree\n     */\n    ExtractContentWithDom = 8,\n\n    /**\n     * Before Paste event, provide a chance to change copied content\n     */\n    BeforeCutCopy = 9,\n\n    /**\n     * Before Paste event, provide a chance to change paste content\n     */\n    BeforePaste = 10,\n\n    /**\n     * Let plugin know editor is ready now\n     */\n    EditorReady = 11,\n\n    /**\n     * Let plugin know editor is about to dispose\n     */\n    BeforeDispose = 12,\n\n    /**\n     * Pending format state (bold, italic, underline, ... with collapsed selection) is changed\n     */\n    PendingFormatStateChanged = 13,\n\n    /**\n     * Scroll event triggered by scroll container\n     */\n    Scroll = 14,\n\n    /**\n     * Operating on an entity. See enum EntityOperation for more details about each operation\n     */\n    EntityOperation = 15,\n\n    /**\n     * HTML ContextMenu event\n     */\n    ContextMenu = 16,\n\n    /**\n     * Editor has entered shadow edit mode\n     */\n    EnteredShadowEdit = 17,\n\n    /**\n     * Editor is about to leave shadow edit mode\n     */\n    LeavingShadowEdit = 18,\n\n    /**\n     * Content of image is being changed from client side\n     */\n    EditImage = 19,\n\n    /**\n     * Content of editor is about to be cleared by SetContent API, handle this event to cache anything you need\n     * before it is gone\n     */\n    BeforeSetContent = 20,\n\n    /**\n     * Zoom scale value is changed, triggered by Editor.setZoomScale() when set a different scale number\n     */\n    ZoomChanged = 21,\n\n    /**\n     * EXPERIMENTAL FEATURE\n     * Editor changed the selection.\n     */\n    SelectionChanged = 22,\n\n    /**\n     * EXPERIMENTAL FEATURE\n     * Editor content is about to be changed by keyboard event.\n     * This is only used by Content Model editing\n     */\n    BeforeKeyboardEditing = 23,\n}\r\n","/**\r\n * Represent the type of a position\r\n */\r\nexport enum CompatiblePositionType {\r\n\r\n    /**\r\n     * At the beginning of a node\r\n     */\r\n    Begin = 0,\r\n\r\n    /**\r\n     * At the end of a node\r\n     */\r\n    End = -1,\r\n\r\n    /**\r\n     * Before a node\r\n     */\r\n    Before = -2,\r\n\r\n    /**\r\n     * After a node\r\n     */\r\n    After = -3,\r\n}\r\n","/**\r\n * Query scope for queryElements() API\r\n */\r\nexport enum CompatibleQueryScope {\r\n\r\n    /**\r\n     * Query from the whole body of root node. This is default value.\r\n     */\r\n    Body,\r\n\r\n    /**\r\n     * Query elements on a given selection (intersect)\r\n     * The result element can contain the selection, contain part of selection, or inside selection\r\n     */\r\n    OnSelection,\r\n\r\n    /**\r\n     * Query elements inside a given selection only\r\n     */\r\n    InSelection,\r\n}\r\n","/**\n * Type of all possible regions. Currently we only support region of Table\n */\r\nexport enum CompatibleRegionType {\r\n\n    /**\n     * Region split by Table\n     */\n    Table,\n}\r\n","/**\n * Types of Selection Ranges that the SelectionRangeEx can return\n */\r\nexport enum CompatibleSelectionRangeTypes {\r\n\n    /**\n     * Normal selection range provided by browser.\n     */\n    Normal,\n    /**\n     * Selection made inside of a single table.\n     */\n    TableSelection,\n    /**\n     * Selection made in a image.\n     */\n    ImageSelection,\n}\r\n","/**\n * Table format border\n */\r\nexport enum CompatibleTableBorderFormat {\r\n\n    /**\n     * All border of the table are displayed\n     *  __ __ __\n     * |__|__|__|\n     * |__|__|__|\n     * |__|__|__|\n     */\n    DEFAULT,\n\n    /**\n     * Middle vertical border are not displayed\n     *  __ __ __\n     * |__ __ __|\n     * |__ __ __|\n     * |__ __ __|\n     */\n    LIST_WITH_SIDE_BORDERS,\n\n    /**\n     * All borders except header rows borders are displayed\n     *  __ __ __\n     *  __|__|__\n     *  __|__|__\n     */\n    NO_HEADER_BORDERS,\n\n    /**\n     * The left and right border of the table are not displayed\n     *  __ __ __\n     *  __|__|__\n     *  __|__|__\n     *  __|__|__\n     */\n    NO_SIDE_BORDERS,\n\n    /**\n     * Only the borders that divides the header row, first column and externals are displayed\n     *  __ __ __\n     * |__ __ __|\n     * |  |     |\n     * |__|__ __|\n     */\n    FIRST_COLUMN_HEADER_EXTERNAL,\n\n    /**\n     * The header row has no vertical border, except for the first one\n     * The first column has no horizontal border, except for the first one\n     *  __ __ __\n     * |__ __ __\n     * |  |__|__|\n     * |  |__|__|\n     */\n    ESPECIAL_TYPE_1,\n\n    /**\n     * The header row has no vertical border, except for the first one\n     * The only horizontal border of the table is the top and bottom of header row\n     *  __ __ __\n     * |__ __ __\n     * |  |     |\n     * |  |     |\n     */\n    ESPECIAL_TYPE_2,\n\n    /**\n     * The only borders are the bottom of header row and the right border of first column\n     *  __ __ __\n     *    |\n     *    |\n     */\n    ESPECIAL_TYPE_3,\n\n    /**\n     * No border\n     */\n    CLEAR,\n}\r\n","/**\r\n * Operations used by editTable() API\r\n */\r\nexport enum CompatibleTableOperation {\r\n\r\n    /**\r\n     * Insert a row above current row\r\n     */\r\n    InsertAbove,\r\n\r\n    /**\r\n     * Insert a row below current row\r\n     */\r\n    InsertBelow,\r\n\r\n    /**\r\n     * Insert a column on the left of current column\r\n     */\r\n    InsertLeft,\r\n\r\n    /**\r\n     * Insert a column on the right of current column\r\n     */\r\n    InsertRight,\r\n\r\n    /**\r\n     * Delete the whole table\r\n     */\r\n    DeleteTable,\r\n\r\n    /**\r\n     * Delete current column\r\n     */\r\n    DeleteColumn,\r\n\r\n    /**\r\n     * Delete current row\r\n     */\r\n    DeleteRow,\r\n\r\n    /**\r\n     * Merge current row with the row above\r\n     */\r\n    MergeAbove,\r\n\r\n    /**\r\n     * Merge current row with the row below\r\n     */\r\n    MergeBelow,\r\n\r\n    /**\r\n     * Merge current column with the column on the left\r\n     */\r\n    MergeLeft,\r\n\r\n    /**\r\n     * Merge current column with the column on the right\r\n     */\r\n    MergeRight,\r\n\r\n    /**\r\n     * Merge all selected cells\r\n     */\r\n    MergeCells,\r\n\r\n    /**\r\n     * Split current table cell horizontally\r\n     */\r\n    SplitHorizontally,\r\n\r\n    /**\r\n     * Split current table cell vertically\r\n     */\r\n    SplitVertically,\r\n\r\n    /**\r\n     * Align current table at the center\r\n     */\r\n    AlignCenter,\r\n\r\n    /**\r\n     * Align current table at the left\r\n     */\r\n    AlignLeft,\r\n\r\n    /**\r\n     * Align current table at the right\r\n     */\r\n    AlignRight,\r\n\r\n    /**\r\n     * Align current content table cell at the left\r\n     */\r\n    AlignCellLeft,\r\n\r\n    /**\r\n     * Align current content table cell at the center\r\n     */\r\n    AlignCellCenter,\r\n\r\n    /**\r\n     * Align current content table cell at the right\r\n     */\r\n    AlignCellRight,\r\n\r\n    /**\r\n     * Align current content table cell at the top\r\n     */\r\n    AlignCellTop,\r\n\r\n    /**\r\n     * Align current table cell at the middle\r\n     */\r\n    AlignCellMiddle,\r\n\r\n    /**\r\n     * Align current table cell at the bottom\r\n     */\r\n    AlignCellBottom,\r\n}\r\n","export { CompatibleAlignment } from './Alignment'\r\nexport { CompatibleBulletListType } from './BulletListType'\r\nexport { CompatibleCapitalization } from './Capitalization'\r\nexport { CompatibleChangeSource } from './ChangeSource'\r\nexport { CompatibleClearFormatMode } from './ClearFormatMode'\r\nexport { CompatibleColorTransformDirection } from './ColorTransformDirection'\r\nexport { CompatibleContentPosition } from './ContentPosition'\r\nexport { CompatibleContentTypePrefix, CompatibleContentType } from './ContentType'\r\nexport { CompatibleDarkModeDatasetNames } from './DarkModeDatasetNames'\r\nexport { CompatibleDefinitionType } from './DefinitionType'\r\nexport { CompatibleDelimiterClasses } from './DelimiterClasses'\r\nexport { CompatibleDirection } from './Direction'\r\nexport { CompatibleDocumentCommand } from './DocumentCommand'\r\nexport { CompatibleDocumentPosition } from './DocumentPosition'\r\nexport { CompatibleEntityClasses } from './EntityClasses'\r\nexport { CompatibleEntityOperation } from './EntityOperation'\r\nexport { CompatibleExperimentalFeatures } from './ExperimentalFeatures'\r\nexport { CompatibleFontSizeChange } from './FontSizeChange'\r\nexport { CompatibleGetContentMode } from './GetContentMode'\r\nexport { CompatibleImageEditOperation } from './ImageEditOperation'\r\nexport { CompatibleIndentation } from './Indentation'\r\nexport { CompatibleKeys } from './Keys'\r\nexport { CompatibleKnownAnnounceStrings } from './KnownAnnounceStrings'\r\nexport { CompatibleKnownCreateElementDataIndex } from './KnownCreateElementDataIndex'\r\nexport { CompatibleKnownPasteSourceType } from './KnownPasteSourceType'\r\nexport { CompatibleListType } from './ListType'\r\nexport { CompatibleNodeType } from './NodeType'\r\nexport { CompatibleNumberingListType } from './NumberingListType'\r\nexport { CompatiblePasteType } from './PasteType'\r\nexport { CompatiblePluginEventType } from './PluginEventType'\r\nexport { CompatiblePositionType } from './PositionType'\r\nexport { CompatibleQueryScope } from './QueryScope'\r\nexport { CompatibleRegionType } from './RegionType'\r\nexport { CompatibleSelectionRangeTypes } from './SelectionRangeTypes'\r\nexport { CompatibleTableBorderFormat } from './TableBorderFormat'\r\nexport { CompatibleTableOperation } from './TableOperation'\r\n","export * from './browser/index';\nexport * from './corePluginState/index';\nexport * from './compatibleEnum/index';\nexport * from './event/index';\nexport * from './interface/index';\nexport * from './type/index';\n","/**\r\n * enum for setting block alignment, used by setAlignment API\r\n */\r\nexport const enum Alignment {\r\n    /**\r\n     * Align left\r\n     */\r\n    Left,\r\n\r\n    /**\r\n     * Align center\r\n     */\r\n    Center,\r\n\r\n    /**\r\n     * Align right\r\n     */\r\n    Right,\r\n}\r\n","/**\n *  Enum used to control the different types of bullet list\n */\nexport const enum BulletListType {\n    /**\n     * Minimum value of the enum\n     */\n    Min = 1,\n\n    /**\n     * Bullet triggered by *\n     */\n    Disc = 1,\n\n    /**\n     * Bullet triggered by -\n     */\n    Dash = 2,\n\n    /**\n     * Bullet triggered by --\n     */\n    Square = 3,\n\n    /**\n     * Bullet triggered by >\n     */\n    ShortArrow = 4,\n\n    /**\n     * Bullet triggered by ->\n     */\n    LongArrow = 5,\n\n    /**\n     * Bullet triggered by =>\n     */\n    UnfilledArrow = 6,\n\n    /**\n     * Bullet triggered by —\n     */\n    Hyphen = 7,\n\n    /**\n     * Bullet triggered by -->\n     */\n    DoubleLongArrow = 8,\n\n    /**\n     * Bullet type circle\n     */\n    Circle = 9,\n\n    /**\n     * Maximum value of the enum\n     */\n    Max = 9,\n}\n","/**\n * The enum used for controlling the capitalization of text.\n * Used by changeCapitalization API\n */\nexport const enum Capitalization {\n    /**\n     * Transforms the first character after punctuation mark followed by space\n     * to uppercase and the rest of characters to lowercase.\n     */\n    Sentence = 'sentence',\n\n    /**\n     * Transforms all characters to lowercase\n     */\n    Lowercase = 'lowercase',\n\n    /**\n     * Transforms all characters to uppercase\n     */\n    Uppercase = 'uppercase',\n\n    /**\n     * Transforms the first character of each word to uppercase\n     */\n    CapitalizeEachWord = 'capitalize',\n}\n","/**\r\n * Possible change sources. Here are the predefined sources.\r\n * It can also be other string if the change source can't fall into these sources.\r\n */\r\nexport const enum ChangeSource {\r\n    /**\r\n     * Content changed by auto link\r\n     */\r\n    AutoLink = 'AutoLink',\r\n\r\n    /**\r\n     * Content changed by create link\r\n     */\r\n    CreateLink = 'CreateLink',\r\n\r\n    /**\r\n     * Content changed by format\r\n     */\r\n    Format = 'Format',\r\n\r\n    /**\r\n     * Content changed by image resize\r\n     */\r\n    ImageResize = 'ImageResize',\r\n\r\n    /**\r\n     * Content changed by paste\r\n     */\r\n    Paste = 'Paste',\r\n\r\n    /**\r\n     * Content changed by setContent API\r\n     */\r\n    SetContent = 'SetContent',\r\n\r\n    /**\r\n     * Content changed by cut operation\r\n     */\r\n    Cut = 'Cut',\r\n\r\n    /**\r\n     * Content changed by drag & drop operation\r\n     */\r\n    Drop = 'Drop',\r\n\r\n    /**\r\n     * Insert a new entity into editor\r\n     */\r\n    InsertEntity = 'InsertEntity',\r\n\r\n    /**\r\n     * Editor is switched to dark mode, content color is changed\r\n     */\r\n    SwitchToDarkMode = 'SwitchToDarkMode',\r\n\r\n    /**\r\n     * Editor is switched to light mode, content color is changed\r\n     */\r\n    SwitchToLightMode = 'SwitchToLightMode',\r\n\r\n    /**\r\n     * List chain reorganized numbers of lists\r\n     */\r\n    ListChain = 'ListChain',\r\n\r\n    /**\r\n     * Keyboard event, used by Content Model.\r\n     * Data of this event will be the key code number\r\n     */\r\n    Keyboard = 'Keyboard',\r\n}\r\n","/**\n * Represents the strategy to clear the format of the current editor selection\n */\nexport const enum ClearFormatMode {\n    /**\n     * Inline format. Remove text format.\n     */\n    Inline,\n\n    /**\n     * BLock format. Remove text and structure format of the block.\n     */\n    Block,\n\n    /**\n     * Detect Inline or Block format based on the current editor selector.\n     */\n    AutoDetect,\n}\n","/**\n * Represents the mode of color transformation\n */\nexport const enum ColorTransformDirection {\n    /**\n     * Transform from light to dark\n     */\n    LightToDark = 0,\n\n    /**\n     * Transform from dark to light\n     */\n    DarkToLight = 1,\n}\n","/**\r\n * The position. Mostly used for content insertion and traversing\r\n * On insertion, we will need to specify where we want the content to be placed (begin, end, selection or outside)\r\n * On content traversing, we will need to specify the start position of traversing\r\n */\r\nexport const enum ContentPosition {\r\n    /**\r\n     * Begin of the container\r\n     */\r\n    Begin,\r\n\r\n    /**\r\n     * End of the container\r\n     */\r\n    End,\r\n\r\n    /**\r\n     * End of the content div domain.\r\n     */\r\n    DomEnd,\r\n\r\n    /**\r\n     * Selection start\r\n     */\r\n    SelectionStart,\r\n\r\n    /**\r\n     * Outside of editor\r\n     */\r\n    Outside,\r\n\r\n    /**\r\n     * Manually defined range\r\n     */\r\n    Range,\r\n}\r\n","/**\n * Prefix of content types\n */\nexport const enum ContentTypePrefix {\n    /**\n     * Text type prefix\n     */\n    Text = 'text/',\n\n    /**\n     * Image type prefix\n     */\n    Image = 'image/',\n}\n\n/**\n * Known content types\n */\nexport const enum ContentType {\n    /**\n     * Plain text content type\n     */\n    PlainText = 'text/plain',\n\n    /**\n     * HTML content type\n     */\n    HTML = 'text/html',\n}\n","/**\n * @deprecated\n * Constants string for dataset names used by dark mode\n */\nexport const enum DarkModeDatasetNames {\n    /**\n     * Original style text color\n     */\n    OriginalStyleColor = 'ogsc',\n\n    /**\n     * Original style background color\n     */\n    OriginalStyleBackgroundColor = 'ogsb',\n\n    /**\n     * Original attribute text color\n     */\n    OriginalAttributeColor = 'ogac',\n\n    /**\n     * Original attribute background color\n     */\n    OriginalAttributeBackgroundColor = 'ogab',\n}\n","/**\n * Types of definitions, used by Definition type\n */\nexport const enum DefinitionType {\n    /**\n     * Boolean type definition, represents a boolean type value\n     */\n    Boolean,\n\n    /**\n     * Number type definition, represents a number type value\n     */\n    Number,\n\n    /**\n     * String type definition, represents a string type value\n     */\n    String,\n\n    /**\n     * Array type definition, represents an array with a given item type\n     */\n    Array,\n\n    /**\n     * Object type definition, represents an object with the given property types\n     */\n    Object,\n\n    /**\n     * Customize type definition, represents a customized type with a validator function\n     */\n    Customize,\n}\n","/**\n * Class names for Delimiter\n */\nexport const enum DelimiterClasses {\n    /**\n     * Class name to specify this delimiter is before an entity\n     */\n    DELIMITER_BEFORE = 'entityDelimiterBefore',\n\n    /**\n     *  Class name to specify this delimiter is after an entity\n     */\n    DELIMITER_AFTER = 'entityDelimiterAfter',\n}\n","/**\r\n * enum for setting block direction, used by setDirection API\r\n */\r\nexport const enum Direction {\r\n    /**\r\n     * Left to right\r\n     */\r\n    LeftToRight,\r\n\r\n    /**\r\n     * Right to left\r\n     */\r\n    RightToLeft,\r\n}\r\n","/**\n * Command strings for Document.execCommand() API\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\n */\nexport const enum DocumentCommand {\n    /**\n     * Changes the browser auto-link behavior (Internet Explorer only)\n     */\n    AutoUrlDetect = 'AutoUrlDetect',\n\n    /**\n     * Changes the document background color. In styleWithCss mode, it affects the background color of the containing block instead.\n     * This requires a &lt;color&gt; value string to be passed in as a value argument. Note that Internet Explorer uses this to set the\n     * text background color.\n     */\n    BackColor = 'backColor',\n\n    /**\n     * Toggles bold on/off for the selection or at the insertion point. Internet Explorer uses the &lt;strong&gt; tag instead of &lt;b&gt;.\n     */\n    Bold = 'bold',\n\n    /**\n     * Clears all authentication credentials from the cache.\n     */\n    ClearAuthenticationCache = 'ClearAuthenticationCache',\n\n    /**\n     * Makes the content document either read-only or editable. This requires a boolean true/false as the value argument.\n     * (Not supported by Internet Explorer.)\n     */\n    ContentReadOnly = 'contentReadOnly',\n\n    /**\n     * Copies the current selection to the clipboard. Conditions of having this behavior enabled vary from one browser to another,\n     * and have evolved over time. Check the compatibility table to determine if you can use it in your case.\n     */\n    Copy = 'copy',\n\n    /**\n     * Creates an hyperlink from the selection, but only if there is a selection. Requires a URI string as a value argument for the\n     * hyperlink's href. The URI must contain at least a single character, which may be whitespace.\n     * (Internet Explorer will create a link with a null value.)\n     */\n    CreateLink = 'createLink',\n\n    /**\n     * Removes the current selection and copies it to the clipboard. When this behavior is enabled varies between browsers,\n     * and its conditions have evolved over time. Check the compatibility table for usage details.\n     */\n    Cut = 'cut',\n\n    /**\n     * Adds a &lt;small&gt; tag around the selection or at the insertion point. (Not supported by Internet Explorer.)\n     */\n    DecreaseFontSize = 'decreaseFontSize',\n\n    /**\n     * Changes the paragraph separator used when new paragraphs are created in editable text regions. See Differences in markup\n     * generation for more details.\n     */\n    DefaultParagraphSeparator = 'defaultParagraphSeparator',\n\n    /**\n     * Deletes the current selection.\n     */\n    Delete = 'delete',\n\n    /**\n     * Enables or disables the table row/column insertion and deletion controls. (Not supported by Internet Explorer.)\n     */\n    EnableInlineTableEditing = 'enableInlineTableEditing',\n\n    /**\n     * Enables or disables the resize handles on images and other resizable objects. (Not supported by Internet Explorer.)\n     */\n    EnableObjectResizing = 'enableObjectResizing',\n\n    /**\n     * Changes the font name for the selection or at the insertion point. This requires a font name string (like \"Arial\")\n     * as a value argument.\n     */\n    FontName = 'fontName',\n\n    /**\n     * Changes the font size for the selection or at the insertion point. This requires an integer from 1-7 as a value argument.\n     */\n    FontSize = 'fontSize',\n\n    /**\n     * Changes a font color for the selection or at the insertion point. This requires a hexadecimal color value string\n     * as a value argument.\n     */\n    ForeColor = 'foreColor',\n\n    /**\n     * Adds an HTML block-level element around the line containing the current selection, replacing the block element containing\n     * the line if one exists (in Firefox, &lt;blockquote&gt; is the exception — it will wrap any containing block element).\n     * Requires a tag-name string as a value argument. Virtually all block-level elements can be used.\n     * (Internet Explorer supports only heading tags H1–H6, ADDRESS, and PRE, which must be wrapped in angle brackets, such as \"&lt;H1&gt;\".)\n     */\n    FormatBlock = 'formatBlock',\n\n    /**\n     * Deletes the character ahead of the cursor's position, identical to hitting the Delete key on a Windows keyboard.\n     */\n    ForwardDelete = 'forwardDelete',\n\n    /**\n     * Adds a heading element around a selection or insertion point line. Requires the tag-name strings a value argument (i.e. \"H1\", \"H6\").\n     * (Not supported by Internet Explorer and Safari.)\n     */\n    Heading = 'heading',\n\n    /**\n     * Changes the background color for the selection or at the insertion point. Requires a color value string as a value argument.\n     * useCSS must be true for this to function. (Not supported by Internet Explorer.)\n     */\n    HiliteColor = 'hiliteColor',\n\n    /**\n     * Adds a &lt;big&gt; tag around the selection or at the insertion point. (Not supported by Internet Explorer.)\n     */\n    IncreaseFontSize = 'increaseFontSize',\n\n    /**\n     * Indents the line containing the selection or insertion point. In Firefox, if the selection spans multiple lines at different\n     * levels of indentation, only the least indented lines in the selection will be indented.\n     */\n    Indent = 'indent',\n\n    /**\n     * Controls whether the Enter key inserts a &lt;br&gt; element, or splits the current block element into two.\n     * (Not supported by Internet Explorer.)\n     */\n    InsertBrOnReturn = 'insertBrOnReturn',\n\n    /**\n     * Inserts a &lt;hr&gt; element at the insertion point, or replaces the selection with it.\n     */\n    InsertHorizontalRule = 'insertHorizontalRule',\n\n    /**\n     * Inserts an HTML string at the insertion point (deletes selection). Requires a valid HTML string as a value argument.\n     * (Not supported by Internet Explorer.)\n     */\n    InsertHTML = 'insertHTML',\n\n    /**\n     * Inserts an image at the insertion point (deletes selection). Requires a URL string for the image's src as a value argument.\n     * The requirements for this string are the same as createLink.\n     */\n    InsertImage = 'insertImage',\n\n    /**\n     * Creates a numbered ordered list for the selection or at the insertion point.\n     */\n    InsertOrderedList = 'insertOrderedList',\n\n    /**\n     * Creates a bulleted unordered list for the selection or at the insertion point.\n     */\n    InsertUnorderedList = 'insertUnorderedList',\n\n    /**\n     * Inserts a paragraph around the selection or the current line.\n     * (Internet Explorer inserts a paragraph at the insertion point and deletes the selection.)\n     */\n    InsertParagraph = 'insertParagraph',\n\n    /**\n     * Inserts the given plain text at the insertion point (deletes selection).\n     */\n    InsertText = 'insertText',\n\n    /**\n     * Toggles italics on/off for the selection or at the insertion point.\n     * (Internet Explorer uses the &lt;em&gt; element instead of &lt;i&gt;.)\n     */\n    Italic = 'italic',\n\n    /**\n     * Centers the selection or insertion point.\n     */\n    JustifyCenter = 'justifyCenter',\n\n    /**\n     * Justifies the selection or insertion point.\n     */\n    JustifyFull = 'justifyFull',\n\n    /**\n     * Justifies the selection or insertion point to the left.\n     */\n    JustifyLeft = 'justifyLeft',\n\n    /**\n     * Right-justifies the selection or the insertion point.\n     */\n    JustifyRight = 'justifyRight',\n\n    /**\n     * Outdents the line containing the selection or insertion point.\n     */\n    Outdent = 'outdent',\n\n    /**\n     * Pastes the clipboard contents at the insertion point (replaces current selection). Disabled for web content. See [1].\n     */\n    Paste = 'paste',\n\n    /**\n     * Redoes the previous undo command.\n     */\n    Redo = 'redo',\n\n    /**\n     * Removes all formatting from the current selection.\n     */\n    RemoveFormat = 'removeFormat',\n\n    /**\n     * Selects all of the content of the editable region.\n     */\n    SelectAll = 'selectAll',\n\n    /**\n     * Toggles strikethrough on/off for the selection or at the insertion point.\n     */\n    StrikeThrough = 'strikeThrough',\n\n    /**\n     * Toggles subscript on/off for the selection or at the insertion point.\n     */\n    Subscript = 'subscript',\n\n    /**\n     * Toggles superscript on/off for the selection or at the insertion point.\n     */\n    Superscript = 'superscript',\n\n    /**\n     * Toggles underline on/off for the selection or at the insertion point.\n     */\n    Underline = 'underline',\n\n    /**\n     * Undoes the last executed command.\n     */\n    Undo = 'undo',\n\n    /**\n     * Removes the anchor element from a selected hyperlink.\n     */\n    Unlink = 'unlink',\n\n    /**\n     * Replaces the useCSS command. true modifies/generates style attributes in markup, false generates presentational elements.\n     */\n    StyleWithCSS = 'styleWithCSS',\n}\n","/**\n * The is essentially an enum representing result from browser compareDocumentPosition API\n * https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n */\nexport const enum DocumentPosition {\n    /**\n     * Same node\n     */\n    Same = 0,\n\n    /**\n     * Node is disconnected from document\n     */\n    Disconnected = 1,\n\n    /**\n     * Node is preceding the comparing node\n     */\n    Preceding = 2,\n\n    /**\n     * Node is following the comparing node\n     */\n    Following = 4,\n\n    /**\n     * Node contains the comparing node\n     */\n    Contains = 8,\n\n    /**\n     * Node is contained by the comparing node\n     */\n    ContainedBy = 16,\n}\n","/**\n * CSS Class names for Entity\n */\nexport const enum EntityClasses {\n    /**\n     * Class name to specify this is an entity\n     */\n    ENTITY_INFO_NAME = '_Entity',\n\n    /**\n     * Class name to specify the type of an entity\n     */\n    ENTITY_TYPE_PREFIX = '_EType_',\n\n    /**\n     * Class name to specify the ID of an entity\n     */\n    ENTITY_ID_PREFIX = '_EId_',\n\n    /**\n     * Class name to specify if the entity is readonly\n     */\n    ENTITY_READONLY_PREFIX = '_EReadonly_',\n}\n","/**\n * Define possible operations to an entity\n */\nexport const enum EntityOperation {\n    /**\n     * Notify plugins that there is a new plugin was added into editor.\n     * Plugin can handle this event to entity hydration.\n     * This event will be only fired once for each entity DOM node.\n     * After undo, or copy/paste, since new DOM nodes were added, this event will be fired\n     * for those entities represented by newly added nodes.\n     */\n    NewEntity,\n\n    /**\n     * Notify plugins that user is clicking target to an entity\n     */\n    Click,\n\n    /**\n     * Notify plugins that user is triggering context menu to an entity\n     */\n    ContextMenu,\n\n    /**\n     * Notify plugins that user is escaping from an entity by pressing ESC key\n     */\n    Escape,\n\n    /**\n     * Notify plugins that user is removing an entity from its start position using DELETE key\n     */\n    RemoveFromStart,\n\n    /**\n     * Notify plugins that user is remove an entity from its end position using BACKSPACE key\n     */\n    RemoveFromEnd,\n\n    /**\n     * Notify plugins that an entity is being overwritten.\n     * This can be caused by key in, cut, paste, delete, backspace ... on a selection\n     * which contains some entities.\n     */\n    Overwrite,\n\n    /**\n     * Notify plugins that an entity is being partially overwritten.\n     * This happens when user selected part of the entity then do key press, or cut, paste, delete, backspace, ...\n     */\n    PartialOverwrite,\n\n    /**\n     * Notify plugins that editor is generating HTML content for save.\n     * Plugin should use this event to remove any temporary content, and only leave DOM nodes that\n     * should be saved as HTML string.\n     * This event will provide a cloned DOM tree for each entity, do NOT compare the DOM nodes with cached nodes\n     * because it will always return false.\n     */\n    ReplaceTemporaryContent,\n\n    /**\n     * @deprecated\n     */\n    AddShadowRoot,\n\n    /**\n     * @deprecated\n     */\n    RemoveShadowRoot,\n\n    /**\n     * Notify plugins that a new entity state need to be updated to an entity.\n     * This is normally happened when user undo/redo the content with an entity snapshot added by a plugin that handles entity\n     */\n    UpdateEntityState,\n}\n","/**\n * Experimental feature flags\n */\nexport const enum ExperimentalFeatures {\n    // #region Graduated and deprecated features.\n    // These features will be removed in next major release\n    /**\n     * @deprecated This feature is always enabled\n     */\n    NewIndentation = 'NewIndentation',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    NewBullet = 'NewBullet',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    NewNumbering = 'NewNumbering',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    ListChain = 'ListChain',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    MergePastedLine = 'MergePastedLine',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    SingleDirectionResize = 'SingleDirectionResize',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    PasteWithLinkPreview = 'PasteWithLinkPreview',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    ImageRotate = 'ImageRotate',\n\n    /**\n     * @deprecated This feature is always enabled\n     */\n    ImageCrop = 'ImageCrop',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Check if the element has a style attribute, if not, apply the default format\n     */\n    AlwaysApplyDefaultFormat = 'AlwaysApplyDefaultFormat',\n\n    /**\n     * @deprecated This feature can be enabled/disabled using Paste Plugin contructor param\n     * Paste the Html instead of the Img when the Html Body only have one IMG Child node\n     */\n    ConvertSingleImageBody = 'ConvertSingleImageBody',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Align table elements to left, center and right using setAlignment API\n     */\n    TableAlignment = 'TableAlignment',\n\n    /**\n     * @deprecated this feature is always enabled\n     * Provide a circular resize handles that adaptive the number od handles to the size of the image\n     */\n    AdaptiveHandlesResizer = 'AdaptiveHandlesResizer',\n\n    /**\n     * @deprecated this feature is always disabled\n     * Automatically transform -- into hyphen, if typed between two words.\n     */\n    AutoHyphen = 'AutoHyphen',\n\n    /**\n     * @deprecated this feature is always disabled\n     * Use pending format strategy to do style based format, e.g. Font size, Color.\n     * With this feature enabled, we don't need to insert temp ZeroWidthSpace character to hold pending format\n     * when selection is collapsed. Instead, we will hold the pending format in memory and only apply it when type something\n     */\n    PendingStyleBasedFormat = 'PendingStyleBasedFormat',\n\n    /**\n     * @deprecated this feature is always disabled\n     * Normalize list to make sure it can be displayed correctly in other client\n     * e.g. We will move list items with \"display: block\" into previous list item and change tag to be DIV\n     */\n    NormalizeList = 'NormalizeList',\n\n    /**\n     * @deprecated this feature is always enabled\n     * When a html image is selected, the selected image data will be stored by editor core.\n     */\n    ImageSelection = 'ImageSelection',\n\n    /**\n     * @deprecated this feature is always enabled\n     * Use variable-based dark mode solution rather than dataset-based solution.\n     * When enable this feature, need to pass in a DarkModelHandler object to each call of setColor and applyFormat\n     * if you need them work for dark mode\n     */\n    VariableBasedDarkColor = 'VariableBasedDarkColor',\n\n    /**\n     * @deprecated this feature is always enabled\n     * Align list elements elements to left, center and right using setAlignment API\n     */\n    ListItemAlignment = 'ListItemAlignment',\n\n    /**\n     * @deprecated\n     */\n    DefaultFormatInSpan = 'DefaultFormatInSpan',\n\n    /**\n     * @deprecated\n     */\n    DefaultFormatOnContainer = 'DefaultFormatOnContainer',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Reuse existing DOM structure if possible when convert Content Model back to DOM tree\n     */\n    ReusableContentModel = 'ReusableContentModel',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Handle keyboard editing event with Content Model\n     */\n    EditWithContentModel = 'EditWithContentModel',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Trigger formatting by a especial characters. Ex: (A), 1. i).\n     */\n    AutoFormatList = 'AutoFormatList',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Add entities around a Read Only  Inline entity to prevent cursor to be hidden when cursor is next of it.\n     */\n    InlineEntityReadOnlyDelimiters = 'InlineEntityReadOnlyDelimiters',\n\n    /**\n     * @deprecated This feature is always enabled\n     * Paste with Content model\n     */\n    ContentModelPaste = 'ContentModelPaste',\n\n    //#endregion\n\n    /**\n     * Provide additional Tab Key Features. Requires Text Features Content Editable Features\n     */\n    TabKeyTextFeatures = 'TabKeyTextFeatures',\n\n    /**\n     * With this feature enabled, when writing back a list item we will re-use all\n     * ancestor list elements, even if they don't match the types currently in the\n     * listTypes array for that item. The only list that we will ensure is correct\n     * is the one closest to the item.\n     */\n    ReuseAllAncestorListElements = 'ReuseAllAncestorListElements',\n\n    /**\n     * Delete table with Backspace key with the whole was selected with table selector\n     */\n    DeleteTableWithBackspace = 'DeleteTableWithBackspace',\n\n    /**\n     * Disable list chain functionality\n     */\n    DisableListChain = 'DisableListChain',\n}\n","/**\r\n * The enum used for increase or decrease font size\r\n * Used by setFontSize API\r\n */\r\nexport const enum FontSizeChange {\r\n    /**\r\n     * Increase font size\r\n     */\r\n    Increase,\r\n\r\n    /**\r\n     * Decrease font size\r\n     */\r\n    Decrease,\r\n}\r\n","/**\n * Represents a mode number to indicate what kind of content to retrieve when call Editor.getContent()\n */\nexport const enum GetContentMode {\n    /**\n     * The clean content without any temporary content only for editor.\n     * This is the default value. Call to Editor.getContent() with trigger an ExtractContentWithDom event\n     * so that plugins can remove their temporary content, and will return the HTML content\n     * which is ready for save to storage.\n     */\n    CleanHTML = 0,\n\n    /**\n     * Retrieve the raw HTML string in current editor. Temporary content will be included.\n     */\n    RawHTMLOnly = 1,\n\n    /**\n     * Retrieve the raw HTML string in current editor with a selection marker. This can be used for\n     * save current editor state and call to SetContent with this result can fully restore editor state\n     * including current selection\n     */\n    RawHTMLWithSelection = 2,\n\n    /**\n     * Get plain text content only, all format will be ignored\n     */\n    PlainText,\n\n    /**\n     * A fast way to get plain text content, the line-end positions may not be exactly same with HTML content,\n     * but the text content should be the same. This is used for quickly retrieve text content and check\n     * text only\n     */\n    PlainTextFast,\n}\n","/**\n * Operation flags for ImageEdit plugin\n */\nexport const enum ImageEditOperation {\n    /**\n     * No operation\n     */\n    None = 0,\n\n    /**\n     * Resize image from corner ( horizontal and vertical resize)\n     */\n    CornerResize = 1,\n\n    /**\n     * Resize image from side ( either horizontal or vertical resize)\n     */\n    SideResize = 2,\n\n    /**\n     * Image resize\n     */\n    Resize = CornerResize | SideResize,\n\n    /**\n     * Image rotate\n     */\n    Rotate = 4,\n\n    /**\n     * Image resize and rotate\n     */\n    ResizeAndRotate = Resize | Rotate,\n\n    /**\n     * Image crop\n     */\n    Crop = 8,\n\n    /**\n     * All operations\n     */\n    All = ResizeAndRotate | Crop,\n}\n","/**\r\n * The enum used for increase or decrease indentation of a block\r\n * Used by setIndentation API\r\n */\r\nexport const enum Indentation {\r\n    /**\r\n     * Increase indentation\r\n     */\r\n    Increase,\r\n\r\n    /**\r\n     * Decrease indentation\r\n     */\r\n    Decrease,\r\n}\r\n","/**\n * Key numbers common used keys\n */\nexport const enum Keys {\n    NULL = 0,\n    BACKSPACE = 8,\n    TAB = 9,\n    ENTER = 13,\n    SHIFT = 16,\n    CTRL_LEFT = 17,\n    ALT = 18,\n    ESCAPE = 27,\n    SPACE = 32,\n    PAGEUP = 33,\n    END = 35,\n    HOME = 36,\n    LEFT = 37,\n    UP = 38,\n    RIGHT = 39,\n    DOWN = 40,\n    PRINT_SCREEN = 44,\n    DELETE = 46,\n    /**\n     * @deprecated Just for backward compatibility\n     */\n    EIGHT_ASTIRISK = 56,\n    EIGHT_ASTERISK = 56,\n    B = 66,\n    I = 73,\n    U = 85,\n    Y = 89,\n    Z = 90,\n    META_LEFT = 91,\n    COMMA = 188,\n    DASH_UNDERSCORE = 189,\n    PERIOD = 190,\n    /**\n     * @deprecated Just for backward compatibility\n     */\n    FORWARDSLASH = 191,\n    FORWARD_SLASH = 191,\n    GRAVE_TILDE = 192,\n\n    /**\n     * Keys below are non-standard, and should be used in ContentEditFeatures only\n     */\n    CONTENTCHANGED = 0x101,\n    RANGE = 0x102,\n\n    Ctrl = 0x1000,\n    Meta = 0x2000,\n    Shift = 0x4000,\n}\n","/**\n * Known announce strings\n */\nexport const enum KnownAnnounceStrings {\n    /**\n     * String announced when Indenting or Outdenting a list item in a OL List\n     * @example\n     * Auto corrected, &lcub;0&rcub;\n     * Where &lcub0&rcub is the new list item bullet\n     */\n    AnnounceListItemNumberingIndentation = 1,\n    /**\n     * String announced when Indenting or Outdenting a list item in a UL List\n     * @example\n     * Auto corrected bullet\n     */\n    AnnounceListItemBulletIndentation,\n}\n","/**\n * Index of known CreateElementData used by createElement function\n */\nexport const enum KnownCreateElementDataIndex {\n    /**\n     * Set a none value to help createElement function ignore falsy value\n     */\n    None = 0,\n\n    /**\n     * An empty line without format\n     */\n    EmptyLine = 1,\n\n    /**\n     * Wrapper for blockquote\n     */\n    BlockquoteWrapper = 2,\n\n    /**\n     * Temp DIV for copy/paste\n     */\n    CopyPasteTempDiv = 3,\n\n    /**\n     * ListItem with block style\n     */\n    BlockListItem = 4,\n\n    /**\n     * Wrapper element for context menu\n     */\n    ContextMenuWrapper = 5,\n\n    /**\n     * Wrapper element for image edit\n     */\n    ImageEditWrapper = 6,\n\n    /**\n     * @deprecated\n     */\n    TableHorizontalResizer = 7,\n\n    /**\n     * @deprecated\n     */\n    TableVerticalResizer = 8,\n\n    /**\n     * @deprecated\n     */\n    TableResizerLTR = 9,\n\n    /**\n     * @deprecated\n     */\n    TableResizerRTL = 10,\n\n    /**\n     * @deprecated\n     */\n    TableSelector = 11,\n\n    /**\n     * @deprecated\n     */\n    EmptyLineFormatInSpan = 12,\n}\n","/**\n * Represent the types of sources to handle in the Paste Plugin\n */\nexport const enum KnownPasteSourceType {\n    WordDesktop,\n    ExcelDesktop,\n    ExcelOnline,\n    PowerPointDesktop,\n    GoogleSheets,\n    WacComponents,\n    Default,\n    SingleImage,\n}\n","/**\n * Type of list (numbering or bullet)\n */\nexport const enum ListType {\n    /**\n     * None list type\n     * It means this is not a list\n     */\n    None = 0,\n\n    /**\n     * Ordered List type (numbering list)\n     * Represented by \"OL\" tag\n     */\n    Ordered = 1,\n\n    /**\n     * Unordered List type (bullet list)\n     * Represented by \"UL\" tag\n     */\n    Unordered = 2,\n}\n","/**\n * The is essentially an enum represents the type of the node\n * https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n * Values not listed here are deprecated.\n */\nexport const enum NodeType {\n    /**\n     * An Element node such as &lt;p&gt; or &lt;div&gt;.\n     */\n    Element = 1,\n\n    /**\n     * An Attribute node such as name=\"value\".\n     */\n    Attribute = 2,\n\n    /**\n     * The actual Text of Element or Attr.\n     */\n    Text = 3,\n\n    /**\n     * A ProcessingInstruction of an XML document such as &lt;?xml-stylesheet ... ?&gt; declaration.\n     */\n    ProcessingInstruction = 7,\n\n    /**\n     * A Comment node.\n     */\n    Comment = 8,\n\n    /**\n     * A Document node.\n     */\n    Document = 9,\n\n    /**\n     * A DocumentType node e.g. &lt;!DOCTYPE html&gt; for HTML5 documents.\n     */\n    DocumentType = 10,\n\n    /**\n     * A DocumentFragment node.\n     */\n    DocumentFragment = 11,\n}\n","/**\n *  Enum used to control the different types of numbering list\n */\nexport const enum NumberingListType {\n    /**\n     * Minimum value of the enum\n     */\n    Min = 1,\n\n    /**\n     * Numbering triggered by 1.\n     */\n    Decimal = 1,\n\n    /**\n     * Numbering triggered by 1-\n     */\n    DecimalDash = 2,\n\n    /**\n     * Numbering triggered by 1)\n     */\n    DecimalParenthesis = 3,\n\n    /**\n     * Numbering triggered by (1)\n     */\n    DecimalDoubleParenthesis = 4,\n\n    /**\n     * Numbering triggered by a.\n     */\n    LowerAlpha = 5,\n\n    /**\n     * Numbering triggered by a)\n     */\n    LowerAlphaParenthesis = 6,\n\n    /**\n     * Numbering triggered by (a)\n     */\n    LowerAlphaDoubleParenthesis = 7,\n\n    /**\n     * Numbering triggered by a-\n     */\n    LowerAlphaDash = 8,\n\n    /**\n     * Numbering triggered by A.\n     */\n    UpperAlpha = 9,\n\n    /**\n     * Numbering triggered by A)\n     */\n    UpperAlphaParenthesis = 10,\n\n    /**\n     * Numbering triggered by (A)\n     */\n    UpperAlphaDoubleParenthesis = 11,\n\n    /**\n     * Numbering triggered by A-\n     */\n    UpperAlphaDash = 12,\n\n    /**\n     * Numbering triggered by i.\n     */\n    LowerRoman = 13,\n\n    /**\n     * Numbering triggered by i)\n     */\n    LowerRomanParenthesis = 14,\n\n    /**\n     * Numbering triggered by (i)\n     */\n    LowerRomanDoubleParenthesis = 15,\n\n    /**\n     * Numbering triggered by i-\n     */\n    LowerRomanDash = 16,\n\n    /**\n     * Numbering triggered by I.\n     */\n    UpperRoman = 17,\n\n    /**\n     * Numbering triggered by I)\n     */\n    UpperRomanParenthesis = 18,\n\n    /**\n     * Numbering triggered by (I)\n     */\n    UpperRomanDoubleParenthesis = 19,\n\n    /**\n     * Numbering triggered by I-\n     */\n    UpperRomanDash = 20,\n\n    /**\n     * Maximum value of the enum\n     */\n    Max = 20,\n}\n","/**\n * Enum for paste options\n */\nexport const enum PasteType {\n    /**\n     * Default paste behavior\n     */\n    Normal,\n\n    /**\n     * Paste only the plain text\n     */\n    AsPlainText,\n\n    /**\n     * Apply the current style to pasted content\n     */\n    MergeFormat,\n\n    /**\n     * If there is a image uri in the clipboard, paste the content as image element\n     */\n    AsImage,\n}\n","/**\n * Editor plugin event type\n */\nexport const enum PluginEventType {\n    /**\n     * HTML KeyDown event\n     */\n    KeyDown = 0,\n\n    /**\n     * HTML KeyPress event\n     */\n    KeyPress = 1,\n\n    /**\n     * HTML KeyUp event\n     */\n    KeyUp = 2,\n\n    /**\n     * HTML Input / TextInput event\n     */\n    Input = 3,\n\n    /**\n     * HTML CompositionEnd event\n     */\n    CompositionEnd = 4,\n\n    /**\n     * HTML MouseDown event\n     */\n    MouseDown = 5,\n\n    /**\n     * HTML MouseUp event\n     */\n    MouseUp = 6,\n\n    /**\n     * Content changed event\n     */\n    ContentChanged = 7,\n\n    /**\n     * Extract Content with a DOM tree event\n     * This event is triggered when getContent() is called with triggerExtractContentEvent = true\n     * Plugin can handle this event to remove the UI only markups to return clean HTML\n     * by operating on a cloned DOM tree\n     */\n    ExtractContentWithDom = 8,\n\n    /**\n     * Before Paste event, provide a chance to change copied content\n     */\n    BeforeCutCopy = 9,\n\n    /**\n     * Before Paste event, provide a chance to change paste content\n     */\n    BeforePaste = 10,\n\n    /**\n     * Let plugin know editor is ready now\n     */\n    EditorReady = 11,\n\n    /**\n     * Let plugin know editor is about to dispose\n     */\n    BeforeDispose = 12,\n\n    /**\n     * Pending format state (bold, italic, underline, ... with collapsed selection) is changed\n     */\n    PendingFormatStateChanged = 13,\n\n    /**\n     * Scroll event triggered by scroll container\n     */\n    Scroll = 14,\n\n    /**\n     * Operating on an entity. See enum EntityOperation for more details about each operation\n     */\n    EntityOperation = 15,\n\n    /**\n     * HTML ContextMenu event\n     */\n    ContextMenu = 16,\n\n    /**\n     * Editor has entered shadow edit mode\n     */\n    EnteredShadowEdit = 17,\n\n    /**\n     * Editor is about to leave shadow edit mode\n     */\n    LeavingShadowEdit = 18,\n\n    /**\n     * Content of image is being changed from client side\n     */\n    EditImage = 19,\n\n    /**\n     * Content of editor is about to be cleared by SetContent API, handle this event to cache anything you need\n     * before it is gone\n     */\n    BeforeSetContent = 20,\n\n    /**\n     * Zoom scale value is changed, triggered by Editor.setZoomScale() when set a different scale number\n     */\n    ZoomChanged = 21,\n\n    /**\n     * EXPERIMENTAL FEATURE\n     * Editor changed the selection.\n     */\n    SelectionChanged = 22,\n\n    /**\n     * EXPERIMENTAL FEATURE\n     * Editor content is about to be changed by keyboard event.\n     * This is only used by Content Model editing\n     */\n    BeforeKeyboardEditing = 23,\n}\n","/**\r\n * Represent the type of a position\r\n */\r\nexport const enum PositionType {\r\n    /**\r\n     * At the beginning of a node\r\n     */\r\n    Begin = 0,\r\n\r\n    /**\r\n     * At the end of a node\r\n     */\r\n    End = -1,\r\n\r\n    /**\r\n     * Before a node\r\n     */\r\n    Before = -2,\r\n\r\n    /**\r\n     * After a node\r\n     */\r\n    After = -3,\r\n}\r\n","/**\r\n * Query scope for queryElements() API\r\n */\r\nexport const enum QueryScope {\r\n    /**\r\n     * Query from the whole body of root node. This is default value.\r\n     */\r\n    Body,\r\n\r\n    /**\r\n     * Query elements on a given selection (intersect)\r\n     * The result element can contain the selection, contain part of selection, or inside selection\r\n     */\r\n    OnSelection,\r\n\r\n    /**\r\n     * Query elements inside a given selection only\r\n     */\r\n    InSelection,\r\n}\r\n","/**\n * Type of all possible regions. Currently we only support region of Table\n */\nexport const enum RegionType {\n    /**\n     * Region split by Table\n     */\n    Table,\n}\n","/**\n * Types of Selection Ranges that the SelectionRangeEx can return\n */\nexport const enum SelectionRangeTypes {\n    /**\n     * Normal selection range provided by browser.\n     */\n    Normal,\n    /**\n     * Selection made inside of a single table.\n     */\n    TableSelection,\n    /**\n     * Selection made in a image.\n     */\n    ImageSelection,\n}\n","/**\n * Table format border\n */\nexport const enum TableBorderFormat {\n    /**\n     * All border of the table are displayed\n     *  __ __ __\n     * |__|__|__|\n     * |__|__|__|\n     * |__|__|__|\n     */\n    DEFAULT,\n\n    /**\n     * Middle vertical border are not displayed\n     *  __ __ __\n     * |__ __ __|\n     * |__ __ __|\n     * |__ __ __|\n     */\n    LIST_WITH_SIDE_BORDERS,\n\n    /**\n     * All borders except header rows borders are displayed\n     *  __ __ __\n     *  __|__|__\n     *  __|__|__\n     */\n    NO_HEADER_BORDERS,\n\n    /**\n     * The left and right border of the table are not displayed\n     *  __ __ __\n     *  __|__|__\n     *  __|__|__\n     *  __|__|__\n     */\n    NO_SIDE_BORDERS,\n\n    /**\n     * Only the borders that divides the header row, first column and externals are displayed\n     *  __ __ __\n     * |__ __ __|\n     * |  |     |\n     * |__|__ __|\n     */\n    FIRST_COLUMN_HEADER_EXTERNAL,\n\n    /**\n     * The header row has no vertical border, except for the first one\n     * The first column has no horizontal border, except for the first one\n     *  __ __ __\n     * |__ __ __\n     * |  |__|__|\n     * |  |__|__|\n     */\n    ESPECIAL_TYPE_1,\n\n    /**\n     * The header row has no vertical border, except for the first one\n     * The only horizontal border of the table is the top and bottom of header row\n     *  __ __ __\n     * |__ __ __\n     * |  |     |\n     * |  |     |\n     */\n    ESPECIAL_TYPE_2,\n\n    /**\n     * The only borders are the bottom of header row and the right border of first column\n     *  __ __ __\n     *    |\n     *    |\n     */\n    ESPECIAL_TYPE_3,\n\n    /**\n     * No border\n     */\n    CLEAR,\n}\n","/**\r\n * Operations used by editTable() API\r\n */\r\nexport const enum TableOperation {\r\n    /**\r\n     * Insert a row above current row\r\n     */\r\n    InsertAbove,\r\n\r\n    /**\r\n     * Insert a row below current row\r\n     */\r\n    InsertBelow,\r\n\r\n    /**\r\n     * Insert a column on the left of current column\r\n     */\r\n    InsertLeft,\r\n\r\n    /**\r\n     * Insert a column on the right of current column\r\n     */\r\n    InsertRight,\r\n\r\n    /**\r\n     * Delete the whole table\r\n     */\r\n    DeleteTable,\r\n\r\n    /**\r\n     * Delete current column\r\n     */\r\n    DeleteColumn,\r\n\r\n    /**\r\n     * Delete current row\r\n     */\r\n    DeleteRow,\r\n\r\n    /**\r\n     * Merge current row with the row above\r\n     */\r\n    MergeAbove,\r\n\r\n    /**\r\n     * Merge current row with the row below\r\n     */\r\n    MergeBelow,\r\n\r\n    /**\r\n     * Merge current column with the column on the left\r\n     */\r\n    MergeLeft,\r\n\r\n    /**\r\n     * Merge current column with the column on the right\r\n     */\r\n    MergeRight,\r\n\r\n    /**\r\n     * Merge all selected cells\r\n     */\r\n    MergeCells,\r\n\r\n    /**\r\n     * Split current table cell horizontally\r\n     */\r\n    SplitHorizontally,\r\n\r\n    /**\r\n     * Split current table cell vertically\r\n     */\r\n    SplitVertically,\r\n\r\n    /**\r\n     * Align current table at the center\r\n     */\r\n    AlignCenter,\r\n\r\n    /**\r\n     * Align current table at the left\r\n     */\r\n    AlignLeft,\r\n\r\n    /**\r\n     * Align current table at the right\r\n     */\r\n    AlignRight,\r\n\r\n    /**\r\n     * Align current content table cell at the left\r\n     */\r\n    AlignCellLeft,\r\n\r\n    /**\r\n     * Align current content table cell at the center\r\n     */\r\n    AlignCellCenter,\r\n\r\n    /**\r\n     * Align current content table cell at the right\r\n     */\r\n    AlignCellRight,\r\n\r\n    /**\r\n     * Align current content table cell at the top\r\n     */\r\n    AlignCellTop,\r\n\r\n    /**\r\n     * Align current table cell at the middle\r\n     */\r\n    AlignCellMiddle,\r\n\r\n    /**\r\n     * Align current table cell at the bottom\r\n     */\r\n    AlignCellBottom,\r\n}\r\n","export { KnownAnnounceStrings } from './KnownAnnounceStrings';\nexport { DocumentCommand } from './DocumentCommand';\nexport { DocumentPosition } from './DocumentPosition';\nexport { Keys } from './Keys';\nexport { NodeType } from './NodeType';\nexport { ContentTypePrefix, ContentType } from './ContentType';\nexport { Alignment } from './Alignment';\nexport { ChangeSource } from './ChangeSource';\nexport { ColorTransformDirection } from './ColorTransformDirection';\nexport { ContentPosition } from './ContentPosition';\nexport { DarkModeDatasetNames } from './DarkModeDatasetNames';\nexport { DelimiterClasses } from './DelimiterClasses';\nexport { Direction } from './Direction';\nexport { EntityClasses } from './EntityClasses';\nexport { EntityOperation } from './EntityOperation';\nexport { ExperimentalFeatures } from './ExperimentalFeatures';\nexport { FontSizeChange } from './FontSizeChange';\nexport { GetContentMode } from './GetContentMode';\nexport { Indentation } from './Indentation';\nexport { Capitalization } from './Capitalization';\nexport { ListType } from './ListType';\nexport { PositionType } from './PositionType';\nexport { QueryScope } from './QueryScope';\nexport { RegionType } from './RegionType';\nexport { TableOperation } from './TableOperation';\nexport { ImageEditOperation } from './ImageEditOperation';\nexport { ClearFormatMode } from './ClearFormatMode';\nexport { KnownCreateElementDataIndex } from './KnownCreateElementDataIndex';\nexport { KnownPasteSourceType } from './KnownPasteSourceType';\nexport { TableBorderFormat } from './TableBorderFormat';\nexport { PluginEventType } from './PluginEventType';\nexport { SelectionRangeTypes } from './SelectionRangeTypes';\nexport { NumberingListType } from './NumberingListType';\nexport { BulletListType } from './BulletListType';\nexport { DefinitionType } from './DefinitionType';\nexport { PasteType } from './PasteType';\n","export * from './browser/index';\r\nexport * from './corePluginState/index';\r\nexport * from './enum/index';\r\nexport * from './event/index';\r\nexport * from './interface/index';\r\nexport * from './type/index';\r\n","import { ContentEdit, HyperLink, Paste } from 'roosterjs-editor-plugins';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { getDarkColor } from 'roosterjs-color-utils';\r\nimport type { EditorOptions, EditorPlugin, IEditor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Create an editor instance with most common options\r\n * @param contentDiv The html div element needed for creating the editor\r\n * @param additionalPlugins The additional user defined plugins. Currently the default plugins that are already included are\r\n * ContentEdit, HyperLink and Paste, user don't need to add those.\r\n * @param initialContent The initial content to show in editor. It can't be removed by undo, user need to manually remove it if needed.\r\n * @returns The editor instance\r\n */\r\nexport default function createEditor(\r\n    contentDiv: HTMLDivElement,\r\n    additionalPlugins?: EditorPlugin[],\r\n    initialContent?: string\r\n): IEditor {\r\n    let plugins: EditorPlugin[] = [new HyperLink(), new Paste(), new ContentEdit()];\r\n\r\n    if (additionalPlugins) {\r\n        plugins = plugins.concat(additionalPlugins);\r\n    }\r\n\r\n    let options: EditorOptions = {\r\n        plugins: plugins,\r\n        initialContent: initialContent,\r\n        getDarkColor: getDarkColor,\r\n        defaultFormat: {\r\n            fontFamily: 'Calibri,Arial,Helvetica,sans-serif',\r\n            fontSize: '11pt',\r\n            textColor: '#000000',\r\n        },\r\n    };\r\n\r\n    return new Editor(contentDiv, options);\r\n}\r\n","export { default as createEditor } from './createEditor';\r\nexport * from 'roosterjs-editor-types';\r\nexport * from 'roosterjs-editor-types-compatible';\r\nexport * from 'roosterjs-editor-dom';\r\nexport * from 'roosterjs-editor-core';\r\nexport * from 'roosterjs-editor-api';\r\nexport * from 'roosterjs-editor-plugins';\r\nexport * from 'roosterjs-color-utils';\r\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(8608);\n"],"names":["cssKeywords","reverseKeywords","key","hasOwnProperty","convert","module","exports","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","Error","length","Object","defineProperty","value","h","l","r","g","b","min","Math","max","delta","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","x","y","currentClosestDistance","Infinity","distance","pow","z","t1","t2","t3","val","i","smin","lmin","hi","floor","f","p","q","t","sl","vmin","n","wh","bl","ratio","m","y2","x2","z2","a","atan2","PI","sqrt","hr","cos","sin","args","arguments","round","ansi","color","mult","rem","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","integer","parseInt","hue","chroma","mg","pure","w","conversions","route","keys","forEach","fromModel","routes","toModel","fn","wrappedFn","Array","prototype","slice","call","result","len","conversion","wrapRounded","raw","wrapRaw","link","from","to","wrapConversion","graph","path","parent","cur","unshift","models","buildGraph","queue","current","pop","adjacents","adjacent","node","deriveBFS","colorNames","swizzle","reverseNames","name","cs","get","clamp","num","hexDouble","str","toLowerCase","hexAlpha","i2","parseFloat","alpha","isNaN","rgba","percent","hsla","hwba","_slice","skippedModels","hashedModelKeys","sort","limiters","Color","obj","this","valpha","newArr","zeroArray","splice","indexOf","hashedKeys","JSON","stringify","push","limit","freeze","getset","channel","modifier","isArray","maxfn","arr","toJSON","places","self","concat","percentString","array","object","unitArray","unitObject","Number","toFixed","roundTo","roundToPlace","red","green","blue","saturationl","lightness","saturationv","white","wblack","cyan","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","undefined","w1","w2","newAlpha","Function","getOwnPropertyDescriptor","constructor","isArrayish","results","arg","wrap","default","baseLValue","computedColor","colorLab","newLValue","editor","capitalization","language","getCapitalizedText","originalText","toLocaleLowerCase","toLocaleUpperCase","wordArray","charAt","regex","RegExp","replace","element","getFirstLeafNode","getNextLeafSibling","nodeType","textContent","FONT_SIZES","getNewFontSize","pt","changeBase","fontSizes","ceil","last","change","getComputedStyle","style","fontSize","lineHeight","STYLES_TO_REMOVE","TAGS_TO_UNWRAP","ATTRIBUTES_TO_PRESERVE","TAGS_TO_STOP_UNWRAP","clearNodeFormat","areAllChildrenBlock","toArray","childNodes","every","returnBlockElement","isBlockElement","tag","getTagOfNode","isVoidHtmlElement","unwrap","isTableCell","safeInstanceOf","isTable","attributes","attr","removeNonBorderStyles","removeNotTableDefaultStyles","removeAttribute","clearAttribute","updateStyles","callbackfn","styles","getStyles","getObjectKeys","setStyles","clearBlockFormat","region","blocks","getSelectedBlockElementsInRegion","nodes","collapseNodesInRegion","contains","rootNode","nonborderStyles","wrapper","parentNode","isNodeInRegion","balancedNodes","splitBalancedNodeRange","setDefaultFormat","defaultFormat","getDefaultFormat","isDefaultFormatEmpty","queryElements","removeStyles","cNode","fontFamily","textColor","shouldApplyInlineStyle","textColors","backgroundColor","backgroundColors","bold","fontWeight","setDefaultFontWeight","italic","underline","removeProperty","getAttribute","clearFormat","formatType","focus","addUndoSnapshot","clearInlineFormat","isMultiBlock","transverser","getSelectionTraverser","currentBlockElement","getNextBlockElement","isMultiBlockSelection","inlineElement","currentInlineElement","isPartial","PartialInlineElement","NodeInlineElement","currentNode","nextSibling","previousSibling","isNodeWholeBlock","getContainerNode","clearAutoDetectFormat","URI_REGEX","MAILTO_REGEX","FTP_REGEX","getAnchorNodeAtCursor","updateAnchorDisplayText","anchor","displayText","altText","target","url","sanitizer","HtmlSanitizer","document","createElement","href","sanitize","checkXss","trim","linkData","matchLink","normalizedUrl","prefix","search","applyLinkPrefix","originalUrl","selection","getSelectionRangeEx","type","range","ranges","collapsed","getDocument","insertNode","execCommand","traverser","currentInline","getNextInlineElement","deletionInlineList","deleteNode","image","title","updateAnchorTarget","getElementBasedFormatState","event","listTag","getElementAtCursor","getSelectionRange","multiline","startingBlock","getBlockElementAtNode","startContainer","endingBlock","endContainer","equals","headingTag","table","tableFormat","getTableFormatInfo","hasTableHeader","rows","cells","cell","headingLevel","isBullet","isNumbering","isMultilineSelection","headerLevel","canUnlink","canAddImageAltText","isBlockQuote","isCodeInline","isCodeBlock","isInTable","tableHasHeader","canMergeTableCell","getPendableFormatState","getStyleBasedFormatState","getUndoState","isDarkMode","zoomScale","getZoomScale","coordinates","firstCell","lastCell","contentNode","isBlock","isReadonly","position","insertToRegionRoot","focusAfterEntity","display","commitEntity","currentRange","contentPosition","normalize","existingEntity","getEntitySelector","Position","select","regions","getSelectedRegions","chains","VListChain","createListChains","updateCursor","insertOnNewLine","replaceSelection","entity","getEntityFromElement","newLine","insertBefore","applyFormat","getDarkColorHandler","br","querySelector","pos","addDelimiters","nextElementSibling","triggerContentChangedEvent","insertImageWithSrc","src","attribute","setAttribute","imageFileOrSrc","readFile","dataUrl","isDisposed","start","end","textOrRange","exactMatch","searcher","getContentSearcherOfCursor","getRangeFromText","backupRange","endOffset","startOffset","angle","transform","alignment","isATable","elementAtCursor","isWholeTableSelected","VTable","marginLeft","marginRight","alignTable","findClosestElementAncestor","startNode","getStartNode","vList","createVListFromRegion","setAlignment","alignList","align","command","elements","textAlign","alignText","isInnerNode","setColor","direction","fontName","setHeadingLevel","wrapped","heading","div","moveChildNodes","replaceNode","blockElement","cssStyleCallbacks","collapseToSingleElement","toggleHeader","outdent","quote","isFirstItem","items","getNode","getListItemIndex","getStart","shouldHandleWithBlockquotes","indentation","handler","quotesHandled","blockGroups","isTabKeyTextFeaturesEnabled","isFeatureEnabled","block","rootList","setIndentation","writeBack","group","separator","startNumber","DEFAULT_STYLER","borderLeft","borderColor","paddingLeft","styler","listStyle","apiNameOverride","CODE_TAG","SELECTOR","PRE_TAG","code","pre","experimentCommitListChains","meta","getTableCellMetadata","saveTableCellMetadata","bgColorOverride","isUndefined","operation","td","vtable","saveTableSelection","edit","transformToDarkColor","row","col","currentRow","currentCol","newRow","newCol","calculateCellToSelect","newTd","getCell","format","getTableCellWidth","columns","cellSpacing","cellPadding","tr","appendChild","j","width","verticalAlign","runAsync","callback","apiName","safeCallback","isContentEditable","areAllCollapsed","firstChild","triggerPluginEvent","formatState","formatCallback","firstNode","lastNode","contentTraverser","nextInlineElement","applyStyle","styleName","parentNodes","setListItemStyle","applyStyleToListItems","beforeRunCallback","wrapFunction","NodeTag","some","isEmptyBlockUnderTR","getEndNode","forEachCallback","commitListChains","getEnd","chain","commit","formatter","formatName","PendableFormatCommandMap","filter","needToSwitchSelection","formatApiName","isNodeRTL","el","marginInlineStart","marginInlineEnd","parentElement","listType","includeSiblingLists","orderedStyle","unorderedStyle","canAppendAtCursor","equalTo","createVListAtBlock","changeListType","setListStyleType","addUndoSnapshotInternal","core","canUndoByBackspace","entityStates","lifecycle","shadowEditFragment","rangeEx","api","metadata","root","tableId","id","imageId","getSelectionPath","createContentMetadata","contentDiv","undo","snapshotsService","addSnapshot","html","innerHTML","knownColors","darkColorHandler","getKnownColorsCopy","hasNewContent","changeSource","additionalData","data","undoState","isNested","getEntityState","eventType","source","triggerEvent","autoCompletePosition","attachDomEvent","eventMap","disposers","handlerObj","pluginEventType","beforeDispatch","eventName","onEvent","rawEvent","addEventListener","removeEventListener","coreApiMap","createPasteFragment","ensureTypeInContainer","getContent","hasFocus","restoreUndoSnapshot","selectRange","setContent","switchShadowEdit","transformColor","selectTable","selectImage","clipboardData","pasteAsText","applyCurrentStyle","pasteAsImage","pasteType","options","createDefaultHtmlSanitizerOptions","fragment","ownerDocument","createDocumentFragment","sanitizingOption","htmlBefore","htmlAfter","htmlAttributes","createBeforePasteEvent","getPasteType","rawHtml","text","imageDataUri","doc","DOMParser","parseFromString","trustedHTMLHandler","retrieveMetadataFromClipboard","handleImagePaste","body","pendableFormat","styleBasedFormat","isBold","isItalic","isUnderline","getCurrentFormat","applyTextStyle","handleTextPaste","sanitizePasteContent","createFragmentFromClipboardData","keyboardEvent","formatNode","isNodeEmpty","brEl","append","shouldSetNodeStyles","innerText","wasNodeJustCreatedByKeyboardEvent","createRange","domEvent","selectionRange","mode","clonedNode","content","triggerExtractContentEvent","includeSelectionMarker","getTextContent","clonedRoot","cloneNode","originalRange","shadowEditSelectionPath","getHtmlWithSelectionPath","forceGetStateFromDOM","cachedPendableFormatState","pendingFormatState","pendableFormatState","cachedPosition","pendableFormatPosition","currentPosition","isSamePosition","pendableKeys","PendableStyleCheckers","CssFalsyCheckers","queryCommandStateFromDOM","textDecoration","fontStyle","isSubscript","isSuperscript","isStrikeThrough","tryGetFromCache","defaultView","getSelection","rangeCount","getRangeAt","createNormalSelectionEx","checkAllCollapsed","shadowEditTableSelectionPath","shadowEditImageSelectionPath","shadowRange","tableSelectionRange","imageSelectionRange","override","pendableFormatSpan","styleTextColor","styleBackColor","getComputedStyles","getPropertyValue","parseColorValue","backColor","lightModeColor","darkModeColor","marginTop","marginBottom","activeElement","option","isBegin","getFirstLastBlockElement","refNode","insertedNode","rangeToRestore","cloneRange","getInitialRange","deleteContents","getRegionsFromRange","isAtEnd","splitTextNode","offset","splitParentNode","adjustInsertPositionRegionRoot","tempPos","adjustInsertPositionNewLine","adjustInsertPosition","nodeForCursor","lastChild","step","snapshot","move","isRestoring","registerColor","entityState","state","arg1","arg2","arg3","arg4","isSelectionRangeEx","isSelectionPath","isNodePosition","buildRangeEx","skipReselectOnFocus","selectionRangeEx","applyRangeEx","STYLE_ID","unselect","removeImportantStyleRule","borderCSS","buildBorderCSS","setGlobalCssStyles","imageSelectionBorderColor","removeGlobalCssStyle","skipSameRange","addRangeToSelection","restorePendingFormatState","input","coordinate","isValidCoordinate","areValidCoordinates","contentDivSelector","selectors","vTable","isAllTableSelected","tableSelector","tableRange","Range","selectNode","handleAllTableSelected","tr1","td1","tr2","td2","firstSelected","lastSelected","tableChildren","cont","indexes","rowIndex","tdCount","midElement","ind","middleElSelector","cellIndex","removeImportant","selector","generateCssFromCell","elementsSelector","rowRange","setStartBefore","setEndAfter","handleTableSelected","cssRules","currentRules","shift","buildCss","css","item","isMergedCell","cellToSelect","cellTag","index","contentChanged","newContent","entities","entityMap","restoreContentWithEntityPlaceholder","metadataFromContent","extractContentMetadata","selectContentMetadata","isOn","shadowEditEntities","wasInShadowEdit","getShadowEditSelectionPath","selectionType","shadowEditSelection","moveContentWithEntityPlaceholders","selectionPath","tableElement","iterateElements","transformer","includeSelf","isHTMLElement","child","htmlElement","Node","ELEMENT_NODE","forceTransform","fromDarkMode","onExternalContentTransform","toDarkMode","transformElementColor","allowedEventsInShadowEdit","pluginEvent","broadcast","plugins","plugin","onPluginEvent","willHandleEventExclusively","handledExclusively","applyId","idPrefix","getElement","getElementById","querySelectorAll","disposer","onPaste","extractClipboardEvent","paste","allowedCustomPasteType","getTempDiv","removeTempDiv","cleanUpAndRestoreSelection","getName","initialize","addDomEventHandler","e","copy","onCutCopy","cut","dispose","getState","isCut","setHtmlWithMetadata","getTrustedHTMLHandler","newRange","createTableRange","deleteTableContent","deleteImage","deleteSelectedContent","forceInLightMode","getCustomData","tempDiv","removeChild","isCopy","restoreRange","Browser","isAndroid","collapse","clonedVTable","removeCellsOutsideSelection","selectedVTable","forEachSelectedCell","wholeTableSelected","isWholeColumnSelected","onDragStart","dragEvent","preventDefault","onDrop","onFocus","onKeyDownDocument","which","defaultPrevented","cacheSelection","onMouseDownDocument","onScroll","scrollContainer","onKeyboardEvent","isCharacterValue","stopPropagation","onInputEvent","onContextMenuEvent","allItems","elementBeforeCursor","getInlineElementBefore","eventTargetNode","button","contextMenuProviders","provider","getContextMenuItems","arrayPush","isInIME","stopPrintableKeyboardEventPropagation","allowKeyboardEventPropagation","isContextMenuProvider","eventHandlers","keypress","getEventHandler","keydown","keyup","mousedown","contextmenu","compositionstart","compositionend","dragstart","drop","isIE","isSafari","isIEOrEdge","beforedeactivate","blur","features","hasFunctionKey","ctrlOrMeta","isKeyDownEvent","isCtrlOrMetaPressed","altKey","feature","allowFunctionKeys","shouldHandleEvent","handleEvent","handledByEditFeature","ENTITY_ID_REGEX","ALLOWED_CSS_CLASSES","REMOVE_ENTITY_OPERATIONS","handleCutEvent","checkRemoveEntityForRange","handleMouseUpEvent","handleKeyDownEvent","handleBeforePasteEvent","handleContentChangedEvent","handleExtractContentWithDomEvent","handleContextMenuEvent","handleEntityOperationEvent","inlineEntityOnPluginEvent","entityElement","isClicking","workaroundSelectionIssueForIE","additionalAllowedCssClasses","shouldNormalizeDelimiters","isDeleted","getExistingEntities","ensureUniqueId","handleNewEntity","normalizeDelimitersInEditor","editableEntityElements","isFullyCovered","newItem","shouldPersist","canPersist","exec","baseId","substr","newId","workaroundButton","onblur","mouseTarget","mouseSelection","keyDownSelection","contextMenuTarget","actualSelection","CONTENT_EDITABLE_ATTRIBUTE_NAME","COMMANDS","isFirefox","DARK_MODE_DEFAULT_FORMAT","initializer","initialContent","contentEditable","userSelect","webkitUserSelect","adjustColor","doNotAdjustEditorColor","getDarkColor","customData","inDarkMode","experimentalFeatures","adjustBrowserBehavior","mouseUpEventListerAdded","mouseDownX","mouseDownY","onMouseUp","removeMouseUpEventListener","pageX","pageY","normalizeTables","normalizeTableFromEvent","shiftKey","li","prevElement","changeElementTag","tables","isChanged","isDOMChanged","tbody","colgroups","thead","colgroup","clear","getCurrentPosition","createPendingFormatSpan","span","currentStyle","createTextNode","setProperty","isRangeEmpty","styledAncestor","focusedPosition","getFocusedPosition","isMobileOrTablet","setTimeout","snapshots","service","lastKeyPress","undoMetadataSnapshotService","undoSnapshotService","canMove","isAutoCompleteSnapshot","clearRedo","canUndoAutoComplete","createSnapshots","canMoveCurrentSnapshot","moveCurrentSnapshot","addSnapshotV2","clearProceedingSnapshotsV2","ctrlKey","canUndo","canRedo","onKeyDown","onKeyPress","clearRedoForInput","onContentChanged","onBeforeKeyboardEditing","evt","metaKey","corePluginOverride","typeInContainer","_placeholder","typeAfterLink","mouseUp","copyPaste","imageSelection","normalizeTable","corePlugins","DELIMITER_SELECTOR","ZERO_WIDTH_SPACE","INLINE_ENTITY_SELECTOR","preventTypeInDelimiter","delimiter","textNode","nodeValue","className","setPosition","getDelimiterFromElement","sibling","classList","previousElementSibling","removeNode","removeDelimiterAttr","addDelimitersIfNeeded","isEntityElement","checkEntity","entitySibling","remove","cn","isAfter","getBlock","blockToCheck","delimiters","matchesSelector","handleCollapsedEnter","startElement","endElement","startUpdate","getPosition","endUpdate","aEditor","handleSelectionNotCollapsed","container","_","ColorAttributeEnum","VARIABLE_REGEX","ColorAttributeName","values","colorKey","parsedColor","reset","isInDarkMode","startsWith","findLightColorFromDarkColor","darkColor","rgbSearch","parseColor","find","rgbCurrent","names","createEditorCore","Editor","EditorBase","coreCreator","getCore","existingNode","toNode","transformColorForDarkMode","replaceChild","scopeOrCallback","scope","selectionEx","collapseNodes","canSplitParent","isEmpty","insertContent","allNodes","applyCurrentFormat","snapshotBeforePaste","sel","focusNode","focusOffset","startFrom","cacheGetEventData","isPositionAtBeginning","isPositionAtBeginningOf","nameOrMap","eventsToMap","redo","getScrollContainer","getter","getBodyTraverser","ContentTraverser","createBodyTraverser","createSelectionTraverser","getBlockTraverser","createBlockTraverser","PositionContentSearcher","win","window","handle","requestAnimationFrame","cancelAnimationFrame","setEditorDomAttribute","getEditorDomAttribute","getRelativeDistanceToEditor","addScroll","editorRect","getBoundingClientRect","elementRect","left","top","scrollLeft","scrollTop","addContentEditFeature","removeContentEditFeature","featureSet","setDarkModeState","nextDarkMode","startShadowEdit","stopShadowEdit","isInShadowEdit","getSizeTransformer","sizeTransformer","setZoomScale","scale","oldValue","oldZoomScale","newZoomScale","getVisibleViewport","pluginState","getPluginState","getIntersectedRect","coreApiOverride","originalApi","size","STRUCTURE_NODE_TAGS","endNode","getBlockContext","nodeContext","StartEndBlockElement","blockContext","newNode","findHeadTailLeafNode","containerBlockNode","isTail","headNode","tailNode","isFirst","rangeBeforePaste","dataTransfer","then","CLIPBOARD_HTML_HEADER_REGEX","OTHER_TEXT_TYPE","EDGE_LINK_PREVIEW","ContentHandlers","isEdge","headerValues","workaroundForEdge","customValues","linkPreview","parse","pasteNativeEvent","types","files","Promise","all","kind","resolve","file","getAsFile","textType","getAllowedCustomType","getAsString","getData","nextStep","img","maxWidth","transformTabCharacters","initialOffset","tIndex","line","lineBefore","lineAfter","tabCount","fill","lines","includes","processStyles","reduce","attrs","htmlFirstLevelChildTags","TEXT_NODE","nodeTag","COMMENT_NODE","head","additionalGlobalStyleNodes","startIndex","endIndex","lastIndexOf","START_FRAGMENT","END_FRAGMENT","convertGlobalCssToInlineCss","getStartBlockElement","getStartInlineElement","getFirstInlineElement","isBlockInScope","trimInlineElement","scoper","skipTags","currentBlock","getPreviousNextBlockElement","getPreviousBlockElement","isNext","leaf","getLeafSibling","newBlock","getPreviousNextInlineElement","getPreviousInlineElement","newInline","getInlineElementBeforeAfter","getStartPosition","getParentBlock","previousInlineElement","getNextPreviousInlineElement","WHITESPACE_REGEX","word","inlineBefore","inlineAfter","traversingComplete","inlineElements","nearestNonTextInlineElement","getWordBefore","traverse","getInlineElementAfter","getSubStringBefore","startPosition","endPosition","textIndex","forEachTextInlineElement","textInline","nodeContent","nodeIndex","charCodeAt","getNearestNonTextInlineElement","previousInline","isTextualInlineElement","matches","blockNode","getLastInlineElement","getFirstLastInlineElementFromBlockElement","startInline","startBlock","inScope","selStartBlock","selEndBlock","inline","getEndPosition","startPartial","endPartial","addDelimiterAfter","insertDelimiter","addDelimiterBefore","isDelimiter","delimiterClass","children","insertPosition","insertAdjacentElement","entityWrapper","delimiterAfter","delimiterBefore","NOT_EDITABLE_SELECTOR","adjustSteps","nodeToInsert","safeRemove","normalizedPosition","nextNode","splitter","rootNodeToInsert","isFragment","rootNodes","hasBrNextToRoot","listItem","listNode","tdNode","shouldInsertListAsText","inlineElementBefore","inlineElementAfter","adjustInsertPositionForNotEditableNode","nonEditableElement","lastNonEditableElement","posBefore","rangeToTraverse","nextBlockElement","tempRange","ensureBeforeAndAfter","isStart","nodeBefore","nodeAfter","emptyNode","nodesToDelete","nodesPairToMerge","regionRange","commonAncestorContainer","beforeEnd","afterEnd","beforeStart","afterStart","CONTENT_EDITABLE","removeUntil","nodeToStop","nodeToRemove","tryGetWrapperFromEntityPlaceholder","getPlaceholder","placeholder","entitySelector","next","nodeToAppend","insertClonedNode","isEntity","eventDataCache","isCtrlOrMetaPressedImpl","isMac","isCtrlKey","isAltKey","isMetaKey","elementCallbacks","cloneObject","styleCallbacks","getStyleCallbacks","attributeCallbacks","tagReplacements","getTagReplacement","additionalTagReplacements","allowedAttributes","getAllowedAttributes","additionalAllowedAttributes","allowedCssClassesRegex","getAllowedCssClassesRegex","defaultStyleValues","getDefaultStyleValues","additionalDefaultStyleValues","additionalPredefinedCssForElement","preserveHtmlComments","unknownTagReplacement","convertInlineCss","additionalStyleNodes","sanitizeHtml","currentStyles","currentElementOrStyle","convertCssOnly","processNode","styleNodes","styleSheets","reverse","sheet","styleSheet","styleRule","cssText","CSSRule","STYLE_RULE","selectorText","context","isElement","isText","isComment","shouldKeep","replacement","test","whiteSpace","thisStyle","processAttributes","preprocessCss","processCss","predefinedStyles","isInheritable","keep","isCssVariable","processCssVariable","newValue","processCssClass","originalValue","calculatedValue","originalClasses","calculatedClasses","newCallback","cloneObjectImpl","assign","existingObj","HTML_TAG_REPLACEMENT","abbr","address","area","article","aside","bdi","bdo","blockquote","canvas","caption","center","cite","datalist","dd","del","details","dfn","dialog","dir","dl","dt","em","fieldset","figcaption","figure","font","footer","h1","h2","h3","h4","h5","h6","header","hgroup","ins","kbd","label","legend","main","mark","menu","menuitem","meter","nav","ol","optgroup","output","picture","progress","rp","rt","ruby","samp","section","small","strike","strong","sub","summary","sup","textarea","tfoot","th","time","tt","u","ul","var","wbr","xmp","form","applet","audio","base","basefont","embed","frame","frameset","iframe","noscript","param","script","slot","template","track","video","ALLOWED_HTML_ATTRIBUTES","DEFAULT_STYLE_VALUES","overflow","padding","border","float","removeValue","removeWidthForLiAndDiv","tagName","additionalReplacements","replacements","additionalAttributes","additionalCssClasses","patterns","additionalDefaultStyles","callbacks","INHERITABLE_PROPERTIES","PREDEFINED_CSS_FOR_ELEMENT","B","EM","I","U","P","PRE","S","STRIKE","SUB","SUP","getBrowserInfo","getPreviousLeafSibling","getLastLeafNode","KnownCreateElementData","moveCurrentSnapsnot","createEntityPlaceholder","createNumberDefinition","createBooleanDefinition","createStringDefinition","createArrayDefinition","createObjectDefinition","getMetadata","setMetadata","removeMetadata","parentBlock","containerNode","getDecoratedInline","thisStart","otherEnd","previousNode","STYLET_AGS","callStylerWithInnerNode","formatNodes","fromPosition","toPosition","parentTag","newNodeValue","startingNode","nodeChain","resolveInlineElement","mainArray","itemsArray","apply","collection","moveChildNodesToLi","moveLiToList","populateItems","getLastItemNumber","getListType","getLevel","isDummy","shouldReuseAllAncestorListElements","disableListChain","lastList","listStack","newListStart","getNewListStart","topList","applyListStyle","setNewListStart","softOutdent","preventItemRemoval","shouldAddMargin","findListItems","setIsDummy","indent","addNegativeMargins","flexDirection","alignSelf","targetType","needChangeType","styleMetadata","orderedStyleType","getValidValue","unorderedStyleType","createListStyleMetadata","ListStyleDefinitionMetadata","appendItem","mergeVList","list","listIndex","listStartPos","listEndPos","listTypes","newListTypes","isListElement","currentItem","furtherNodes","CHAIN_DATASET_NAME","AFTER_CURSOR_DATASET_NAME","lastChainIndex","lastNumber","lastNumberBeforeCursor","nameGenerator","canAppendToTail","createListChainName","afterCurrentNode","applyChainName","lists","getLists","vlist","dataset","isAfterCurrentNode","orderListStyles","unorderedListStyles","NEGATIVE_MARGIN","stylesToInherit","attrsToInherit","dummy","isOrphanItem","canMerge","mergeItems","wrapIfNotBlockNode","margin","expectedLength","isFirstLevel","originalRoot","nextLevel","listStackEndIndex","stackLength","newList","createListElement","getDeepChildIndex","listStyleType","isLi","stylesToApply","attrValue","deepIndex","newRoot","checkFirst","checkLast","ALPHABET","decimal","isLowerCase","RomanValues","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","romanValue","timesRomanCharAppear","repeat","ListSelector","tryIncludeSiblingNode","fullSelectionStart","fullSelectionEnd","nodeForItem","createVListFromItemNode","getListTypeFromNode","ancestor","marker","bulletListStyle","isDisc","isCssStyle","elementsStyles","styleValue","getInlineChildElementsStyle","styleValues","Set","MarkerTypes","numberingListStyle","markerSeparator","markerSecondSeparator","markerType","lowerCase","markerNumber","Roman","Alpha","Decimal","isOptional","minValue","maxValue","allowNull","itemDef","minLength","maxLength","propertyDef","MetadataDataSetName","definition","defaultValue","def","metadataKey","currentMetadata","validate","n1","n2","abs","validator","GOOGLE_SHEET_NODE_NAME","PROG_ID_NAME","EXCEL_DESKTOP_ATTRIBUTE_NAME","WAC_IDENTIFY_SELECTOR","props","getSourceFunctions","Map","shouldConvertSingleImage","func","nodesOrBlockElements","regionTypeData","outerSelector","innerSelector","getRegionCreator","fullRange","firstNodeOfRegion","lastNodeOfRegion","firstNodeValid","lastNodeValid","bothValid","areNodesValid","iterateNodes","creator","boundary","started","innerNode","ended","outerNode","boundaries","previousOuterNode","newRegions","boundaryTree","allBoundaries","inSelectionOuterNode","thisInnerNode","thisOuterNode","buildBoundaryTree","regionBase","createBlockIfEmpty","deprecated","isRegion","regionStart","regionEnd","compareDocumentPosition","targetNode","blockRoot","commonContainer","nodeToMerge","nodeOrPosition","offsetOrPosType","isFromEndOfRange","getIndexOfNode","getEndOffset","newOffset","needAddRange","removeAllRanges","addRange","getFocusablePosition","getPositionFromPath","setStart","setEnd","rect","rects","getClientRects","getPositionPath","isPreviousText","areAllPreviousNodesEmpty","NumberArrayDefinition","CoordinatesDefinition","IsDarkModeDefinition","NormalContentMetadataDefinition","TableContentMetadataDefinition","ImageContentMetadataDefinition","potentialMetadataComment","getLength","compare","defaultCompare","currentSnapshot","currentIndex","isSameSnapshot","totalSize","removeCount","maxSize","autoCompleteIndex","compareSnapshots","s1","s2","newIndex","clearProceedingSnapshots","removedSize","pair","valueIndex","styleId","styleTag","styleProperties","modifiedStyles","cssRule","insertRule","trimmedName","trimmedValue","DEFAULT_FORMAT","topBorderColor","bottomBorderColor","verticalBorderColor","hasHeaderRow","hasFirstColumn","hasBandedRows","hasBandedColumns","bgColorEven","bgColorOdd","headerRowColor","tableBorderFormat","keepCellShade","normalizeSize","formatInfo","trs","tableSelection","getTableFromTd","sourceCol","targetCol","colSpan","rowSpan","hasTd","spanLeft","spanAbove","height","skipApplyFormat","recalculateSpans","recalculateCellHeight","saveTableInfo","isEmptyCell","deleteCellShadeDataset","currentCell","firstRow","lastRow","firstColumn","lastColumn","cloneCell","countSpanAbove","colIndex","nextCell","newCell","getTd","forEachCellOfCurrentColumn","countSpanLeft","forEachCellOfColumn","forEachCellOfRow","removedRows","removedColumns","rowStep","aboveCell","belowCell","mergeCells","colStep","leftCell","rightCell","nextCellBelow","nextCellRight","splitRow","setAlignmentToSelectedCells","alignmentType","isVertical","vAlignOverride","horizontally","checkSpans","mergeCellContents","childElementCount","cellTd","nextCellTd","getCellsWithBorder","borderPos","getLeftCells","cellRect","found","right","forEachCellOfCurrentRow","getCurrentTd","normalizeEmptyTableCells","normalizeTableCellSize","setHTMLElementSizeInPx","newWidth","newHeight","boxSizing","TRANSPARENT","hasCellShade","getBorderStyle","borderCollapse","isFirstRow","isLastRow","isFirstColumn","isLastColumn","borderTop","borderRight","borderBottom","setBorderColors","borderLeftColor","borderRightColor","borderTopColor","borderBottomColor","formatBorders","setBordersType","shouldColorWholeTable","hasValign","setCellFormat","setFirstColumnFormat","setHeaderRowFormat","styledCell","rowsLength","rowCells","firstX","firstY","lastX","lastY","currentTd","newTable","currentTable","cursorRow","cursorCol","BooleanDefinition","TableCellFormatMetadata","NullStringDefinition","TableFormatMetadata","isAndroidRegex","userAgent","appVersion","vendor","userAgentOrVendor","isIE11OrGreater","isChrome","isWebKit","isWin","navigator","elementStyle","newTag","origianlTag","newElement","ref","contained","treatSameNodeAsContain","internalContains","contenteditable","elementData","namespace","createElementNS","datasetName","attrName","childElement","closest","styleNames","px","tempNode","additionalRects","bottom","getLeafNode","getChild","ignoreSpace","getSibling","curNode","shouldContinue","queryCommandState","BLOCK_ELEMENT_TAGS","BLOCK_DISPLAY_STYLES","node1","node2","VISIBLE_ELEMENT_TAGS","VISIBLE_CHILD_ELEMENT_SELECTOR","trimContent","shouldCountBrAsVisible","visibleSelector","HTML_VOID_ELEMENTS","httpExcludeRegEx","labelRegEx","domainPortWithUrlRegEx","domainPortRegEx","linkMatchRules","http","except","normalizeUrl","https","mailto","notes","unc","ftp","news","telnet","gopher","wais","schema","rule","scheme","msMatchesSelector","keepExistingChildren","clientRect","HEX3_REGEX","HEX6_REGEX","RGB_REGEX","RGBA_REGEX","checkPosition","targets","nodeContainedByRangeOnly","targetPositions","FileReader","onload","onerror","readAsDataURL","getTargetWindow","typeName","targetWindow","mainWindow","mainWindowType","ColorTones","WHITE","isBackgroundColor","shouldAdaptTheFontColor","modeIndependentColor","cssName","colorValue","lightModeBackgroundColor","colorValues","calculateLightness","isADarkOrBrightColor","adaptFontColorToBackgroundColor","CRLF","CRLF_SPACE","shouldSkipNode","splitBefore","newParent","temp","returnFirstPart","firstPart","secondPart","MOUSE_EVENT_INFO_DESKTOP","MOUSEDOWN","MOUSEMOVE","MOUSEUP","getPageXY","MOUSE_EVENT_INFO_MOBILE","targetTouches","touch","trigger","onSubmit","forceMobile","initX","initY","initValue","onMouseDown","addDocumentEvents","dndMouse","onMouseMove","deltaX","deltaY","onDragging","removeDocumentEvents","onDragEnd","stringsMapOrGetter","ariaLiveElement","getAnnounceData","announce","announceData","defaultStrings","formatStrings","textToAnnounce","formatString","getString","createAriaLiveElement","getAriaLiveElement","specialCharacters","lastKeyTyped","keyTyped","textBeforeCursor","dashes","isPrecededByADash","isPrecededByASpace","settingsOverride","additionalFeatures","allFeatures","hasSettingForKey","defaultDisabled","disposeFeatures","TRAILING_PUNCTUATION_REGEX","AutoLink","cacheGetLinkData","replaceWithNode","clearEventDataCache","UnlinkWhenBackspaceAfterLink","contentSearcher","LinkInlineElement","removeLink","trailingPunctuation","AutoLinkFeatures","autoLink","unlinkWhenBackspaceAfterLink","RemoveCodeWhenEnterOnEmptyLine","childOfCode","cacheGetCodeChild","splitCode","RemoveCodeWhenBackspaceOnEmptyFirstLine","codeElement","currentContainer","codeChild","codeParent","preParent","CodeFeatures","removeCodeWhenEnterOnEmptyLine","removeCodeWhenBackspaceOnEmptyFirstLine","NoCycleCursorMove","rtl","CursorFeatures","noCycleCursorMove","ClickOnEntityFeature","cacheGetReadonlyEntityElement","EscapeFromEntityFeature","EnterBeforeReadonlyEntityFeature","cacheGetNeighborEntityElement","newContainer","BackspaceAfterEntityFeature","DeleteBeforeEntityFeature","collapseOnly","regionRoot","entityNode","triggerOperation","MoveBetweenDelimitersFeature","getIsDelimiterAtCursor","checkBefore","cacheGetCheckBefore","cacheDelimiter","getRelatedElements","delimiterPair","positionType","extend","RemoveEntityBetweenDelimitersFeature","cacheEntityBetweenDelimiter","focusedElement","class","pairClass","isAtEndOrBeginning","getNextSibling","elAtCursor","shouldHandle","removeDelimiters","getElementFromInline","EntityFeatures","clickOnEntity","escapeFromEntity","enterBeforeReadonlyEntity","backspaceAfterEntity","deleteBeforeEntity","moveBetweenDelimitersFeature","removeEntityBetweenDelimiters","PREVIOUS_BLOCK_CACHE_KEY","NEXT_BLOCK_CACHE_KEY","getAnnounceDataForList","listItemIndex","VList","stringToAnnounce","convertDecimalsToAlpha","convertDecimalsToRoman","shouldHandleIndentationEvent","indenting","keyCode","cacheGetListElement","handleIndentationEvent","currentElement","isRTL","IndentWhenTab","OutdentWhenShiftTab","IndentWhenAltShiftRight","OutdentWhenAltShiftLeft","MergeInNewLine","blockFormat","toggleListAndPreventDefault","OutdentWhenBackOn1stEmptyLine","getElementsByTagName","MaintainListChainWhenDelete","getCacheNextSibling","getListChains","OutdentWhenEnterOnEmptyLine","AutoBulletList","shouldTriggerList","textRange","prepareAutoBullet","toggleBullet","AutoNumberingList","number","isFirstItemOfAList","getPreviousListItem","toggleNumbering","getPreviousListType","letter","MaintainListChain","listInfo","listElement","toggleListType","getListStyle","isATheBeginning","listChains","previousListType","shouldTriggerNewListStyle","MergeListOnBackspaceAfterList","cursorBlock","isList","nearestInline","tempBlock","nextElement","previousList","targetBlock","rangeBeforeWriteBack","fvList","ListFeatures","autoBullet","indentWhenTab","outdentWhenShiftTab","outdentWhenBackspaceOnEmptyFirstLine","outdentWhenEnterOnEmptyLine","mergeInNewLineWhenBackspaceOnFirstChar","maintainListChain","maintainListChainWhenDelete","autoNumberingList","autoBulletList","mergeListOnBackspaceAfterList","outdentWhenAltShiftLeft","indentWhenAltShiftRight","generateBasicMarkdownFeature","triggerCharacter","elementTag","useShiftKey","cacheGetRangeForMarkdownOperation","lastTypedTriggerPosition","hasLastTypedTrigger","textContentRange","extractContents","elementToWrap","nonPrintedSpaceTextNode","handleMarkdownEvent","textInlineElement","inlineTextContent","parentBlockText","contentIndex","MarkdownBold","MarkdownItalic","MarkdownStrikethrough","MarkdownInlineCode","MarkdownFeatures","markdownBold","markdownItalic","markdownStrikethru","markdownInlineCode","QUOTE_TAG","STRUCTURED_TAGS","UnquoteWhenBackOnEmpty1stLine","childOfQuote","cacheGetQuoteChild","splitQuote","UnquoteWhenEnterOnEmptyLine","shouldClearFormat","isStyledBlockquote","QuoteFeatures","unquoteWhenBackspaceOnEmptyFirstLine","unquoteWhenEnterOnEmptyLine","createCommand","winKey","macKey","action","disabled","commands","toggleBold","toggleItalic","toggleUnderline","changeFontSize","DefaultShortcut","cacheGetCommand","getModifierState","cmd","ShortcutFeatures","defaultShortcut","CHILD_PARENT_TAG_MAP","TD","TH","LI","CHILD_SELECTOR","InsertLineBeforeStructuredNodeFeature","cacheGetStructuredElement","StructuredNodeFeatures","insertLineBeforeStructuredNodeFeature","TabInTable","cacheGetTableCell","cacheIsWholeTableSelected","cacheVTable","tableCells","editTable","newPos","IndentTableOnTab","UpDownInTable","isUp","hasShiftKey","targetTd","setBaseAndExtent","DeleteTableWithBackspace","firstTd","TableFeatures","tabInTable","upDownInTable","indentTableOnTab","deleteTableWithBackspace","IndentWhenTabText","listOrTable","insertTab","shouldSetIndentation","OutdentWhenTabText","firstBlock","lastBlock","blockStart","blockEnd","rangeBefore","rangeAfter","numberOfChars","MAX_SAFE_INTEGER","span2","TextFeatures","indentWhenTabText","outdentWhenTabText","autoHyphen","bulletListType","NumberingTypes","Character","characters","lowerRomanTypes","upperRomanTypes","numberingTriggers","lowerRomanNumbers","upperRomanNumbers","numberingListTypes","DecimalsTypes","LowerAlphaTypes","UpperAlphaTypes","LowerRomanTypes","UpperRomanTypes","previousListChain","previousListStyle","isDoubleParenthesis","indexNumber","isValidNumbering","numbering","separatorCharacter","numberingType","identifyNumberingType","identifyNumberingListType","isMenuShowing","onDismiss","dismiss","allowDefaultMenu","initContainer","render","makeReplacement","sourceString","replacementHTML","matchSourceCaseSensitive","shouldReplace","defaultReplacements","longestReplacementLength","replacementEndCharacters","updateReplacements","newReplacements","endChars","lastChar","add","getReplacementEndCharacters","has","stringToSearch","getMatchingReplacement","matchingText","matchingRange","parsingSpan","originalStringToSearch","lowerCaseStringToSearch","sourceMatch","replacementMatch","expectedChangeSource","cacheListChains","selectedRegions","getTooltipCallback","onLinkClick","originalHref","trackedLink","onMouse","tryGetHref","onBlur","updateLinkHrefIfShouldUpdate","resetLinkTracking","mouseover","mouseout","isContentEditValue","shouldCheckUpdateLink","doesLinkDisplayMatchHref","srcElement","open","updateLinkHref","escapedDisplay","DIRECTIONS","DirectionRad","DirectionOrder","DefaultOptions","minWidth","minHeight","preserveRatio","minRotateDeg","imageSelector","rotateIconHTML","disableCrop","disableRotate","disableSideResize","onSelectState","ImageEditHTMLMap","getCornerResizeHTML","getSideResizeHTML","getRotateHTML","getCropHTML","onShowResizeHandle","clonedImage","editInfo","lastSrc","dndHelpers","wasResized","shadowSpan","isCropping","pngSource","setEditingImage","removeWrapper","updateWrapper","cropContainers","getEditElements","cropOverlays","resizeHandles","rotateCenter","rotateHandle","cropHandles","angleRad","bottomPercent","leftPercent","rightPercent","topPercent","flippedHorizontal","flippedVertical","targetWidth","targetHeight","originalWidth","originalHeight","visibleWidth","visibleHeight","marginHorizontal","marginVertical","cropLeftPx","cropRightPx","cropTopPx","cropBottomPx","borderStyle","borderWidth","getPx","setWrapperSizeDimensions","flippedHorizontally","flippedVertically","setFlipped","setSize","updateHandleCursor","elementClass","clientWidth","clientHeight","doubleCheckResize","viewport","isSmall","isASmallImage","updateRotateHandleState","handles","isSideHandle","updateSideHandlesVisibility","allowedOperations","clearDndHelpers","deleteEditInfo","isOperationAllowed","operationOrSelect","getEditInfoFromImage","tryToConvertGifToPng","isFixedNumberValue","checkIfImageWasResized","createWrapper","createDndHelpers","Resizer","Rotator","Cropper","flipImage","rotateImage","widthPx","heightPx","rotateHandleBackColor","isSmallImage","getResizeBordersHTML","thisOperation","insertImageWrapper","shadowRoot","attachShadow","dragAndDrop","helper","cursor","radIndex","idx","handleRadIndexCalculator","originalDirection","originalIndex","rotatedIndex","rotateHandles","numberValue","MIN_HEIGHT_WIDTH","getContext","drawImage","getImageData","percentage","RESIZE_HANDLE_SIZE","RESIZE_HANDLE_MARGIN","ROTATE_SIZE","ROTATE_GAP","DEG_PER_RAD","DEFAULT_ROTATE_HANDLE_HEIGHT","ROTATE_ICON_MARGIN","ROTATION","sw","nw","ne","se","Xs","Ys","ROTATE_WIDTH","ROTATE_HANDLE_TOP","CROP_HANDLE_SIZE","CROP_HANDLE_WIDTH","XS_CROP","YS_CROP","previousSrc","wasResizedOrCropped","editingImage","newSrc","initEditInfo","originalSrc","saveEditInfo","ImageEditInfoState","ROTATE_KEYS","CROP_KEYS","ROTATE_CROP_KEYS","ALL_KEYS","areSameNumber","compareTo","naturalWidth","naturalHeight","getInitialEditInfo","imageWidth","imageHeight","devicePixelRatio","translate","toDataURL","beforeCrop","newEditInfo","crop","basePercentage","deltaValue","fullValue","currentPercentage","dx","dy","rotateCoordinate","widthPercent","heightPercent","fullWidth","fullHeight","newLeft","newRight","newTop","newBottom","overlayHTML","containerHTML","leftOrRight","topOrBottom","rotation","layer","getCropHandleHTMLInternal","getCropHTMLInternal","HandleTypes","hypotenuse","getResizeHandleHTML","handleTypes","setHandleStyle","horizontalOnly","verticalOnly","shouldPreserveRatio","actualWidth","actualHeight","resizeBorderColor","getRotateIconHTML","d","stroke","newX","newY","angleInRad","angleInDeg","rotateCenterRect","wrapperRect","ROTATOR_HEIGHT","adjustedDistance","rotateGap","rotateTop","handleLeft","selectionBorderColor","forcePreserveRatio","resizableImageSelector","showResizeHandle","hideResizeHandle","selectImageAfterUnSelect","convertSingleImageBody","getPasteSource","chainSanitizerCallback","sanitizeBlockStyles","isPureLiNode","childNode","LAST_TD_END_REGEX","LAST_TR_END_REGEX","LAST_TR_REGEX","LAST_TABLE_REGEX","excelHandler","trMatch","tableMatch","replaceChildren","processBlock","checkAndAddBr","blocksLength","insertPositionNode","listItemContainers","TABLE_TEMP_ELEMENTS_QUERY","isWordOnlineWithList","WORD_ONLINE_IDENTIFYING_SELECTOR","LIST_CONTAINER_ELEMENT_CLASS_NAME","VALID_LIST_STYLE_CHAR_CODES","createNewList","listItemContainer","startAttribute","firstElementChild","insertConvertedListToDoc","convertedListElement","listItemBlock","replaceRegex","prevParent","nextParent","sanitizeListItemContainer","listElements","curListItemBlock","curItem","lastItemInCurBlock","createListItemBlock","getListItemBlocks","itemBlock","flattenListBlock","getContainerListType","itemLevel","listRootElement","itemToInsert","curListLevel","lastElementChild","lastChildTag","insertListItem","parentContainer","getImageNodes","DeprecatedColorList","property","SUPPORTED_PROTOCOLS","URL","protocol","validateLink","listsMetadata","currentUniqueListId","listItems","currentListIdsByLevels","createLevelLists","lastProcessedItem","NODE_ID_ATTRIBUTE_NAME","getAndSetNodeId","wordCustomData","nextNodeId","dict","MSO_COMMENT_PARENT","MSO_COMMENT_REFERENCE","MSO_COMMENT_DATE","MSO_COMMENT_ANCHOR_HREF_REGEX","MSO_COMMENT_CONTINUATION","MSO_COMMENT_DONE","PERCENTAGE_REGEX","wordConverter","createWordConverter","wordConverterArgs","createWordConverterArguments","processNodesDiscovery","processNodeConvert","parsedLineHeight","UNIQUE_LIST_ID_CUSTOM_DATA","MSO_LIST_STYLE_NAME","LINE_BREAKS","getOrCreateListForNode","listMetadata","recurringGetOrCreateListAtNode","listId","getObject","uniqueListId","setObject","convertListIfNeeded","possibleList","getRealPreviousSibling","cleanupListIgnore","levels","nodesToRemove","isEmptySpan","fixWordListComments","isIgnoreNode","getListItemMetadata","listAttribute","getStyleValue","listProps","wordListId","originalNode","isFakeBullet","fakeBullet","getFakeBulletText","removeComments","endComment","getRealNextSibling","newSpan","prevSibling","isEmptyTextNode","resetCurrentLists","ll","itemMetadata","levelInfo","ignore","numberOfItems","secondFakeBullet","firstFakeBullet","nextUniqueId","clone","textIndent","numBulletsConverted","numNumberedConverted","createCustomData","BACKSPACE_CHAR_CODE","ESC_CHAR_CODE","LEFT_ARROW_CHAR_CODE","UP_ARROW_CHAR_CODE","RIGHT_ARROW_CHAR_CODE","DOWN_ARROW_CHAR_CODE","DELETE_CHAR_CODE","UNIDENTIFIED_CODE","dataProvider","pickerOptions","eventHandledOnKeyDown","blockSuggestions","isSuggesting","lastKnownRange","isPendingInputEventHandling","currentInputLength","newInputLength","onInitalize","htmlNode","getWord","setIsSuggesting","handleAutoComplete","onDispose","elementIdPrefix","isAndroidKeyboardEvent","calcInputLength","onKeyDownEvent","onAndroidInputEvent","shouldHandleKeyUpEvent","onKeyUpDomEvent","setLastKnownRange","onIsSuggestingChanged","setAriaOwns","setAriaActiveDescendant","cancelDefaultKeyDownEvent","stopImmediatePropagation","getIdValue","getNamedItem","getWordBeforeCursor","replacementNode","getRangeUntilAt","positionContentSearcher","startPos","endPos","hasMatched","isModifierKey","wordBeforeCursor","trimmedWordBeforeCursor","wordBeforeCursorWithoutTriggerChar","queryStringUpdated","setCursorPoint","rangeNode","nodeBeforeCursor","setRangeStart","nodeBeforeNodeBeforeCursor","detach","targetPoint","bufferZone","shiftHighlight","isHorizontal","getSelectedIndex","selectOption","tryRemoveNode","nodeAfterCursor","nodeId","getParentNodeIfTextNode","onRemove","inputType","getInlineElementBeforeCursor","wordFromRange","wordFromCache","nodeOffset","suggestionsLabel","selectedIndex","suggestionLabelPrefix","charCode","shadowEditCoordinatesBackup","firstTable","lastTarget","firstTarget","preventKeyUp","startedSelection","targetTable","mouseMoveDisposer","DeleteTableContents","clearState","handleEnteredShadowEdit","handleLeavingShadowEdit","handleMouseDownEvent","handleKeyUpEvent","handleScrollEvent","TABLE_CELL_SELECTOR","deleteNodeContents","selectNodeContents","getCellAtCursor","newTarget","setData","shouldConvertToTableSelection","updateSelection","getCellCoordinates","getNextTD","prepareSelection","anchorNode","anchorOffset","isBeginAboveEnd","targetPosition","handleKeySelectionInsideTable","contentRange","IGNORE_KEY_UP_KEYS","selectionInsideTableMouseMove","detail","tripleClick","coord","getTableAtCursor","getOnMouseUp","isNewTDContainingFirstTable","restoreSelection","first","firstCord","lastCord","eventTarget","cellInput","indexY","indexX","r1","r2","newFirst","newLast","fixCoordinates","rowsCells","isNewTargetTableContained","isFirstTargetTableContained","firstTargetRange","onShowHelperElement","anchorContainerSelector","onMouseMoveDisposer","tableRectMap","tableEditor","onMouseOut","ev","relatedTarget","isOwnedElement","setTableEditor","buttons","ensureTableRects","editorWindow","scrollX","scrollY","invalidateTableRects","mousemove","disposeTableEditor","isEditing","currentTarget","normalizeRect","onStart","currentCells","nextCells","initialX","onDraggingHorizontal","onDraggingVertical","getHorizontalDistance","canResizeColumns","isLastCell","isShiftPressed","newWidthList","wordBreak","set","toLeft","setHorizontalPosition","CELL_RESIZER_WIDTH","setVerticalPosition","onEnd","anchorContainer","createElementData","featureHandler","TOP_OR_SIDE","onChanged","horizontalInserter","verticalInserter","horizontalResizer","verticalResizer","tableResizer","onFinishEditing","isCurrentlyEditing","onStartTableResize","onStartResize","onStartCellResize","disposeTableResizer","onInserted","onSelect","getOnMouseOut","setEditorFeatures","disposeCellResizers","disposeTableInserter","disposeTableSelector","firstCellRect","topOrSide","topOrSideBinary","tableRect","tdRect","lessThanBottom","lessThanRight","moreThanLeft","isOnLeftOrRight","isOnRightHalf","setInserterTd","tdAbove","tdAboveRect","isTdNotAboveMerged","setResizingTd","inserter","newInserter","disposeTableEditFeature","resizer","onInsert","viewPort","inserterColor","getInsertElementData","TableInsertHandler","insertTd","inserted","onMouseOutEvent","TABLE_RESIZER_LENGTH","originalRect","ratioX","ratioY","shouldResizeX","shouldResizeY","isTableBottomVisible","visibility","setDivPosition","hideResizer","visibleViewport","containerRect","onFinishDragging","isTableTopVisible","TABLE_SELECTOR_LENGTH","TableSelectorFeature","ENTITY_TYPE","watermark","customClass","showHideWatermark","watermarks","isShowing","removeWatermark","newEntity","insertEntity","spellcheck","CompatibleAlignment","CompatibleBulletListType","CompatibleCapitalization","CompatibleChangeSource","CompatibleClearFormatMode","CompatibleColorTransformDirection","CompatibleContentPosition","CompatibleContentType","CompatibleContentTypePrefix","CompatibleDarkModeDatasetNames","CompatibleDefinitionType","CompatibleDelimiterClasses","CompatibleDirection","CompatibleDocumentCommand","CompatibleDocumentPosition","CompatibleEntityClasses","CompatibleEntityOperation","CompatibleExperimentalFeatures","CompatibleFontSizeChange","CompatibleGetContentMode","CompatibleImageEditOperation","CompatibleIndentation","CompatibleKeys","CompatibleKnownAnnounceStrings","CompatibleKnownCreateElementDataIndex","CompatibleKnownPasteSourceType","CompatibleListType","CompatibleNodeType","CompatibleNumberingListType","CompatiblePasteType","CompatiblePluginEventType","CompatiblePositionType","CompatibleQueryScope","CompatibleRegionType","CompatibleSelectionRangeTypes","CompatibleTableBorderFormat","CompatibleTableOperation","Alignment","BulletListType","Capitalization","ChangeSource","ClearFormatMode","ColorTransformDirection","ContentPosition","ContentType","ContentTypePrefix","DarkModeDatasetNames","DefinitionType","DelimiterClasses","Direction","DocumentCommand","DocumentPosition","EntityClasses","EntityOperation","ExperimentalFeatures","FontSizeChange","GetContentMode","ImageEditOperation","Indentation","Keys","KnownAnnounceStrings","KnownCreateElementDataIndex","KnownPasteSourceType","ListType","NodeType","NumberingListType","PasteType","PluginEventType","PositionType","QueryScope","RegionType","SelectionRangeTypes","TableBorderFormat","TableOperation","additionalPlugins","HyperLink","Paste","ContentEdit","extendStatics","setPrototypeOf","__proto__","__extends","TypeError","String","__","create","__assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","Reflect","decorate","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","descriptor","done","access","addInitializer","init","__runInitializers","thisArg","useValue","__propKey","__setFunctionName","description","configurable","__metadata","metadataValue","__awaiter","_arguments","generator","reject","fulfilled","rejected","__generator","sent","trys","ops","verb","Symbol","iterator","op","__createBinding","o","k2","__esModule","writable","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","jl","__spreadArray","pack","__await","__asyncGenerator","asyncIterator","resume","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__setModuleDefault","__importStar","mod","__importDefault","__classPrivateFieldGet","receiver","__classPrivateFieldSet","__classPrivateFieldIn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","prop","toStringTag","__webpack_exports__"],"sourceRoot":""}